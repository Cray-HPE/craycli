{
    "openapi": "3.0.0",
    "x-origin": [
        {
            "url": "https://stash.us.cray.com/projects/HMS/repos/hms-badger-api/browse/api/swagger.yaml?raw&at=refs%2Fheads%2Fmaster",
            "format": "swagger",
            "version": "2.0",
            "converter": {
                "url": "https://github.com/mermade/oas-kit",
                "version": "5.2.5"
            }
        }
    ],
    "info": {
        "description": "The Badger API allows the user to run an application suite  either on demand or at a prescribed time. \n\nIt is intended for use by manufacturing, support engineers,  system administrators, or testers who   repeatedly run suites of diagnostics, benchmarks, or application  codes used for troubleshooting against compute nodes.   Badger uses a workload manager to run a compute workload, and persists the output of the compute jobs to storage.\n\nBadger is an evolution from Workload Test Suite (WTS).  Whereas WTS was an application,  Badger is a service and interacts with other system services.   Badger runs applications that have their artifacts stored in the S3 badger bucket. It calls the Hardware State Manager to get the node  states and node properties in the system. Badger uses a workload manager to execute a workload. Currently, SLURM is supported.\n\n\n\n\n  ## Resources\n\n\n  ### /applications\n\n\nDefine the executables that a user wants to run on compute nodes.\n\n\n  ### /suites\n\n\nGroup applications into an ordered list.\n\n\n  ### /sessions\n\n\nExecute suites of applications. \n\n\n\n\n  ## Workflow\n\n \n * Applications are contained in Badger-specific tar files, \nsometimes referred to as \"gumballs\". These gumballs must be present in the S3 badger bucket.  If the gumball not uploaded into S3 using the Badger loader, then the user must load the tarfile into S3.  Obtain the S3 object key for the tarfile and use it for POST /applications.\n\n\n\n * POST /applications  \nCreate a reference to application code and arguments.  An application defines the arguments, the workload manager or  cluster manager invocation, as well as a pointer to the different  versions of the executable  that can be run on the compute nodes.\n\n * POST /suite\nCreate a suite. A suite is an ordered list of applications,  where each application is executed serially on the requested compute nodes.\n\n * POST /sessions\nCreate a session. A session is a planned or a completed execution of a suite.  A session has a single suite,  and a resource list (node list) that the suite should target when it runs.   The system will attempt to launch the session.   Sends requests to a workload manager.  Currently, SLURM is supported.\n\n * GET /sessions\nWatch progress of the session, by application.\n\n * DELETE /sessions/{sessionID}/instance\nHalt running instance of the session.\n \n * DELETE /sessions/{sessionID}\nRemove all session metadata.  Leaves files on filesystem.\n",
        "version": "1.0.0",
        "title": "Badger Service API",
        "termsOfService": "none",
        "license": {
            "name": "All rights reserved"
        }
    },
    "tags": [
        {
            "name": "suite",
            "description": "A suite is an ordered list of applications.  Applications will be executed serially, in the listed order."
        },
        {
            "name": "application",
            "description": "An application is the 'entity' that should be executed.  It describes the execution options that should be honored for the application."
        },
        {
            "name": "session",
            "description": "A session is a planned or a completed execution of a suite. "
        }
    ],
    "paths": {
        "/version": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Returns version string",
                "description": "Returns semantic version string.",
                "operationId": "GetVersion",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string",
                                            "example": "1.1.0"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/liveness": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Verifies that routing is viable",
                "description": "Verifies that routing is viable",
                "operationId": "Liveness",
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/readiness": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Returns a high level assessment of API readiness.",
                "description": "Verifies that DB connection is valid.",
                "operationId": "Readiness",
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/applications": {
            "get": {
                "tags": [
                    "application"
                ],
                "summary": "Return a collection of applications",
                "description": "Define the arguments, the workload manager or cluster manager invocation, as well as a pointer to the different versions of the executable that can be run on the compute resource.  Global list of applications. Not user-specific.",
                "operationId": "getApplications",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "applications": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Memtester"
                                                    }
                                                }
                                            },
                                            "description": "collection of applications"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "application"
                ],
                "summary": "Create a metadata for application resource",
                "operationId": "addApplication",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "linkToExe"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                                        "readOnly": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Memtester"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "open source memtester"
                                    },
                                    "groupByMemorySize": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "If true, group app execution by the different memory sizes on available hardware."
                                    },
                                    "groupByCoreCount": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "If true, group app execution by the different core counts on available hardware."
                                    },
                                    "invocationPerNode": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "If true, individually execute application per node, otherwise group with others into a single execution (honoring the other grouping clauses)."
                                    },
                                    "outputFilePerNode": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "If true,  application output is collected individually per node, otherwise group into a single file per execution"
                                    },
                                    "argString": {
                                        "type": "string",
                                        "example": "-m 8gb",
                                        "description": "Argument that is passed to badger_run.sh. Gumballs have badger_run.sh and badger_analyze.sh, by design."
                                    },
                                    "invocationString": {
                                        "type": "string",
                                        "description": "The name (and value) of the argument(s) that is passed to the WLM before execution.  These are WLM arguments, not badger arguments.  The first set of special expressions that are supported  '--number-of-tasks-per-node=n', '-number-of-tasks-per-core', '--number-of-cpus-per-task' & '--memory-size-per-node=n';  these values can be equal to some integer or can be set to '@auto'.   If set to '@auto the amount of memory or number of tasks will be  controlled by number of core and memory size (MiB) for the application grouping.  These options MUST be used in conjunction  with 'groupByMemorySize' and 'groupByCoreCount', else failures will ensue. The next set of special expressions that are supported '--add-lib-path=\"\"' & '-add-env-var=\"\"'; these values are strings that allow for arbitrary library and environment variables to be set for the application.\n",
                                        "example": "--number-of-tasks-per-node=@auto --memory-per-node=10000 --cc=none"
                                    },
                                    "createdTimestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Application object creation time",
                                        "readOnly": true
                                    },
                                    "lastMaintenanceTimestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Application object creation modification time",
                                        "readOnly": true
                                    },
                                    "linkToExe": {
                                        "type": "string",
                                        "description": "The S3 object key for the tarball that should be downloaded and executed from the S3 badger bucket.",
                                        "example": "memtester.tar"
                                    }
                                }
                            }
                        }
                    },
                    "description": "application to be created",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Application created",
                        "headers": {
                            "Location": {
                                "description": "ID of the created application",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/applications/{applicationID}": {
            "get": {
                "tags": [
                    "application"
                ],
                "summary": "Retrieve application identified by applicationID",
                "operationId": "getApplicationByApplicationId",
                "parameters": [
                    {
                        "name": "applicationID",
                        "in": "path",
                        "description": "applicationID to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "name",
                                        "linkToExe"
                                    ],
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                                            "readOnly": true
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Memtester"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "open source memtester"
                                        },
                                        "groupByMemorySize": {
                                            "type": "boolean",
                                            "default": false,
                                            "description": "If true, group app execution by the different memory sizes on available hardware."
                                        },
                                        "groupByCoreCount": {
                                            "type": "boolean",
                                            "default": false,
                                            "description": "If true, group app execution by the different core counts on available hardware."
                                        },
                                        "invocationPerNode": {
                                            "type": "boolean",
                                            "default": false,
                                            "description": "If true, individually execute application per node, otherwise group with others into a single execution (honoring the other grouping clauses)."
                                        },
                                        "outputFilePerNode": {
                                            "type": "boolean",
                                            "default": false,
                                            "description": "If true,  application output is collected individually per node, otherwise group into a single file per execution"
                                        },
                                        "argString": {
                                            "type": "string",
                                            "example": "-m 8gb",
                                            "description": "Argument that is passed to badger_run.sh. Gumballs have badger_run.sh and badger_analyze.sh, by design."
                                        },
                                        "invocationString": {
                                            "type": "string",
                                            "description": "The name (and value) of the argument(s) that is passed to the WLM before execution.  These are WLM arguments, not badger arguments.  The first set of special expressions that are supported  '--number-of-tasks-per-node=n', '-number-of-tasks-per-core', '--number-of-cpus-per-task' & '--memory-size-per-node=n';  these values can be equal to some integer or can be set to '@auto'.   If set to '@auto the amount of memory or number of tasks will be  controlled by number of core and memory size (MiB) for the application grouping.  These options MUST be used in conjunction  with 'groupByMemorySize' and 'groupByCoreCount', else failures will ensue. The next set of special expressions that are supported '--add-lib-path=\"\"' & '-add-env-var=\"\"'; these values are strings that allow for arbitrary library and environment variables to be set for the application.\n",
                                            "example": "--number-of-tasks-per-node=@auto --memory-per-node=10000 --cc=none"
                                        },
                                        "createdTimestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Application object creation time",
                                            "readOnly": true
                                        },
                                        "lastMaintenanceTimestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Application object creation modification time",
                                            "readOnly": true
                                        },
                                        "linkToExe": {
                                            "type": "string",
                                            "description": "The S3 object key for the tarball that should be downloaded and executed from the S3 badger bucket.",
                                            "example": "memtester.tar"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Application not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "application"
                ],
                "summary": "Updates an application",
                "operationId": "updateApplication",
                "parameters": [
                    {
                        "name": "applicationID",
                        "in": "path",
                        "description": "applicationID to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "linkToExe"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                                        "readOnly": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Memtester"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "open source memtester"
                                    },
                                    "groupByMemorySize": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "If true, group app execution by the different memory sizes on available hardware."
                                    },
                                    "groupByCoreCount": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "If true, group app execution by the different core counts on available hardware."
                                    },
                                    "invocationPerNode": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "If true, individually execute application per node, otherwise group with others into a single execution (honoring the other grouping clauses)."
                                    },
                                    "outputFilePerNode": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "If true,  application output is collected individually per node, otherwise group into a single file per execution"
                                    },
                                    "argString": {
                                        "type": "string",
                                        "example": "-m 8gb",
                                        "description": "Argument that is passed to badger_run.sh. Gumballs have badger_run.sh and badger_analyze.sh, by design."
                                    },
                                    "invocationString": {
                                        "type": "string",
                                        "description": "The name (and value) of the argument(s) that is passed to the WLM before execution.  These are WLM arguments, not badger arguments.  The first set of special expressions that are supported  '--number-of-tasks-per-node=n', '-number-of-tasks-per-core', '--number-of-cpus-per-task' & '--memory-size-per-node=n';  these values can be equal to some integer or can be set to '@auto'.   If set to '@auto the amount of memory or number of tasks will be  controlled by number of core and memory size (MiB) for the application grouping.  These options MUST be used in conjunction  with 'groupByMemorySize' and 'groupByCoreCount', else failures will ensue. The next set of special expressions that are supported '--add-lib-path=\"\"' & '-add-env-var=\"\"'; these values are strings that allow for arbitrary library and environment variables to be set for the application.\n",
                                        "example": "--number-of-tasks-per-node=@auto --memory-per-node=10000 --cc=none"
                                    },
                                    "createdTimestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Application object creation time",
                                        "readOnly": true
                                    },
                                    "lastMaintenanceTimestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Application object creation modification time",
                                        "readOnly": true
                                    },
                                    "linkToExe": {
                                        "type": "string",
                                        "description": "The S3 object key for the tarball that should be downloaded and executed from the S3 badger bucket.",
                                        "example": "memtester.tar"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Application to update",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Application updated"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Application not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "application"
                ],
                "summary": "Delete an application",
                "operationId": "deleteApplication",
                "parameters": [
                    {
                        "name": "applicationID",
                        "in": "path",
                        "description": "applicationID to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application deleted"
                    },
                    "404": {
                        "description": "Application not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/applications/{applicationID}/suites": {
            "get": {
                "tags": [
                    "application"
                ],
                "summary": "Return a collection of suitesIDs the applicationID is included in.",
                "operationId": "GetApplicationSuitesByIDs",
                "parameters": [
                    {
                        "name": "applicationID",
                        "in": "path",
                        "description": "applicationID to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "suites": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "44034e09-a39f-4ade-9c03-9a99176176a6"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Manufacturing_MemorySuite"
                                                    }
                                                }
                                            },
                                            "description": "collection of suites"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Application not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/suites": {
            "get": {
                "tags": [
                    "suite"
                ],
                "summary": "Return a collection of suites",
                "operationId": "getSuites",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "suites": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "44034e09-a39f-4ade-9c03-9a99176176a6"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Manufacturing_MemorySuite"
                                                    }
                                                }
                                            },
                                            "description": "collection of suites"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "suite"
                ],
                "summary": "Create a new suite",
                "operationId": "addSuite",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "applicationOrder"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Identifies this suite. Referenced by Session object as SuiteID.",
                                        "type": "string",
                                        "format": "uuid",
                                        "readOnly": true,
                                        "example": "44034e09-a39f-4ade-9c03-9a99176176a6"
                                    },
                                    "name": {
                                        "description": "Suite name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Manufacturing_MemorySuite"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Describes suite contents",
                                        "example": "Suite that includes memtester, numa test and streams."
                                    },
                                    "applicationOrder": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "applicationID"
                                            ],
                                            "properties": {
                                                "applicationID": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                                                    "description": "The applicationID of the application to link"
                                                },
                                                "applicationName": {
                                                    "type": "string",
                                                    "readOnly": true,
                                                    "example": "memtester",
                                                    "description": "Name of the application"
                                                },
                                                "runOrder": {
                                                    "type": "integer",
                                                    "readOnly": true,
                                                    "description": "Execution order within a suite",
                                                    "example": 0
                                                }
                                            }
                                        },
                                        "minItems": 1,
                                        "description": "Applications to run in this suite. A Suite must contain at least 1 application."
                                    },
                                    "createdTimestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Suite creation time",
                                        "readOnly": true
                                    },
                                    "lastMaintenanceTimestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Suite modification time",
                                        "readOnly": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "suite to be created",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Suite created",
                        "headers": {
                            "Location": {
                                "description": "ID of the created suite",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/suites/{suiteID}/sessions": {
            "get": {
                "tags": [
                    "suite"
                ],
                "summary": "Retrieve sessions the suite is included in.",
                "operationId": "GetSessionsFromSuite",
                "parameters": [
                    {
                        "name": "suiteID",
                        "in": "path",
                        "description": "suiteID of sessions to return",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ids": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Suite not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/suites/{suiteID}": {
            "get": {
                "tags": [
                    "suite"
                ],
                "summary": "Retrieve a suite identified by suiteID",
                "operationId": "getSuiteBySuiteId",
                "parameters": [
                    {
                        "name": "suiteID",
                        "in": "path",
                        "description": "suiteID of suite to return",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "name",
                                        "applicationOrder"
                                    ],
                                    "properties": {
                                        "id": {
                                            "description": "Identifies this suite. Referenced by Session object as SuiteID.",
                                            "type": "string",
                                            "format": "uuid",
                                            "readOnly": true,
                                            "example": "44034e09-a39f-4ade-9c03-9a99176176a6"
                                        },
                                        "name": {
                                            "description": "Suite name",
                                            "type": "string",
                                            "maxLength": 255,
                                            "example": "Manufacturing_MemorySuite"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "Describes suite contents",
                                            "example": "Suite that includes memtester, numa test and streams."
                                        },
                                        "applicationOrder": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "applicationID"
                                                ],
                                                "properties": {
                                                    "applicationID": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                                                        "description": "The applicationID of the application to link"
                                                    },
                                                    "applicationName": {
                                                        "type": "string",
                                                        "readOnly": true,
                                                        "example": "memtester",
                                                        "description": "Name of the application"
                                                    },
                                                    "runOrder": {
                                                        "type": "integer",
                                                        "readOnly": true,
                                                        "description": "Execution order within a suite",
                                                        "example": 0
                                                    }
                                                }
                                            },
                                            "minItems": 1,
                                            "description": "Applications to run in this suite. A Suite must contain at least 1 application."
                                        },
                                        "createdTimestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Suite creation time",
                                            "readOnly": true
                                        },
                                        "lastMaintenanceTimestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Suite modification time",
                                            "readOnly": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Suite not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "suite"
                ],
                "summary": "Updates a suite",
                "operationId": "updateSuite",
                "parameters": [
                    {
                        "name": "suiteID",
                        "in": "path",
                        "description": "suiteID to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "applicationOrder"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Identifies this suite. Referenced by Session object as SuiteID.",
                                        "type": "string",
                                        "format": "uuid",
                                        "readOnly": true,
                                        "example": "44034e09-a39f-4ade-9c03-9a99176176a6"
                                    },
                                    "name": {
                                        "description": "Suite name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Manufacturing_MemorySuite"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Describes suite contents",
                                        "example": "Suite that includes memtester, numa test and streams."
                                    },
                                    "applicationOrder": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "applicationID"
                                            ],
                                            "properties": {
                                                "applicationID": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                                                    "description": "The applicationID of the application to link"
                                                },
                                                "applicationName": {
                                                    "type": "string",
                                                    "readOnly": true,
                                                    "example": "memtester",
                                                    "description": "Name of the application"
                                                },
                                                "runOrder": {
                                                    "type": "integer",
                                                    "readOnly": true,
                                                    "description": "Execution order within a suite",
                                                    "example": 0
                                                }
                                            }
                                        },
                                        "minItems": 1,
                                        "description": "Applications to run in this suite. A Suite must contain at least 1 application."
                                    },
                                    "createdTimestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Suite creation time",
                                        "readOnly": true
                                    },
                                    "lastMaintenanceTimestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Suite modification time",
                                        "readOnly": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "suite object to update",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "suite updated"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Suite not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "suite"
                ],
                "summary": "Delete a suite",
                "operationId": "deleteSuiteBySuiteID",
                "parameters": [
                    {
                        "name": "suiteID",
                        "in": "path",
                        "description": "suiteID to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "suite deleted"
                    },
                    "404": {
                        "description": "Suite not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sessions": {
            "get": {
                "tags": [
                    "session"
                ],
                "summary": "Retrieves the collection of sessions",
                "operationId": "GetSessions",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "sessions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "7ce3fb2d-ef17-44a9-8f68-31e26d069f3c"
                                                    },
                                                    "suiteID": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05"
                                                    },
                                                    "suiteName": {
                                                        "type": "string",
                                                        "example": "Manufacturing_MemorySuite"
                                                    },
                                                    "startProcessTimestamp": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readOnly": true,
                                                        "example": "2019-03-25T15:04:21.167Z"
                                                    },
                                                    "finishTimestamp": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readOnly": true,
                                                        "example": "2019-03-25T17:25:00.007Z"
                                                    },
                                                    "analysisStatus": {
                                                        "type": "string",
                                                        "enum": [
                                                            "PENDING",
                                                            "PASSED",
                                                            "FAILED"
                                                        ],
                                                        "readOnly": true,
                                                        "example": "PASSED"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "session"
                ],
                "summary": "Creates a new session",
                "operationId": "AddSession",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "workingDirectory",
                                    "startProcessTimestamp",
                                    "suiteID"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "7ce3fb2d-ef17-44a9-8f68-31e26d069f3c",
                                        "readOnly": true,
                                        "description": "Identifies this Session Object."
                                    },
                                    "suiteID": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "44034e09-a39f-4ade-9c03-9a99176176a6",
                                        "description": "Identifies Suite to execute.  Refers to Suite object property, id."
                                    },
                                    "suiteName": {
                                        "type": "string",
                                        "readOnly": true,
                                        "example": "Manufacturing_MemorySuite",
                                        "description": "the name of the suite"
                                    },
                                    "nodeList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "xname": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "description": "List of nodes to target. Empty set implies ALL available nodes. This field is only used when creating a session, otherwise it will be null."
                                    },
                                    "finishTimestamp": {
                                        "type": "string",
                                        "description": "Time the session finished executing. Will be empty if the job has not run, or is running.",
                                        "example": "2019-03-25T20:04:21.167Z\"",
                                        "format": "date-time",
                                        "readOnly": true
                                    },
                                    "startProcessTimestamp": {
                                        "type": "string",
                                        "description": "Time to start the session",
                                        "example": "2019-03-25T15:04:21.167Z",
                                        "format": "date-time"
                                    },
                                    "dropDeadTimestamp": {
                                        "type": "string",
                                        "example": "2019-03-25T20:04:21.167Z",
                                        "description": "Time to kill the session if it is still running",
                                        "format": "date-time"
                                    },
                                    "loopSuiteUntilTimestamp": {
                                        "type": "string",
                                        "example": "2019-03-25T20:04:21.167Z",
                                        "description": "Repeatedly loop the suite until this time. \nFor example, if the loopSuiteUntilTimestamp\nis +8hr from the start time, and if the suite takes 2.5 hours to run, \nthe session will\nrepeat the suite ~3+ times, killing it once the 8hrs is elapsed.\n",
                                        "format": "date-time"
                                    },
                                    "doNotStartProcessAfterTimestamp": {
                                        "type": "string",
                                        "description": "Do not attempt to start the session after this time.",
                                        "example": "2019-03-25T17:04:21.167Z",
                                        "format": "date-time"
                                    },
                                    "workingDirectory": {
                                        "type": "string",
                                        "maxLength": 4096,
                                        "description": "Dirname for the session, prepended in sessionDirectory.",
                                        "example": "/lus/manf/memsuite"
                                    },
                                    "sessionDirectory": {
                                        "type": "string",
                                        "maxLength": 4096,
                                        "description": "Dirname to the session. Necessarily derived from workingDirectory ??",
                                        "readOnly": true,
                                        "example": "/lus/manf/memsuite/2019-02-02T12:12:00.000Z/"
                                    },
                                    "cleanup": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "If true, remove any created files, excluding the output, from  the execution\n"
                                    },
                                    "cleaned": {
                                        "type": "boolean",
                                        "description": "True indicates cleanup has run.",
                                        "default": false,
                                        "readOnly": true
                                    },
                                    "applicationOrder": {
                                        "type": "array",
                                        "readOnly": true,
                                        "description": "List of applications that have completed or are in progress. This list may be empty if the session has not been started.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "applicationOrderID": {
                                                    "type": "integer",
                                                    "example": 0,
                                                    "description": "Id of the application order. Used to get more information about the step in the applicationOrder."
                                                },
                                                "runOrder": {
                                                    "type": "integer",
                                                    "example": 0,
                                                    "description": "runOrder of the step. May not be repeated within the applicationOrder."
                                                },
                                                "applicationName": {
                                                    "type": "string",
                                                    "example": "Memtester"
                                                },
                                                "applicationID": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                                                    "description": "Application to run. May be repeated within the applicationOrder."
                                                },
                                                "startTimestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "Start time of the step"
                                                },
                                                "finishTimestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "Completion time of the step. Empty if the step is running."
                                                },
                                                "analysisStatus": {
                                                    "type": "string",
                                                    "enum": [
                                                        "PENDING",
                                                        "PASSED",
                                                        "FAILED"
                                                    ],
                                                    "readOnly": true,
                                                    "example": "PASSED"
                                                },
                                                "nodeListCounts": {
                                                    "type": "object",
                                                    "properties": {
                                                        "requested": {
                                                            "type": "integer",
                                                            "description": "the number of nodes that were requested during the order or step"
                                                        },
                                                        "utilized": {
                                                            "type": "integer",
                                                            "description": "the number of nodes that were utilized during the order or step"
                                                        },
                                                        "unavailable": {
                                                            "type": "integer",
                                                            "description": "the number of nodes that were unavailable during the order or step"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "analysisStatus": {
                                        "type": "string",
                                        "enum": [
                                            "PENDING",
                                            "PASSED",
                                            "FAILED"
                                        ],
                                        "readOnly": true,
                                        "example": "PASSED"
                                    },
                                    "nodeListCounts": {
                                        "type": "object",
                                        "properties": {
                                            "userRequested": {
                                                "type": "integer",
                                                "description": "The count of user requested nodes",
                                                "example": 0,
                                                "readOnly": true
                                            },
                                            "requestedPopulation": {
                                                "type": "integer",
                                                "description": "The count of nodes in the requested node population",
                                                "example": 0,
                                                "readOnly": true
                                            },
                                            "underUtilized": {
                                                "type": "integer",
                                                "description": "The count of under utilized nodes",
                                                "example": 0,
                                                "readOnly": true
                                            },
                                            "notFound": {
                                                "type": "integer",
                                                "description": "The count of not found nodes",
                                                "example": 0,
                                                "readOnly": true
                                            }
                                        }
                                    },
                                    "userRequestedNodeList": {
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "xname": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "description": "List of nodes specified by the user to target. Empty set implies ALL available nodes. This field is only used when creating a session, otherwise it will be null."
                                    },
                                    "requestedNodeList": {
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "xname": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "description": "List of nodes that have been requested for use for this session. The requested node list and user requested node list will be equivalent if the user provided a node list. Otherwise if a node list is not provided this field will be dynamically generated to include all requested nodes from the application steps."
                                    },
                                    "underUtilizedNodeList": {
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "xname": {
                                                    "type": "string"
                                                },
                                                "notUtilizedInCount": {
                                                    "type": "integer",
                                                    "description": "Count of application orders that this node was not apart of"
                                                },
                                                "missingFromApplicationOrders": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "applicationOrderID": {
                                                                "type": "integer"
                                                            },
                                                            "applicationName": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "description": "Application orders that this node is missing from"
                                                }
                                            }
                                        },
                                        "description": "List of nodes that were under utilized during the session. This means that the node was requested in an application step at least once, but was unavailable at least once."
                                    },
                                    "notFound": {
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "xname": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "description": "List of nodes that have been found. A node is considered not found when it does not exist as a requested node in any of the sessions application steps, but is present in the user requested node list."
                                    }
                                }
                            }
                        }
                    },
                    "description": "session to be created",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created session",
                        "headers": {
                            "Location": {
                                "description": "the ID of the created session",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Suite not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sessions/{sessionID}": {
            "get": {
                "tags": [
                    "session"
                ],
                "summary": "Retrieves session by sessionID",
                "operationId": "GetSessionByIDs",
                "parameters": [
                    {
                        "name": "sessionID",
                        "in": "path",
                        "description": "sessionID of sessionID to return",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "workingDirectory",
                                        "startProcessTimestamp",
                                        "suiteID"
                                    ],
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "7ce3fb2d-ef17-44a9-8f68-31e26d069f3c",
                                            "readOnly": true,
                                            "description": "Identifies this Session Object."
                                        },
                                        "suiteID": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "44034e09-a39f-4ade-9c03-9a99176176a6",
                                            "description": "Identifies Suite to execute.  Refers to Suite object property, id."
                                        },
                                        "suiteName": {
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "Manufacturing_MemorySuite",
                                            "description": "the name of the suite"
                                        },
                                        "nodeList": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "xname": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "description": "List of nodes to target. Empty set implies ALL available nodes. This field is only used when creating a session, otherwise it will be null."
                                        },
                                        "finishTimestamp": {
                                            "type": "string",
                                            "description": "Time the session finished executing. Will be empty if the job has not run, or is running.",
                                            "example": "2019-03-25T20:04:21.167Z\"",
                                            "format": "date-time",
                                            "readOnly": true
                                        },
                                        "startProcessTimestamp": {
                                            "type": "string",
                                            "description": "Time to start the session",
                                            "example": "2019-03-25T15:04:21.167Z",
                                            "format": "date-time"
                                        },
                                        "dropDeadTimestamp": {
                                            "type": "string",
                                            "example": "2019-03-25T20:04:21.167Z",
                                            "description": "Time to kill the session if it is still running",
                                            "format": "date-time"
                                        },
                                        "loopSuiteUntilTimestamp": {
                                            "type": "string",
                                            "example": "2019-03-25T20:04:21.167Z",
                                            "description": "Repeatedly loop the suite until this time. \nFor example, if the loopSuiteUntilTimestamp\nis +8hr from the start time, and if the suite takes 2.5 hours to run, \nthe session will\nrepeat the suite ~3+ times, killing it once the 8hrs is elapsed.\n",
                                            "format": "date-time"
                                        },
                                        "doNotStartProcessAfterTimestamp": {
                                            "type": "string",
                                            "description": "Do not attempt to start the session after this time.",
                                            "example": "2019-03-25T17:04:21.167Z",
                                            "format": "date-time"
                                        },
                                        "workingDirectory": {
                                            "type": "string",
                                            "maxLength": 4096,
                                            "description": "Dirname for the session, prepended in sessionDirectory.",
                                            "example": "/lus/manf/memsuite"
                                        },
                                        "sessionDirectory": {
                                            "type": "string",
                                            "maxLength": 4096,
                                            "description": "Dirname to the session. Necessarily derived from workingDirectory ??",
                                            "readOnly": true,
                                            "example": "/lus/manf/memsuite/2019-02-02T12:12:00.000Z/"
                                        },
                                        "cleanup": {
                                            "type": "boolean",
                                            "default": false,
                                            "description": "If true, remove any created files, excluding the output, from  the execution\n"
                                        },
                                        "cleaned": {
                                            "type": "boolean",
                                            "description": "True indicates cleanup has run.",
                                            "default": false,
                                            "readOnly": true
                                        },
                                        "applicationOrder": {
                                            "type": "array",
                                            "readOnly": true,
                                            "description": "List of applications that have completed or are in progress. This list may be empty if the session has not been started.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "applicationOrderID": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "description": "Id of the application order. Used to get more information about the step in the applicationOrder."
                                                    },
                                                    "runOrder": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "description": "runOrder of the step. May not be repeated within the applicationOrder."
                                                    },
                                                    "applicationName": {
                                                        "type": "string",
                                                        "example": "Memtester"
                                                    },
                                                    "applicationID": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                                                        "description": "Application to run. May be repeated within the applicationOrder."
                                                    },
                                                    "startTimestamp": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "Start time of the step"
                                                    },
                                                    "finishTimestamp": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "Completion time of the step. Empty if the step is running."
                                                    },
                                                    "analysisStatus": {
                                                        "type": "string",
                                                        "enum": [
                                                            "PENDING",
                                                            "PASSED",
                                                            "FAILED"
                                                        ],
                                                        "readOnly": true,
                                                        "example": "PASSED"
                                                    },
                                                    "nodeListCounts": {
                                                        "type": "object",
                                                        "properties": {
                                                            "requested": {
                                                                "type": "integer",
                                                                "description": "the number of nodes that were requested during the order or step"
                                                            },
                                                            "utilized": {
                                                                "type": "integer",
                                                                "description": "the number of nodes that were utilized during the order or step"
                                                            },
                                                            "unavailable": {
                                                                "type": "integer",
                                                                "description": "the number of nodes that were unavailable during the order or step"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "analysisStatus": {
                                            "type": "string",
                                            "enum": [
                                                "PENDING",
                                                "PASSED",
                                                "FAILED"
                                            ],
                                            "readOnly": true,
                                            "example": "PASSED"
                                        },
                                        "nodeListCounts": {
                                            "type": "object",
                                            "properties": {
                                                "userRequested": {
                                                    "type": "integer",
                                                    "description": "The count of user requested nodes",
                                                    "example": 0,
                                                    "readOnly": true
                                                },
                                                "requestedPopulation": {
                                                    "type": "integer",
                                                    "description": "The count of nodes in the requested node population",
                                                    "example": 0,
                                                    "readOnly": true
                                                },
                                                "underUtilized": {
                                                    "type": "integer",
                                                    "description": "The count of under utilized nodes",
                                                    "example": 0,
                                                    "readOnly": true
                                                },
                                                "notFound": {
                                                    "type": "integer",
                                                    "description": "The count of not found nodes",
                                                    "example": 0,
                                                    "readOnly": true
                                                }
                                            }
                                        },
                                        "userRequestedNodeList": {
                                            "type": "array",
                                            "readOnly": true,
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "xname": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "description": "List of nodes specified by the user to target. Empty set implies ALL available nodes. This field is only used when creating a session, otherwise it will be null."
                                        },
                                        "requestedNodeList": {
                                            "type": "array",
                                            "readOnly": true,
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "xname": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "description": "List of nodes that have been requested for use for this session. The requested node list and user requested node list will be equivalent if the user provided a node list. Otherwise if a node list is not provided this field will be dynamically generated to include all requested nodes from the application steps."
                                        },
                                        "underUtilizedNodeList": {
                                            "type": "array",
                                            "readOnly": true,
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "xname": {
                                                        "type": "string"
                                                    },
                                                    "notUtilizedInCount": {
                                                        "type": "integer",
                                                        "description": "Count of application orders that this node was not apart of"
                                                    },
                                                    "missingFromApplicationOrders": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "applicationOrderID": {
                                                                    "type": "integer"
                                                                },
                                                                "applicationName": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "description": "Application orders that this node is missing from"
                                                    }
                                                }
                                            },
                                            "description": "List of nodes that were under utilized during the session. This means that the node was requested in an application step at least once, but was unavailable at least once."
                                        },
                                        "notFound": {
                                            "type": "array",
                                            "readOnly": true,
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "xname": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "description": "List of nodes that have been found. A node is considered not found when it does not exist as a requested node in any of the sessions application steps, but is present in the user requested node list."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "session"
                ],
                "summary": "Updates a session",
                "operationId": "UpdateSession",
                "parameters": [
                    {
                        "name": "sessionID",
                        "in": "path",
                        "description": "sessionID to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "workingDirectory",
                                    "startProcessTimestamp",
                                    "suiteID"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "7ce3fb2d-ef17-44a9-8f68-31e26d069f3c",
                                        "readOnly": true,
                                        "description": "Identifies this Session Object."
                                    },
                                    "suiteID": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "44034e09-a39f-4ade-9c03-9a99176176a6",
                                        "description": "Identifies Suite to execute.  Refers to Suite object property, id."
                                    },
                                    "suiteName": {
                                        "type": "string",
                                        "readOnly": true,
                                        "example": "Manufacturing_MemorySuite",
                                        "description": "the name of the suite"
                                    },
                                    "nodeList": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "xname": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "description": "List of nodes to target. Empty set implies ALL available nodes. This field is only used when creating a session, otherwise it will be null."
                                    },
                                    "finishTimestamp": {
                                        "type": "string",
                                        "description": "Time the session finished executing. Will be empty if the job has not run, or is running.",
                                        "example": "2019-03-25T20:04:21.167Z\"",
                                        "format": "date-time",
                                        "readOnly": true
                                    },
                                    "startProcessTimestamp": {
                                        "type": "string",
                                        "description": "Time to start the session",
                                        "example": "2019-03-25T15:04:21.167Z",
                                        "format": "date-time"
                                    },
                                    "dropDeadTimestamp": {
                                        "type": "string",
                                        "example": "2019-03-25T20:04:21.167Z",
                                        "description": "Time to kill the session if it is still running",
                                        "format": "date-time"
                                    },
                                    "loopSuiteUntilTimestamp": {
                                        "type": "string",
                                        "example": "2019-03-25T20:04:21.167Z",
                                        "description": "Repeatedly loop the suite until this time. \nFor example, if the loopSuiteUntilTimestamp\nis +8hr from the start time, and if the suite takes 2.5 hours to run, \nthe session will\nrepeat the suite ~3+ times, killing it once the 8hrs is elapsed.\n",
                                        "format": "date-time"
                                    },
                                    "doNotStartProcessAfterTimestamp": {
                                        "type": "string",
                                        "description": "Do not attempt to start the session after this time.",
                                        "example": "2019-03-25T17:04:21.167Z",
                                        "format": "date-time"
                                    },
                                    "workingDirectory": {
                                        "type": "string",
                                        "maxLength": 4096,
                                        "description": "Dirname for the session, prepended in sessionDirectory.",
                                        "example": "/lus/manf/memsuite"
                                    },
                                    "sessionDirectory": {
                                        "type": "string",
                                        "maxLength": 4096,
                                        "description": "Dirname to the session. Necessarily derived from workingDirectory ??",
                                        "readOnly": true,
                                        "example": "/lus/manf/memsuite/2019-02-02T12:12:00.000Z/"
                                    },
                                    "cleanup": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "If true, remove any created files, excluding the output, from  the execution\n"
                                    },
                                    "cleaned": {
                                        "type": "boolean",
                                        "description": "True indicates cleanup has run.",
                                        "default": false,
                                        "readOnly": true
                                    },
                                    "applicationOrder": {
                                        "type": "array",
                                        "readOnly": true,
                                        "description": "List of applications that have completed or are in progress. This list may be empty if the session has not been started.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "applicationOrderID": {
                                                    "type": "integer",
                                                    "example": 0,
                                                    "description": "Id of the application order. Used to get more information about the step in the applicationOrder."
                                                },
                                                "runOrder": {
                                                    "type": "integer",
                                                    "example": 0,
                                                    "description": "runOrder of the step. May not be repeated within the applicationOrder."
                                                },
                                                "applicationName": {
                                                    "type": "string",
                                                    "example": "Memtester"
                                                },
                                                "applicationID": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                                                    "description": "Application to run. May be repeated within the applicationOrder."
                                                },
                                                "startTimestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "Start time of the step"
                                                },
                                                "finishTimestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "Completion time of the step. Empty if the step is running."
                                                },
                                                "analysisStatus": {
                                                    "type": "string",
                                                    "enum": [
                                                        "PENDING",
                                                        "PASSED",
                                                        "FAILED"
                                                    ],
                                                    "readOnly": true,
                                                    "example": "PASSED"
                                                },
                                                "nodeListCounts": {
                                                    "type": "object",
                                                    "properties": {
                                                        "requested": {
                                                            "type": "integer",
                                                            "description": "the number of nodes that were requested during the order or step"
                                                        },
                                                        "utilized": {
                                                            "type": "integer",
                                                            "description": "the number of nodes that were utilized during the order or step"
                                                        },
                                                        "unavailable": {
                                                            "type": "integer",
                                                            "description": "the number of nodes that were unavailable during the order or step"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "analysisStatus": {
                                        "type": "string",
                                        "enum": [
                                            "PENDING",
                                            "PASSED",
                                            "FAILED"
                                        ],
                                        "readOnly": true,
                                        "example": "PASSED"
                                    },
                                    "nodeListCounts": {
                                        "type": "object",
                                        "properties": {
                                            "userRequested": {
                                                "type": "integer",
                                                "description": "The count of user requested nodes",
                                                "example": 0,
                                                "readOnly": true
                                            },
                                            "requestedPopulation": {
                                                "type": "integer",
                                                "description": "The count of nodes in the requested node population",
                                                "example": 0,
                                                "readOnly": true
                                            },
                                            "underUtilized": {
                                                "type": "integer",
                                                "description": "The count of under utilized nodes",
                                                "example": 0,
                                                "readOnly": true
                                            },
                                            "notFound": {
                                                "type": "integer",
                                                "description": "The count of not found nodes",
                                                "example": 0,
                                                "readOnly": true
                                            }
                                        }
                                    },
                                    "userRequestedNodeList": {
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "xname": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "description": "List of nodes specified by the user to target. Empty set implies ALL available nodes. This field is only used when creating a session, otherwise it will be null."
                                    },
                                    "requestedNodeList": {
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "xname": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "description": "List of nodes that have been requested for use for this session. The requested node list and user requested node list will be equivalent if the user provided a node list. Otherwise if a node list is not provided this field will be dynamically generated to include all requested nodes from the application steps."
                                    },
                                    "underUtilizedNodeList": {
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "xname": {
                                                    "type": "string"
                                                },
                                                "notUtilizedInCount": {
                                                    "type": "integer",
                                                    "description": "Count of application orders that this node was not apart of"
                                                },
                                                "missingFromApplicationOrders": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "applicationOrderID": {
                                                                "type": "integer"
                                                            },
                                                            "applicationName": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "description": "Application orders that this node is missing from"
                                                }
                                            }
                                        },
                                        "description": "List of nodes that were under utilized during the session. This means that the node was requested in an application step at least once, but was unavailable at least once."
                                    },
                                    "notFound": {
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "xname": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "description": "List of nodes that have been found. A node is considered not found when it does not exist as a requested node in any of the sessions application steps, but is present in the user requested node list."
                                    }
                                }
                            }
                        }
                    },
                    "description": "session to update",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Session updated"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "session"
                ],
                "summary": "Deletes a non running session",
                "description": "To delete a session the session must not currently be running.  If the session is running the session must first be aborted.",
                "operationId": "DeleteSession",
                "parameters": [
                    {
                        "name": "sessionID",
                        "in": "path",
                        "description": "sessionID to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "session deleted"
                    },
                    "400": {
                        "description": "Bad request, the session is probably currently executing.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sessions/{sessionID}/application-orders/{applicationOrderID}": {
            "get": {
                "tags": [
                    "session"
                ],
                "summary": "Retrieves the ordered application of a session by applicationOrderID and by sessionID",
                "operationId": "GetExecutedStepsForSession",
                "parameters": [
                    {
                        "name": "sessionID",
                        "in": "path",
                        "description": "sessionID of session to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "applicationOrderID",
                        "in": "path",
                        "description": "applicationOrderID of applicationOrder to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "sessionID": {
                                            "type": "string",
                                            "format": "uuid",
                                            "readOnly": true,
                                            "example": "7ce3fb2d-ef17-44a9-8f68-31e26d069f3c"
                                        },
                                        "steps": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "stepID": {
                                                        "type": "integer",
                                                        "readOnly": true
                                                    },
                                                    "memorySize": {
                                                        "type": "integer",
                                                        "readOnly": true,
                                                        "example": 16000,
                                                        "description": "memory size in MB"
                                                    },
                                                    "coreCount": {
                                                        "type": "integer",
                                                        "readOnly": true,
                                                        "example": 24
                                                    },
                                                    "queueTimestamp": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readOnly": true,
                                                        "description": "the time the step was submitted to the queue",
                                                        "example": "2019-03-25T15:06:00.000Z"
                                                    },
                                                    "startTimestamp": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readOnly": true,
                                                        "description": "the time the step was started",
                                                        "example": "2019-03-25T15:04:21.167Z"
                                                    },
                                                    "finishTimestamp": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readOnly": true,
                                                        "description": "the time the step was finished.",
                                                        "example": "2019-03-25T16:25:00.000Z"
                                                    },
                                                    "exitCode": {
                                                        "type": "integer",
                                                        "readOnly": true,
                                                        "description": "the exit code from the WLM",
                                                        "example": 0
                                                    },
                                                    "analysisStartTimestamp": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readOnly": true,
                                                        "description": "the time the step analysis was started",
                                                        "example": "2019-03-25T15:04:21.167Z"
                                                    },
                                                    "analysisFinishTimestamp": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readOnly": true,
                                                        "description": "the time the step analysis was finished.",
                                                        "example": "2019-03-25T16:25:00.000Z"
                                                    },
                                                    "analysisExitCode": {
                                                        "type": "integer",
                                                        "readOnly": true,
                                                        "description": "the exit code from the analysis phase",
                                                        "example": 0
                                                    },
                                                    "analysisOutput": {
                                                        "type": "string",
                                                        "readOnly": true,
                                                        "description": "the STDOUT of the analysis phase",
                                                        "example": "PASSED"
                                                    },
                                                    "jobID": {
                                                        "type": "string",
                                                        "readOnly": true,
                                                        "description": "the JobID of the step as created by the WLM",
                                                        "example": 84
                                                    },
                                                    "stepDirectory": {
                                                        "type": "string",
                                                        "readOnly": true,
                                                        "description": "the output directory for a step"
                                                    },
                                                    "tarballDirectory": {
                                                        "type": "string",
                                                        "readOnly": true,
                                                        "description": "the directory the tarball is downloaded to, and cleaned up from"
                                                    },
                                                    "nodeListCounts": {
                                                        "type": "object",
                                                        "properties": {
                                                            "requested": {
                                                                "type": "integer",
                                                                "description": "the number of nodes that were requested during the order or step"
                                                            },
                                                            "utilized": {
                                                                "type": "integer",
                                                                "description": "the number of nodes that were utilized during the order or step"
                                                            },
                                                            "unavailable": {
                                                                "type": "integer",
                                                                "description": "the number of nodes that were unavailable during the order or step"
                                                            }
                                                        }
                                                    },
                                                    "requestedNodeList": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "xname": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "description": "the list of nodes the application was requested to run on."
                                                    },
                                                    "utilizedNodeList": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "xname": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "description": "the list of nodes the application was actually exeuct(ing/ed) on."
                                                    },
                                                    "unavailableNodeList": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "xname": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "description": "the list of nodes the application did not run on."
                                                    }
                                                }
                                            },
                                            "description": "Collection of individual steps executed for an application in a suite"
                                        },
                                        "application": {
                                            "type": "object",
                                            "required": [
                                                "name",
                                                "linkToExe"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                                                    "readOnly": true
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Memtester"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "open source memtester"
                                                },
                                                "groupByMemorySize": {
                                                    "type": "boolean",
                                                    "default": false,
                                                    "description": "If true, group app execution by the different memory sizes on available hardware."
                                                },
                                                "groupByCoreCount": {
                                                    "type": "boolean",
                                                    "default": false,
                                                    "description": "If true, group app execution by the different core counts on available hardware."
                                                },
                                                "invocationPerNode": {
                                                    "type": "boolean",
                                                    "default": false,
                                                    "description": "If true, individually execute application per node, otherwise group with others into a single execution (honoring the other grouping clauses)."
                                                },
                                                "outputFilePerNode": {
                                                    "type": "boolean",
                                                    "default": false,
                                                    "description": "If true,  application output is collected individually per node, otherwise group into a single file per execution"
                                                },
                                                "argString": {
                                                    "type": "string",
                                                    "example": "-m 8gb",
                                                    "description": "Argument that is passed to badger_run.sh. Gumballs have badger_run.sh and badger_analyze.sh, by design."
                                                },
                                                "invocationString": {
                                                    "type": "string",
                                                    "description": "The name (and value) of the argument(s) that is passed to the WLM before execution.  These are WLM arguments, not badger arguments.  The first set of special expressions that are supported  '--number-of-tasks-per-node=n', '-number-of-tasks-per-core', '--number-of-cpus-per-task' & '--memory-size-per-node=n';  these values can be equal to some integer or can be set to '@auto'.   If set to '@auto the amount of memory or number of tasks will be  controlled by number of core and memory size (MiB) for the application grouping.  These options MUST be used in conjunction  with 'groupByMemorySize' and 'groupByCoreCount', else failures will ensue. The next set of special expressions that are supported '--add-lib-path=\"\"' & '-add-env-var=\"\"'; these values are strings that allow for arbitrary library and environment variables to be set for the application.\n",
                                                    "example": "--number-of-tasks-per-node=@auto --memory-per-node=10000 --cc=none"
                                                },
                                                "createdTimestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "Application object creation time",
                                                    "readOnly": true
                                                },
                                                "lastMaintenanceTimestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "Application object creation modification time",
                                                    "readOnly": true
                                                },
                                                "linkToExe": {
                                                    "type": "string",
                                                    "description": "The S3 object key for the tarball that should be downloaded and executed from the S3 badger bucket.",
                                                    "example": "memtester.tar"
                                                }
                                            }
                                        },
                                        "nodeListCounts": {
                                            "type": "object",
                                            "properties": {
                                                "requested": {
                                                    "type": "integer",
                                                    "description": "the number of nodes that were requested during the order or step"
                                                },
                                                "utilized": {
                                                    "type": "integer",
                                                    "description": "the number of nodes that were utilized during the order or step"
                                                },
                                                "unavailable": {
                                                    "type": "integer",
                                                    "description": "the number of nodes that were unavailable during the order or step"
                                                }
                                            }
                                        },
                                        "requestedNodeList": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "xname": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "description": "the list of nodes the application order was requested to run on."
                                        },
                                        "utilizedNodeList": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "xname": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "description": "the list of nodes the application order was actually exeuct(ing/ed) on."
                                        },
                                        "unavailableNodeList": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "xname": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "description": "the list of nodes the application order did not run on."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Session or applicationOrder not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sessions/{sessionID}/instance": {
            "delete": {
                "tags": [
                    "session"
                ],
                "summary": "Aborts a currently running session",
                "operationId": "AbortSessionInstance",
                "parameters": [
                    {
                        "name": "sessionID",
                        "in": "path",
                        "description": "sessionID to abort",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "session abort accepted"
                    },
                    "400": {
                        "description": "bad request, session was probably not in progress",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "session not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "about:blank"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "example": "Detail about this specific problem occurrence. See RFC7807"
                                        },
                                        "instance": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "status": {
                                            "type": "number",
                                            "format": "int32",
                                            "example": 400
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Description of HTTP Status code, e.g. 400"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "https://localhost/apis/badger-api/v1"
        },
        {
            "url": "http://localhost/apis/badger-api/v1"
        }
    ],
    "components": {
        "schemas": {
            "Suite": {
                "type": "object",
                "required": [
                    "name",
                    "applicationOrder"
                ],
                "properties": {
                    "id": {
                        "description": "Identifies this suite. Referenced by Session object as SuiteID.",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "44034e09-a39f-4ade-9c03-9a99176176a6"
                    },
                    "name": {
                        "description": "Suite name",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Manufacturing_MemorySuite"
                    },
                    "description": {
                        "type": "string",
                        "description": "Describes suite contents",
                        "example": "Suite that includes memtester, numa test and streams."
                    },
                    "applicationOrder": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "applicationID"
                            ],
                            "properties": {
                                "applicationID": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                                    "description": "The applicationID of the application to link"
                                },
                                "applicationName": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "memtester",
                                    "description": "Name of the application"
                                },
                                "runOrder": {
                                    "type": "integer",
                                    "readOnly": true,
                                    "description": "Execution order within a suite",
                                    "example": 0
                                }
                            }
                        },
                        "minItems": 1,
                        "description": "Applications to run in this suite. A Suite must contain at least 1 application."
                    },
                    "createdTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Suite creation time",
                        "readOnly": true
                    },
                    "lastMaintenanceTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Suite modification time",
                        "readOnly": true
                    }
                }
            },
            "SuiteApplicationSubstruct": {
                "type": "object",
                "required": [
                    "applicationID"
                ],
                "properties": {
                    "applicationID": {
                        "type": "string",
                        "format": "uuid",
                        "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                        "description": "The applicationID of the application to link"
                    },
                    "applicationName": {
                        "type": "string",
                        "readOnly": true,
                        "example": "memtester",
                        "description": "Name of the application"
                    },
                    "runOrder": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Execution order within a suite",
                        "example": 0
                    }
                }
            },
            "Application": {
                "type": "object",
                "required": [
                    "name",
                    "linkToExe"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "example": "Memtester"
                    },
                    "description": {
                        "type": "string",
                        "example": "open source memtester"
                    },
                    "groupByMemorySize": {
                        "type": "boolean",
                        "default": false,
                        "description": "If true, group app execution by the different memory sizes on available hardware."
                    },
                    "groupByCoreCount": {
                        "type": "boolean",
                        "default": false,
                        "description": "If true, group app execution by the different core counts on available hardware."
                    },
                    "invocationPerNode": {
                        "type": "boolean",
                        "default": false,
                        "description": "If true, individually execute application per node, otherwise group with others into a single execution (honoring the other grouping clauses)."
                    },
                    "outputFilePerNode": {
                        "type": "boolean",
                        "default": false,
                        "description": "If true,  application output is collected individually per node, otherwise group into a single file per execution"
                    },
                    "argString": {
                        "type": "string",
                        "example": "-m 8gb",
                        "description": "Argument that is passed to badger_run.sh. Gumballs have badger_run.sh and badger_analyze.sh, by design."
                    },
                    "invocationString": {
                        "type": "string",
                        "description": "The name (and value) of the argument(s) that is passed to the WLM before execution.  These are WLM arguments, not badger arguments.  The first set of special expressions that are supported  '--number-of-tasks-per-node=n', '-number-of-tasks-per-core', '--number-of-cpus-per-task' & '--memory-size-per-node=n';  these values can be equal to some integer or can be set to '@auto'.   If set to '@auto the amount of memory or number of tasks will be  controlled by number of core and memory size (MiB) for the application grouping.  These options MUST be used in conjunction  with 'groupByMemorySize' and 'groupByCoreCount', else failures will ensue. The next set of special expressions that are supported '--add-lib-path=\"\"' & '-add-env-var=\"\"'; these values are strings that allow for arbitrary library and environment variables to be set for the application.\n",
                        "example": "--number-of-tasks-per-node=@auto --memory-per-node=10000 --cc=none"
                    },
                    "createdTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Application object creation time",
                        "readOnly": true
                    },
                    "lastMaintenanceTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Application object creation modification time",
                        "readOnly": true
                    },
                    "linkToExe": {
                        "type": "string",
                        "description": "The S3 object key for the tarball that should be downloaded and executed from the S3 badger bucket.",
                        "example": "memtester.tar"
                    }
                }
            },
            "node": {
                "type": "object",
                "properties": {
                    "xname": {
                        "type": "string"
                    }
                }
            },
            "Session": {
                "type": "object",
                "required": [
                    "workingDirectory",
                    "startProcessTimestamp",
                    "suiteID"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "7ce3fb2d-ef17-44a9-8f68-31e26d069f3c",
                        "readOnly": true,
                        "description": "Identifies this Session Object."
                    },
                    "suiteID": {
                        "type": "string",
                        "format": "uuid",
                        "example": "44034e09-a39f-4ade-9c03-9a99176176a6",
                        "description": "Identifies Suite to execute.  Refers to Suite object property, id."
                    },
                    "suiteName": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Manufacturing_MemorySuite",
                        "description": "the name of the suite"
                    },
                    "nodeList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "xname": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "List of nodes to target. Empty set implies ALL available nodes. This field is only used when creating a session, otherwise it will be null."
                    },
                    "finishTimestamp": {
                        "type": "string",
                        "description": "Time the session finished executing. Will be empty if the job has not run, or is running.",
                        "example": "2019-03-25T20:04:21.167Z\"",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "startProcessTimestamp": {
                        "type": "string",
                        "description": "Time to start the session",
                        "example": "2019-03-25T15:04:21.167Z",
                        "format": "date-time"
                    },
                    "dropDeadTimestamp": {
                        "type": "string",
                        "example": "2019-03-25T20:04:21.167Z",
                        "description": "Time to kill the session if it is still running",
                        "format": "date-time"
                    },
                    "loopSuiteUntilTimestamp": {
                        "type": "string",
                        "example": "2019-03-25T20:04:21.167Z",
                        "description": "Repeatedly loop the suite until this time. \nFor example, if the loopSuiteUntilTimestamp\nis +8hr from the start time, and if the suite takes 2.5 hours to run, \nthe session will\nrepeat the suite ~3+ times, killing it once the 8hrs is elapsed.\n",
                        "format": "date-time"
                    },
                    "doNotStartProcessAfterTimestamp": {
                        "type": "string",
                        "description": "Do not attempt to start the session after this time.",
                        "example": "2019-03-25T17:04:21.167Z",
                        "format": "date-time"
                    },
                    "workingDirectory": {
                        "type": "string",
                        "maxLength": 4096,
                        "description": "Dirname for the session, prepended in sessionDirectory.",
                        "example": "/lus/manf/memsuite"
                    },
                    "sessionDirectory": {
                        "type": "string",
                        "maxLength": 4096,
                        "description": "Dirname to the session. Necessarily derived from workingDirectory ??",
                        "readOnly": true,
                        "example": "/lus/manf/memsuite/2019-02-02T12:12:00.000Z/"
                    },
                    "cleanup": {
                        "type": "boolean",
                        "default": false,
                        "description": "If true, remove any created files, excluding the output, from  the execution\n"
                    },
                    "cleaned": {
                        "type": "boolean",
                        "description": "True indicates cleanup has run.",
                        "default": false,
                        "readOnly": true
                    },
                    "applicationOrder": {
                        "type": "array",
                        "readOnly": true,
                        "description": "List of applications that have completed or are in progress. This list may be empty if the session has not been started.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "applicationOrderID": {
                                    "type": "integer",
                                    "example": 0,
                                    "description": "Id of the application order. Used to get more information about the step in the applicationOrder."
                                },
                                "runOrder": {
                                    "type": "integer",
                                    "example": 0,
                                    "description": "runOrder of the step. May not be repeated within the applicationOrder."
                                },
                                "applicationName": {
                                    "type": "string",
                                    "example": "Memtester"
                                },
                                "applicationID": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                                    "description": "Application to run. May be repeated within the applicationOrder."
                                },
                                "startTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Start time of the step"
                                },
                                "finishTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Completion time of the step. Empty if the step is running."
                                },
                                "analysisStatus": {
                                    "type": "string",
                                    "enum": [
                                        "PENDING",
                                        "PASSED",
                                        "FAILED"
                                    ],
                                    "readOnly": true,
                                    "example": "PASSED"
                                },
                                "nodeListCounts": {
                                    "type": "object",
                                    "properties": {
                                        "requested": {
                                            "type": "integer",
                                            "description": "the number of nodes that were requested during the order or step"
                                        },
                                        "utilized": {
                                            "type": "integer",
                                            "description": "the number of nodes that were utilized during the order or step"
                                        },
                                        "unavailable": {
                                            "type": "integer",
                                            "description": "the number of nodes that were unavailable during the order or step"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "analysisStatus": {
                        "type": "string",
                        "enum": [
                            "PENDING",
                            "PASSED",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "PASSED"
                    },
                    "nodeListCounts": {
                        "type": "object",
                        "properties": {
                            "userRequested": {
                                "type": "integer",
                                "description": "The count of user requested nodes",
                                "example": 0,
                                "readOnly": true
                            },
                            "requestedPopulation": {
                                "type": "integer",
                                "description": "The count of nodes in the requested node population",
                                "example": 0,
                                "readOnly": true
                            },
                            "underUtilized": {
                                "type": "integer",
                                "description": "The count of under utilized nodes",
                                "example": 0,
                                "readOnly": true
                            },
                            "notFound": {
                                "type": "integer",
                                "description": "The count of not found nodes",
                                "example": 0,
                                "readOnly": true
                            }
                        }
                    },
                    "userRequestedNodeList": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "xname": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "List of nodes specified by the user to target. Empty set implies ALL available nodes. This field is only used when creating a session, otherwise it will be null."
                    },
                    "requestedNodeList": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "xname": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "List of nodes that have been requested for use for this session. The requested node list and user requested node list will be equivalent if the user provided a node list. Otherwise if a node list is not provided this field will be dynamically generated to include all requested nodes from the application steps."
                    },
                    "underUtilizedNodeList": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "xname": {
                                    "type": "string"
                                },
                                "notUtilizedInCount": {
                                    "type": "integer",
                                    "description": "Count of application orders that this node was not apart of"
                                },
                                "missingFromApplicationOrders": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "applicationOrderID": {
                                                "type": "integer"
                                            },
                                            "applicationName": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "description": "Application orders that this node is missing from"
                                }
                            }
                        },
                        "description": "List of nodes that were under utilized during the session. This means that the node was requested in an application step at least once, but was unavailable at least once."
                    },
                    "notFound": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "xname": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "List of nodes that have been found. A node is considered not found when it does not exist as a requested node in any of the sessions application steps, but is present in the user requested node list."
                    }
                }
            },
            "underUtilizedNode": {
                "type": "object",
                "properties": {
                    "xname": {
                        "type": "string"
                    },
                    "notUtilizedInCount": {
                        "type": "integer",
                        "description": "Count of application orders that this node was not apart of"
                    },
                    "missingFromApplicationOrders": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "applicationOrderID": {
                                    "type": "integer"
                                },
                                "applicationName": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Application orders that this node is missing from"
                    }
                }
            },
            "missingFromApplicationOrder": {
                "type": "object",
                "properties": {
                    "applicationOrderID": {
                        "type": "integer"
                    },
                    "applicationName": {
                        "type": "string"
                    }
                }
            },
            "sessionNodeListCounts": {
                "type": "object",
                "properties": {
                    "userRequested": {
                        "type": "integer",
                        "description": "The count of user requested nodes",
                        "example": 0,
                        "readOnly": true
                    },
                    "requestedPopulation": {
                        "type": "integer",
                        "description": "The count of nodes in the requested node population",
                        "example": 0,
                        "readOnly": true
                    },
                    "underUtilized": {
                        "type": "integer",
                        "description": "The count of under utilized nodes",
                        "example": 0,
                        "readOnly": true
                    },
                    "notFound": {
                        "type": "integer",
                        "description": "The count of not found nodes",
                        "example": 0,
                        "readOnly": true
                    }
                }
            },
            "applicationOrderForSession": {
                "type": "object",
                "properties": {
                    "applicationOrderID": {
                        "type": "integer",
                        "example": 0,
                        "description": "Id of the application order. Used to get more information about the step in the applicationOrder."
                    },
                    "runOrder": {
                        "type": "integer",
                        "example": 0,
                        "description": "runOrder of the step. May not be repeated within the applicationOrder."
                    },
                    "applicationName": {
                        "type": "string",
                        "example": "Memtester"
                    },
                    "applicationID": {
                        "type": "string",
                        "format": "uuid",
                        "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                        "description": "Application to run. May be repeated within the applicationOrder."
                    },
                    "startTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time of the step"
                    },
                    "finishTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Completion time of the step. Empty if the step is running."
                    },
                    "analysisStatus": {
                        "type": "string",
                        "enum": [
                            "PENDING",
                            "PASSED",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "PASSED"
                    },
                    "nodeListCounts": {
                        "type": "object",
                        "properties": {
                            "requested": {
                                "type": "integer",
                                "description": "the number of nodes that were requested during the order or step"
                            },
                            "utilized": {
                                "type": "integer",
                                "description": "the number of nodes that were utilized during the order or step"
                            },
                            "unavailable": {
                                "type": "integer",
                                "description": "the number of nodes that were unavailable during the order or step"
                            }
                        }
                    }
                }
            },
            "StepCollection": {
                "type": "object",
                "properties": {
                    "sessionID": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "7ce3fb2d-ef17-44a9-8f68-31e26d069f3c"
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "stepID": {
                                    "type": "integer",
                                    "readOnly": true
                                },
                                "memorySize": {
                                    "type": "integer",
                                    "readOnly": true,
                                    "example": 16000,
                                    "description": "memory size in MB"
                                },
                                "coreCount": {
                                    "type": "integer",
                                    "readOnly": true,
                                    "example": 24
                                },
                                "queueTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "description": "the time the step was submitted to the queue",
                                    "example": "2019-03-25T15:06:00.000Z"
                                },
                                "startTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "description": "the time the step was started",
                                    "example": "2019-03-25T15:04:21.167Z"
                                },
                                "finishTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "description": "the time the step was finished.",
                                    "example": "2019-03-25T16:25:00.000Z"
                                },
                                "exitCode": {
                                    "type": "integer",
                                    "readOnly": true,
                                    "description": "the exit code from the WLM",
                                    "example": 0
                                },
                                "analysisStartTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "description": "the time the step analysis was started",
                                    "example": "2019-03-25T15:04:21.167Z"
                                },
                                "analysisFinishTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "description": "the time the step analysis was finished.",
                                    "example": "2019-03-25T16:25:00.000Z"
                                },
                                "analysisExitCode": {
                                    "type": "integer",
                                    "readOnly": true,
                                    "description": "the exit code from the analysis phase",
                                    "example": 0
                                },
                                "analysisOutput": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "the STDOUT of the analysis phase",
                                    "example": "PASSED"
                                },
                                "jobID": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "the JobID of the step as created by the WLM",
                                    "example": 84
                                },
                                "stepDirectory": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "the output directory for a step"
                                },
                                "tarballDirectory": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "the directory the tarball is downloaded to, and cleaned up from"
                                },
                                "nodeListCounts": {
                                    "type": "object",
                                    "properties": {
                                        "requested": {
                                            "type": "integer",
                                            "description": "the number of nodes that were requested during the order or step"
                                        },
                                        "utilized": {
                                            "type": "integer",
                                            "description": "the number of nodes that were utilized during the order or step"
                                        },
                                        "unavailable": {
                                            "type": "integer",
                                            "description": "the number of nodes that were unavailable during the order or step"
                                        }
                                    }
                                },
                                "requestedNodeList": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "xname": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "description": "the list of nodes the application was requested to run on."
                                },
                                "utilizedNodeList": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "xname": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "description": "the list of nodes the application was actually exeuct(ing/ed) on."
                                },
                                "unavailableNodeList": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "xname": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "description": "the list of nodes the application did not run on."
                                }
                            }
                        },
                        "description": "Collection of individual steps executed for an application in a suite"
                    },
                    "application": {
                        "type": "object",
                        "required": [
                            "name",
                            "linkToExe"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05",
                                "readOnly": true
                            },
                            "name": {
                                "type": "string",
                                "example": "Memtester"
                            },
                            "description": {
                                "type": "string",
                                "example": "open source memtester"
                            },
                            "groupByMemorySize": {
                                "type": "boolean",
                                "default": false,
                                "description": "If true, group app execution by the different memory sizes on available hardware."
                            },
                            "groupByCoreCount": {
                                "type": "boolean",
                                "default": false,
                                "description": "If true, group app execution by the different core counts on available hardware."
                            },
                            "invocationPerNode": {
                                "type": "boolean",
                                "default": false,
                                "description": "If true, individually execute application per node, otherwise group with others into a single execution (honoring the other grouping clauses)."
                            },
                            "outputFilePerNode": {
                                "type": "boolean",
                                "default": false,
                                "description": "If true,  application output is collected individually per node, otherwise group into a single file per execution"
                            },
                            "argString": {
                                "type": "string",
                                "example": "-m 8gb",
                                "description": "Argument that is passed to badger_run.sh. Gumballs have badger_run.sh and badger_analyze.sh, by design."
                            },
                            "invocationString": {
                                "type": "string",
                                "description": "The name (and value) of the argument(s) that is passed to the WLM before execution.  These are WLM arguments, not badger arguments.  The first set of special expressions that are supported  '--number-of-tasks-per-node=n', '-number-of-tasks-per-core', '--number-of-cpus-per-task' & '--memory-size-per-node=n';  these values can be equal to some integer or can be set to '@auto'.   If set to '@auto the amount of memory or number of tasks will be  controlled by number of core and memory size (MiB) for the application grouping.  These options MUST be used in conjunction  with 'groupByMemorySize' and 'groupByCoreCount', else failures will ensue. The next set of special expressions that are supported '--add-lib-path=\"\"' & '-add-env-var=\"\"'; these values are strings that allow for arbitrary library and environment variables to be set for the application.\n",
                                "example": "--number-of-tasks-per-node=@auto --memory-per-node=10000 --cc=none"
                            },
                            "createdTimestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Application object creation time",
                                "readOnly": true
                            },
                            "lastMaintenanceTimestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Application object creation modification time",
                                "readOnly": true
                            },
                            "linkToExe": {
                                "type": "string",
                                "description": "The S3 object key for the tarball that should be downloaded and executed from the S3 badger bucket.",
                                "example": "memtester.tar"
                            }
                        }
                    },
                    "nodeListCounts": {
                        "type": "object",
                        "properties": {
                            "requested": {
                                "type": "integer",
                                "description": "the number of nodes that were requested during the order or step"
                            },
                            "utilized": {
                                "type": "integer",
                                "description": "the number of nodes that were utilized during the order or step"
                            },
                            "unavailable": {
                                "type": "integer",
                                "description": "the number of nodes that were unavailable during the order or step"
                            }
                        }
                    },
                    "requestedNodeList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "xname": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "the list of nodes the application order was requested to run on."
                    },
                    "utilizedNodeList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "xname": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "the list of nodes the application order was actually exeuct(ing/ed) on."
                    },
                    "unavailableNodeList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "xname": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "the list of nodes the application order did not run on."
                    }
                }
            },
            "Step": {
                "type": "object",
                "properties": {
                    "stepID": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "memorySize": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 16000,
                        "description": "memory size in MB"
                    },
                    "coreCount": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 24
                    },
                    "queueTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "the time the step was submitted to the queue",
                        "example": "2019-03-25T15:06:00.000Z"
                    },
                    "startTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "the time the step was started",
                        "example": "2019-03-25T15:04:21.167Z"
                    },
                    "finishTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "the time the step was finished.",
                        "example": "2019-03-25T16:25:00.000Z"
                    },
                    "exitCode": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "the exit code from the WLM",
                        "example": 0
                    },
                    "analysisStartTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "the time the step analysis was started",
                        "example": "2019-03-25T15:04:21.167Z"
                    },
                    "analysisFinishTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "the time the step analysis was finished.",
                        "example": "2019-03-25T16:25:00.000Z"
                    },
                    "analysisExitCode": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "the exit code from the analysis phase",
                        "example": 0
                    },
                    "analysisOutput": {
                        "type": "string",
                        "readOnly": true,
                        "description": "the STDOUT of the analysis phase",
                        "example": "PASSED"
                    },
                    "jobID": {
                        "type": "string",
                        "readOnly": true,
                        "description": "the JobID of the step as created by the WLM",
                        "example": 84
                    },
                    "stepDirectory": {
                        "type": "string",
                        "readOnly": true,
                        "description": "the output directory for a step"
                    },
                    "tarballDirectory": {
                        "type": "string",
                        "readOnly": true,
                        "description": "the directory the tarball is downloaded to, and cleaned up from"
                    },
                    "nodeListCounts": {
                        "type": "object",
                        "properties": {
                            "requested": {
                                "type": "integer",
                                "description": "the number of nodes that were requested during the order or step"
                            },
                            "utilized": {
                                "type": "integer",
                                "description": "the number of nodes that were utilized during the order or step"
                            },
                            "unavailable": {
                                "type": "integer",
                                "description": "the number of nodes that were unavailable during the order or step"
                            }
                        }
                    },
                    "requestedNodeList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "xname": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "the list of nodes the application was requested to run on."
                    },
                    "utilizedNodeList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "xname": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "the list of nodes the application was actually exeuct(ing/ed) on."
                    },
                    "unavailableNodeList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "xname": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "the list of nodes the application did not run on."
                    }
                }
            },
            "nodeListCounts": {
                "type": "object",
                "properties": {
                    "requested": {
                        "type": "integer",
                        "description": "the number of nodes that were requested during the order or step"
                    },
                    "utilized": {
                        "type": "integer",
                        "description": "the number of nodes that were utilized during the order or step"
                    },
                    "unavailable": {
                        "type": "integer",
                        "description": "the number of nodes that were unavailable during the order or step"
                    }
                }
            },
            "IDCollection": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                }
            },
            "VersionString": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string",
                        "example": "1.1.0"
                    }
                }
            },
            "ArrayOfID": {
                "type": "array",
                "items": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "IDPointer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "SuitePointer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "44034e09-a39f-4ade-9c03-9a99176176a6"
                    },
                    "name": {
                        "type": "string",
                        "example": "Manufacturing_MemorySuite"
                    }
                }
            },
            "Suites": {
                "type": "object",
                "properties": {
                    "suites": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "44034e09-a39f-4ade-9c03-9a99176176a6"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Manufacturing_MemorySuite"
                                }
                            }
                        },
                        "description": "collection of suites"
                    }
                }
            },
            "ApplicationPointer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05"
                    },
                    "name": {
                        "type": "string",
                        "example": "Memtester"
                    }
                }
            },
            "Applications": {
                "type": "object",
                "properties": {
                    "applications": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Memtester"
                                }
                            }
                        },
                        "description": "collection of applications"
                    }
                }
            },
            "SessionPointer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "7ce3fb2d-ef17-44a9-8f68-31e26d069f3c"
                    },
                    "suiteID": {
                        "type": "string",
                        "format": "uuid",
                        "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05"
                    },
                    "suiteName": {
                        "type": "string",
                        "example": "Manufacturing_MemorySuite"
                    },
                    "startProcessTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2019-03-25T15:04:21.167Z"
                    },
                    "finishTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2019-03-25T17:25:00.007Z"
                    },
                    "analysisStatus": {
                        "type": "string",
                        "enum": [
                            "PENDING",
                            "PASSED",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "PASSED"
                    }
                }
            },
            "Sessions": {
                "type": "object",
                "properties": {
                    "sessions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "7ce3fb2d-ef17-44a9-8f68-31e26d069f3c"
                                },
                                "suiteID": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "3eb67e44-5a22-4bfa-a3c9-505191370e05"
                                },
                                "suiteName": {
                                    "type": "string",
                                    "example": "Manufacturing_MemorySuite"
                                },
                                "startProcessTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2019-03-25T15:04:21.167Z"
                                },
                                "finishTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2019-03-25T17:25:00.007Z"
                                },
                                "analysisStatus": {
                                    "type": "string",
                                    "enum": [
                                        "PENDING",
                                        "PASSED",
                                        "FAILED"
                                    ],
                                    "readOnly": true,
                                    "example": "PASSED"
                                }
                            }
                        }
                    }
                }
            },
            "Problem7807": {
                "description": "RFC 7807 compliant error payload.  All fields are optional except the 'type' field.",
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "about:blank"
                    },
                    "detail": {
                        "type": "string",
                        "example": "Detail about this specific problem occurrence. See RFC7807"
                    },
                    "instance": {
                        "type": "string",
                        "example": ""
                    },
                    "status": {
                        "type": "number",
                        "format": "int32",
                        "example": 400
                    },
                    "title": {
                        "type": "string",
                        "example": "Description of HTTP Status code, e.g. 400"
                    }
                }
            },
            "AnalysisStatus": {
                "type": "string",
                "enum": [
                    "PENDING",
                    "PASSED",
                    "FAILED"
                ],
                "readOnly": true,
                "example": "PASSED"
            }
        }
    }
}
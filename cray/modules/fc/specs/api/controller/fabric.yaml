swagger: '2.0'
info:
  version: 1.0.0
  title: Fabric Controller Rest API
  description: Fabric Controller Rest API
  contact:
    name: Silicon Software Design, Cray Inc.
    email: sieng_sw@cray.com
host: localhost:8081
basePath: /apis/fabric/v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  '/switch/{switchIds}/port/{portIds}/enable':
    put:
      description: Sets one or more ports state to enabled or disabled
      summary: Enables or disables the port(s)
      operationId: set_port_enable
      tags:
        - FabricController
      parameters:
        - in: path
          name: switchIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: path
          name: portIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: body
          name: enable
          schema:
            $ref: '#/definitions/PortEnableState'
      responses:
        '200':
          description: Success
        default:
          description: Error enabling port(s)
          schema:
            $ref: '#/definitions/Error'
    get:
      description: Gets the enable state (enabled or disabled) of a port(s)
      summary: Gets the enable state of a port(s)
      operationId: get_port_enable
      tags:
        - FabricController
      parameters:
        - in: path
          name: switchIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: path
          name: portIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
      responses:
        '200':
          description: Successfully got the port enable state
          schema:
            $ref: '#/definitions/PortEnableState'
        default:
          description: Error getting port enable state
          schema:
            $ref: '#/definitions/Error'
  '/switch/{switchIds}/port/{portIds}/mtu':
    put:
      description: Sets MTU value for individual ports
      summary: MTU value for the port
      operationId: set_port_mtu
      tags:
        - FabricController
      parameters:
        - in: path
          name: switchIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: path
          name: portIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - name: value
          in: body
          schema:
            $ref: '#/definitions/MTU'
      responses:
        '200':
          description: Success
        default:
          description: Error setting MTU
          schema:
            $ref: '#/definitions/Error'
    get:
      description: Returns MTU value for a set of ports within a set switches
      summary: Gets MTU value
      operationId: get_port_mtu
      tags:
       - FabricController
      parameters:
        - in: path
          name: switchIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: path
          name: portIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MTU'
        default:
          description: Error setting MTU
          schema:
            $ref: '#/definitions/Error'
  '/switch/{switchIds}/port/{portIds}/flowcontrol':
    put:
      description: 'Configures 802.3x Pause Flow Control'
      summary: Configures 802.3x Pause Flow Control (Receive and Transmit)
      operationId: set_flowcontrol
      tags:
        - FabricController
      parameters:
        - in: path
          name: switchIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: path
          name: portIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: body
          name: FlowControlParams
          description: Rx and Tx 802.3x Pause Flow Control parameters
          schema:
            $ref: '#/definitions/FlowControlParams'
      responses:
        '200':
          description: Success
        default:
          description: Error configuring Flow Control
          schema:
            $ref: '#/definitions/Error'
    get:
      description: 'Returns 802.3x Pause Flow Control configuration'
      summary: Returns 802.3x Pause Flow Control (Receive and Transmit)
      operationId: get_flowcontrol
      tags:
        - FabricController
      parameters:
        - in: path
          name: switchIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: path
          name: portIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
                $ref: '#/definitions/PortFlowControl'
        default:
          description: Error getting flow control parameters
          schema:
            $ref: '#/definitions/Error'
  '/switch/{switchIds}/port/{portIds}/mac-address':
    put:
      description: 'Sets an algorithmic mac address of the form 02:00:02:xx:xx:xx'
      summary: Sets an algorithmic mac address
      operationId: set_mac_algorithmic
      tags:
        - FabricController
      parameters:
        - in: path
          name: switchIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: path
          name: portIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: body
          name: AlgoMacAddrParams
          description: algorithmic mac address and system size
          schema:
            $ref: '#/definitions/AlgoMacAddrParams'
      responses:
        '200':
          description: Success
        default:
          description: Error setting algorithmic mac address
          schema:
            $ref: '#/definitions/Error'
    get:
      description: 'Returns algorithmic mac address of the form 02:00:02:xx:xx:xx'
      summary: get mac address
      operationId: get_mac_algorithmic
      tags:
        - FabricController
      parameters:
        - in: path
          name: switchIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: path
          name: portIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AlgoMacAddrParams'
        default:
          description: Error setting algorithmic mac address
          schema:
            $ref: '#/definitions/Error'
  '/switch/{switchIds}/port/{portIds}/statistics/{type}/{group}':
    get:
      description: 'Displays standard and Rosetta block statistics'
      summary: Displays statistics for the provided port
      operationId: get_statistics
      tags:
        - FabricController
      parameters:
        - in: path
          name: switchIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: path
          name: portIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: path
          name: type
          description: RFC or Rosetta
          type: string
          required: true
        - in: path
          name: group
          description: RFC group id or Rosetta block name
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/PortStatistics'
        default:
          description: Error displaying RFC or Rosetta block statistics
          schema:
            $ref: '#/definitions/Error'
  '/switch/{switchIds}/port/{portIds}/statistics/clear':
    post:
      description: 'Clear statistics'
      summary: Clears RFC or Rosetta block statistics
      operationId: clear_statistics
      tags:
        - FabricController
      parameters:
        - in: path
          name: switchIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: path
          name: portIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
      responses:
        '200':
          description: Success
        default:
          description: Error clearing port statistics
          schema:
            $ref: '#/definitions/Error'
  '/switch/routing/init':
    post:
      description: Initialize the routing FRF CSRs
      summary: Initialize the routing FRF CSRs
      operationId: routing_init
      tags:
        - FabricController
        - cli_from_file
      parameters:
        - in: body
          name: initRoutingInfo
          schema:
            $ref: '#/definitions/ControllerRoutingInfo'
      responses:
        '200':
          description: Success
        default:
          description: Error initializing routing
          schema:
            $ref: '#/definitions/Error'
  '/switch/links':
    get:
      description: Show a map of ports to connected devices of the switch in xname format
      summary: Returns the links connectivity
      operationId: show_links
      tags:
        - FabricController
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Links'
        default:
          description: Error showing links
          schema:
            $ref: '#/definitions/Error'
  '/switch/mtu':
    put:
      description: Sets MTU value on the whole switch
      summary: Sets an MTU value
      operationId: set_mtu
      tags:
        - FabricController
      parameters:
        - name: value
          in: body
          schema:
            $ref: '#/definitions/MTU'
      responses:
        '200':
          description: Success
        default:
          description: Error setting MTU
          schema:
            $ref: '#/definitions/Error'
    get:
      description: Returns MTU value for the switch
      summary: Gets MTU value
      operationId: get_mtu
      tags:
       - FabricController
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MTU'
        default:
          description: Error getting MTU
          schema:
            $ref: '#/definitions/Error'
  '/switch/{switchIds}/port/{portIds}/speed':
    put:
      description: Set the speed for port or a set of ports to be either BS_200G, BJ_100G, CD_100G, CD_50G or auto
      summary: Set the speed for port or a set of ports
      operationId: set_speed
      tags:
        - FabricController
      parameters:
        - in: path
          name: switchIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: path
          name: portIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: body
          name: speed
          description: speed value
          schema:
            $ref: '#/definitions/Speed'
      responses:
        '200':
          description: Success
        default:
          description: Error setting speed
          schema:
            $ref: '#/definitions/Error'
  #'/switch/{switchIds}/port/{portIds}/autoneg':
  #  put:
  #    description: Enable or disable auto-negotiation for one port or set of ports
  #    summary: Enable/disable autoneg for a port or a set of ports
  #    operationId: autoneg_set
  #    tags:
  #      - FabricController
  #    parameters:
  #      - in: path
  #        name: switchIds
  #        description: Example "0-3,10,15-17"
  #        type: string
  #        required: true
  #        pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
  #      - in: path
  #        name: portIds
  #        description: Example "0-3,10,15-17"
  #        type: string
  #        required: true
  #        pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
  #      - in: body
  #        name: enable
  #        schema:
  #          $ref: '#/definitions/AutonegEnable'
  #    responses:
  #      '200':
  #        description: Success
  #      default:
  #        description: Error enabling/disabling autoneg
  #        schema:
  #          $ref: '#/definitions/Error'
  #  get:
  #    description: Returns autoneg/speed configuration for a port or a set of ports in either table view or detailed
  #    summary: Speed/autoneg config for a port or a set of ports either detailed or as a table
  #    operationId: get_autoneg
  #    tags:
  #      - FabricController
  #    parameters:
  #      - in: path
  #        name: switchIds
  #        description: Example "0-3,10,15-17"
  #        type: string
  #        required: true
  #        pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
  #      - in: path
  #        name: portIds
  #        description: Example "0-3,10,15-17"
  #        type: string
  #        required: true
  #        pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
  #    responses:
  #      '200':
  #        description: Success
  #        schema:
  #          type: array
  #          items:
  #              $ref: '#/definitions/AutonegParams'
  #      default:
  #        description: Error getting autoneg/speed parameters
  #        schema:
  #          $ref: '#/definitions/Error'
  #'/switch/{switchIds}/port/{portIds}/loopback':
  #  put:
  #    description: Enable Internal or External SerDes Loopback or disable SerDes Loopback
  #    summary: Enable Internal/External SerDes Loopback or disable SerDes Loopback
  #    operationId: loopback_enable
  #    tags:
  #      - FabricController
  #    parameters:
  #      - in: path
  #        name: switchIds
  #        description: Example "0-3,10,15-17"
  #        type: string
  #        required: true
  #        pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
  #      - in: path
  #        name: portIds
  #        description: Example "0-3,10,15-17"
  #        type: string
  #        required: true
  #        pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
  #      - in: body
  #        name: loopback
  #        description: loopback value
  #        schema:
  #          type: object
  #          required:
  #            - loopback
  #          properties:
  #            loopback:
  #              type: string
  #    responses:
  #      '200':
  #        description: Success
  #      default:
  #        description: Error enabling/disabling loopback
  #        schema:
  #          $ref: '#/definitions/Error'
  '/switch/{switchIds}/port/{portIds}/status/{status_par}':
    get:
      description: Returns status of a port, a set of ports or all ports
      summary: Get status of a port, set of ports or all ports
      operationId: get_status
      tags:
        - FabricController
      parameters:
        - in: path
          name: switchIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: path
          name: portIds
          description: Example "0-3,10,15-17"
          type: string
          required: true
          pattern: '([0-9]+([-][0-9]+)?(,(?=[0-9])|))*'
        - in: path
          name: status_par
          type: string
          required: true
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
                $ref: '#/definitions/PortStatus'
        default:
          description: Error getting parameters for displaying status
          schema:
            $ref: '#/definitions/Error'
  '/switch/commit':
    post:
      description: Set candidate config as running config in RosDB
      summary: Apply staged configuration
      operationId: commit
      tags:
        - FabricController
      responses:
        '200':
          description: Success
        default:
          description: Error commiting configuration
          schema:
            $ref: '#/definitions/Error'
  '/switch/list':
    get:
      description: List the name of all unique switches
      summary: list switch names
      operationId: switch_list
      tags:
        - FabricController
      responses:
        '200':
          description: Success
        default:
          description: Error listing switches
          schema:
            $ref: '#/definitions/Error'
  '/switch/config/running':
    get:
      description: Get current running config
      summary: running config
      operationId: get_running_config
      tags:
        - FabricController
      responses:
        '200':
          description: Success
        default:
          description: Error retriving running configuration
          schema:
            $ref: '#/definitions/Error'
  '/switch/config/status':
    get:
      description: Check if controller already has a configured topology
      summary: Controller topology status
      operationId: get_controller_status
      tags:
        - FabricController
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ControllerStatus'
        default:
          schema:
            $ref: '#/definitions/Error'
 #temporary operation to generate model
  '/switch/config/groups':
    get:
      description: Obtain information about the configured switch groups
      summary: Get information about groups
      operationId: get_groups_info
      tags:
        - FabricController
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        default:
          schema:
            $ref: '#/definitions/Error'
definitions:
  ControllerStatus:
    type: object
    required:
      - configured
    properties:
      configured:
        type: boolean
  Group:
    type: object
    required: [groupId, switches]
    properties:
      groupId:
        type: integer
      switches:
        type: array
        items:
         $ref: '#/definitions/Switch'
  Switch:
    type: object
    required: [switchNum, switchProperties]
    properties:
      switchNum:
        type: integer
      switchProperties:
        $ref: '#/definitions/SwitchProperties'
  Port:
  # TODO link Switch with port, extend port object to
  # contain port properties such as mtu, status, mac etc..
    type: object
    required: [portNum]
    properties:
      portNum:
        type: integer
  StatsGroup:
    type: object
    required: [name, stat]
    properties:
      name:
        type: string
      stat:
        type: array
        items:
          $ref: '#/definitions/Stat'
  Stat:
    type: object
    required: [name, value]
    properties:
      name:
        type: string
      value:
        type: string
  PortStatistics:
    type: object
    required: [port, stats]
    properties:
      port:
        $ref: '#/definitions/Port'
      stats:
        $ref: '#/definitions/StatsGroup'
  PortFlowControl:
    type: object
    required: [port, flowcontrol]
    properties:
      port:
        $ref: '#/definitions/Port'
      flowcontrol:
        $ref: '#/definitions/FlowControlParams'
  SwitchProperties:
  # This can be expanded in the future to contain
  # more properties such as mtu, ports etc...
    type: object
    required: [xname, switchId, groupId]
    properties:
      xname:
        type: string
      switchId:
        type: integer
      groupId:
        type: integer
  PortStatus:
    type: object
    required: [portid, status]
    properties:
        portId:
          type: integer
        status:
          $ref: '#/definitions/StatusParams'
  PortEnableState:
    type: object
    required:
      - enable
    properties:
      enable:
        description: Port state
        type: boolean
  MTU:
    type: object
    description: Maximum transmition unit
    required:
        - value
    properties:
        value:
          type: integer
          minimum: 1
  AutonegEnable:
    type: object
    required:
      - enable
    properties:
      enable:
        description: Autoneg enable/disable
        type: boolean
  AutonegParams:
    type: object
    properties:
      speed:
        type: string
      autoneg:
        type: string
  StatusParams:
    type: object
    required: [status, speed, autoneg, ptype, subtype]
    properties:
      status:
        type: boolean
      speed:
        type: string
      autoneg:
        type: string
      mtu:
        type: integer
      mac:
        type: string
      mactype:
        type: string
      ptype:
        type: string
      subtype:
        type: string
      loopback:
        type: string
  Speed:
     type: object
     required:
       - speed
     properties:
       speed:
         type: string
  AlgoMacAddrParams:
      type: object
      required: [address, maxNumPortsPerSwitch, maxNumSwitchesPerGroup, numGroups]
      properties:
        address:
          type: string
        inband:
          type: string
        maxNumPortsPerSwitch:
          type: integer
          minimum: 1
        maxNumSwitchesPerGroup:
          type: integer
          minimum: 1
        numGroups:
          type: integer
          minimum: 1
  FlowControlParams:
      type: object
      properties:
        rx:
          type: boolean
        tx:
          type: boolean
  RoutingInitInfo:
    type: object
    required: [switches, links, swcId, numGroups, maxNumLocalSwitches]
    properties:
      switches:
        description: Switches in the topology template
        type: array
        items:
          type: object
          properties:
            grpId:
              type: integer
            swcNum:
              type: integer
      links:
        description: Links in the topology template
        type: array
        items:
          type: object
          properties:
            srcGrpId:
              type: integer
            srcSwcNum:
              type: integer
            srcPortNum:
              type: integer
            dstGrpId:
              type: integer
            dstSwcNum:
              type: integer
            dstPortNum:
              type: integer
      swcId:
        description: Switch ID of the switch the Agent is running on
        type: object
        required: [grpId, swcNum]
        properties:
          grpId:
            type: integer
          swcNum:
            type: integer
      edgePorts:
        description: Edge ports in the topology template
        type: array
        items:
          type: integer
      IP:
        description: Endpoint address for the agent
        type: string
      numGroups:
        description: Total number of groups in the topology template
        type: integer
      maxNumLocalSwitches:
        description: Maximum number of switche in a group in the topology template
        type: integer
  RoutingUpdateInfo:
    type: object
    required: [switches, links]
    properties:
      switches:
        description: Switches in the topology map
        type: array
        items:
          type: object
          properties:
            grpId:
              type: integer
            swcNum:
              type: integer
      links:
        description: Links in the topology map
        type: array
        items:
          type: object
          properties:
            srcGrpId:
              type: integer
            srcSwcNum:
              type: integer
            srcPortNum:
              type: integer
            dstGrpId:
              type: integer
            dstSwcNum:
              type: integer
            dstPortNum:
              type: integer
  Links:
    type: object
    required: [ SwitchXName ]
    properties:
      SwitchXName:
        type: string
      #This should be a 1-1 correspondance
      PortToXnameDevice:
        type: array
        items:
          type: object
          properties:
            port:
              type: integer
            XnameDevice:
              type: string
  ControllerRoutingInfo:
    type: object
    required: [switches, links, numGroups, maxNumLocalSwitches]
    properties:
      switches:
        description: Switches in the topology template
        type: array
        items:
          type: object
          required: [grpId, swcNum, edgePorts, IP]
          properties:
            grpId:
              type: integer
            swcNum:
              type: integer
            edgePorts:
              type: array
              items:
                type: integer
            fabricPorts:
              type: array
              items:
                type: integer
            IP:
              type: string
      links:
        description: Links in the topology template
        type: array
        items:
          type: object
          properties:
            srcGrpId:
              type: integer
            srcSwcNum:
              type: integer
            srcPortNum:
              type: integer
            dstGrpId:
              type: integer
            dstSwcNum:
              type: integer
            dstPortNum:
              type: integer
      numGroups:
        description: Total number of groups in the topology template
        type: integer
      maxNumLocalSwitches:
        description: Maximum number of switche in a group in the topology template
        type: integer
  Error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  IpAddress:
    description: ipv4 or ipv6, including port. ipv6 must be specified in 8 groups of 16 bits.
    type: string
    pattern: '([0-9a-fA-F]{1,4}:){8,8}[0-9]{1,4}|((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]):[0-9]{1,4}'



---
swagger: "2.0"
info:
  description: |
    The Fabric Controller defines port sets, which is a grouping of ports,
    so the Fabric Controller can apply a configuration to all
    the ports in a named port set
    with a single transaction.  For example, the Fabric Controller may
    set up a port set for all the ports connected to storage,
    so a configuration can be applied to all those ports simultaneously.


    The Fabric Controller queries port link information detailing
    the ports and how edge ports and fabric ports are connected.


    The Fabric Controller configures the fabric-wide MTU on
    all edge ports in the fabric.
    The Fabric Controller sets the topology template.
    It also configures telemetry parameters on a fabric-wide basis.


    # Resources


    ## /fabric-configuration


    Fabric configuration sets the MTU (maximum transmission unit)
    of the fabric's edge ports,
    and manages parameters associated with the collection of telemetry data.


    ## /port-links

    Port links describe the connectivity between ports within the fabric,
    detailing relationship between edge ports and fabric ports.


    ## /port-sets

    Port sets are a grouping of ports, which allows a set of ports to
    be configured in a single transaction.  Each port set has a unique name,
    but may contain ports contained in other port sets; they may overlap.


    Port sets created using this api may be changed subsequent to creation,
    by adding or removing ports, or the port set may be deleted.
    Some port sets are pre-defined. These cannot be changed or deleted
    by this API:


      * fabric-ports

      * edge-ports
  version: 2.2.5
  title: Fabric Controller API
host: localhost:8081
basePath: /apis/fc/v2
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /service-state:
    get:
      tags:
      - FabricController
      - cli_ignore
      summary: Get the state of the fabric controller
      description: A probe to verify if the Fabric Controller is running
      operationId: getFCState
      parameters: []
      responses:
        "200":
          description: Success
  /priv/set-template:
    post:
      tags:
      - set-template
      - FabricController
      - cli_hidden
      - cli_from_file
      summary: Pass topology template to the fabric controller
      description: |
        Initialize the Fabric Controller using a v2 topology template.
        This operation is only performed by a service engineer
        configuring the system.
      operationId: setTemplate
      parameters:
      - in: body
        name: routingInitInfo
        required: true
        schema:
          $ref: '#/definitions/ControllerTemplate'
      responses:
        "200":
          description: Success
        default:
          description: Error initializing Controller with topology template
          schema:
            $ref: '#/definitions/Error'
      x-private: true
  /port-links:
    get:
      tags:
      - port-links
      - FabricController
      summary: Get connectivity information
      description: |
        Return JSON data for the connectivity,
        detailing the ports and how they are connected.
      operationId: getConnectivity
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/PortConnectivity'
        default:
          description: Error getting connectivity information
          schema:
            $ref: '#/definitions/Error'
  /fabric-configuration:
    get:
      tags:
      - fabric-configuration
      - FabricController
      summary: Get fabric configuration
      description: Get the fabric-wide configuration settings.
      operationId: getFabricConfig
      parameters:
      - name: param
        in: query
        description: Fabric property to obtain (e.g. MTU)
        required: false
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/FabricConfig'
        default:
          description: Error getting fabric configuration
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
      - fabric-configuration
      - FabricController
      summary: Set fabric configuration
      description: Set the fabric-wide configuration.
      operationId: setFabricConfig
      parameters:
      - in: body
        name: fabricConfig
        required: true
        schema:
          $ref: '#/definitions/FabricConfig'
      responses:
        "200":
          description: Success
        default:
          description: Error setting fabric configuration
          schema:
            $ref: '#/definitions/Error'
  /fabric-configuration/lldp:
    get:
      tags:
      - fabric-configuration
      - FabricController
      summary: Get fabric LLDP configuration setting
      description: Get the fabric-wide LLDP configuration setting(s).
      operationId: get_fabric_lldp
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/LldpEnable'
        default:
          description: Error getting fabric configuration
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
      - fabric-configuration
      - FabricController
      summary: Set fabric LLDP configuration setting
      description: Set the fabric-wide LLDP configuration.
      operationId: set_fabric_lldp
      parameters:
      - in: body
        name: lldpEnable
        required: true
        schema:
          $ref: '#/definitions/LldpEnable'
      responses:
        "200":
          description: Success
        default:
          description: Error setting fabric LLDP setting
          schema:
            $ref: '#/definitions/Error'
  /switch/{xname}/lldp/feature-flag:
    get:
      tags:
      - switch
      - lldp
      - FabricController
      - cli_hidden
      summary: Get LLDP feature flag configuration for the given switch
      description: Get the LLDP feature flag configuration settings for the given switch.
      operationId: getSwitchLldpFeatureFlag
      parameters:
      - name: xname
        in: path
        required: true
        type: string
        x-example: x1000c0r7b0
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/LldpFeatureFlag'
        default:
          description: Error getting the LLDP feature flag
          schema:
            $ref: '#/definitions/Error'
      x-private: true
    put:
      tags:
      - switch
      - lldp
      - FabricController
      - cli_hidden
      - cli_from_file
      summary: Set LLDP feature flag configuration for the given switch
      description: Set the LLDP feature flag configuration for the given switch.
      operationId: setSwitchLldpFeatureFlag
      parameters:
      - name: xname
        in: path
        required: true
        type: string
        x-example: x1000c0r7b0
      - in: body
        name: lldpFeatureFlag
        required: true
        schema:
          $ref: '#/definitions/LldpFeatureFlag'
      responses:
        "200":
          description: Success
        default:
          description: Error setting the LLDP feature flag
          schema:
            $ref: '#/definitions/Error'
      x-private: true
  /fabric-configuration/sweep-rate:
    get:
      tags:
      - fabric-configuration
      - FabricController
      summary: Get fabric polling sweep rate configuration
      description: Get the fabric-wide polling sweep rate configuration setting.
      operationId: get_fabric_sweep_rate
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SweepRate'
        default:
          description: Error getting fabric configuration
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
      - fabric-configuration
      - FabricController
      summary: Set fabric polling sweep rate configuration
      description: Set the fabric-wide polling sweep rate configuration setting.
      operationId: set_fabric_sweep_rate
      parameters:
      - in: body
        name: sweepRate
        required: true
        schema:
          $ref: '#/definitions/SweepRate'
      responses:
        "200":
          description: Success
        default:
          description: Error setting fabric polling sweep rate configuration
          schema:
            $ref: '#/definitions/Error'
  /fabric-configuration/agent-timeout:
    get:
      tags:
      - fabric-configuration
      - FabricController
      summary: Get fabric agent timeout configuration
      description: Get the fabric-wide agent timeout configuration setting.
      operationId: get_fabric_agent_timeout
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/AgentTimeout'
        default:
          description: Error getting fabric configuration
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
      - fabric-configuration
      - FabricController
      summary: Set fabric agent timeout configuration
      description: Set the fabric-wide agent timeout configuration setting.
      operationId: set_fabric_agent_timeout
      parameters:
      - in: body
        name: agentTimeout
        required: true
        schema:
          $ref: '#/definitions/AgentTimeout'
      responses:
        "200":
          description: Success
        default:
          description: Error setting fabric agent timeout configuration
          schema:
            $ref: '#/definitions/Error'
  /fabric-configuration/telemetry:
    get:
      tags:
      - fabric-configuration
      - FabricController
      summary: Get fabric telemetry configuration
      description: Get the fabric-wide telemetry configuration setting(s).
      operationId: get_fabric_telemetry
      parameters:
      - name: param
        in: query
        description: Telemetry property to obtain (e.g. periodicity)
        required: false
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/TelemetryInfo'
        default:
          description: Error getting fabric configuration
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
      - fabric-configuration
      - FabricController
      - cli_from_file
      summary: Set fabric telemetry configuration
      description: Set the fabric-wide telemetry configuration.
      operationId: set_fabric_telemetry
      parameters:
      - in: body
        name: telemetryConfig
        required: true
        schema:
          $ref: '#/definitions/TelemetryConfig'
      responses:
        "200":
          description: Success
        default:
          description: Error setting fabric telemetry configuration
          schema:
            $ref: '#/definitions/Error'
  /port-sets:
    get:
      tags:
      - port-sets
      - FabricController
      summary: Get port set names
      description: Get a list containing the names of all port sets.
      operationId: getPortSetNames
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/NameList'
        default:
          description: Error obtaining port sets
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
      - port-sets
      - FabricController
      - cli_from_file
      summary: Create a new port set
      description: Create a new port set.
      operationId: createPortSet
      parameters:
      - in: body
        name: portSet
        description: Port Set properties (name and ports in xname form)
        required: true
        schema:
          $ref: '#/definitions/PortSet'
      responses:
        "200":
          description: Success
        default:
          description: Error creating port set
          schema:
            $ref: '#/definitions/Error'
  /port-sets/{name}:
    get:
      tags:
      - port-sets
      - FabricController
      summary: Get the named port set
      description: Get the named port set member ports.
      operationId: getPortSetPorts
      parameters:
      - name: name
        in: path
        description: 'Example: my-port-set'
        required: true
        type: string
        x-example: fabric-ports
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/PortList'
        default:
          description: Error obtaining named port set
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
      - port-sets
      - FabricController
      - cli_from_file
      summary: Set port set member ports
      description: Update the port set's ports with all the ports listed with <xname>. This will overwrite any existing port names.
      operationId: setPortSet
      parameters:
      - name: name
        in: path
        description: 'Example: my-port-set'
        required: true
        type: string
        x-example: port-set-example-1
      - in: body
        name: ports
        required: true
        schema:
          $ref: '#/definitions/PortList'
      responses:
        "200":
          description: Success
        default:
          description: Error setting port set configuration
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
      - port-sets
      - FabricController
      summary: Delete the named port set
      description: Delete the named port set.
      operationId: deletePortSet
      parameters:
      - name: name
        in: path
        description: 'Example: my-port-set'
        required: true
        type: string
        x-example: port-set-example-1
      responses:
        "200":
          description: Success
        default:
          description: Error deleting the named port set.
          schema:
            $ref: '#/definitions/Error'
  /port-sets/{name}/loopback:
    put:
      tags:
      - port-sets
      - FabricController
      summary: Set named port set loopback mode
      description: Set loopback mode for the set of ports in the named port set.
      operationId: setPortSetLoopback
      parameters:
      - name: name
        in: path
        description: 'Example: my-port-set'
        required: true
        type: string
        x-example: edge-ports
      - in: body
        name: loopback
        required: true
        schema:
          $ref: '#/definitions/Loopback'
      responses:
        "200":
          description: Success
        default:
          description: Error setting port set loopback configuration
          schema:
            $ref: '#/definitions/Error'
  /ports/{xname}/loopback:
    put:
      tags:
      - ports
      - FabricController
      summary: Set port loopback mode
      description: Set loopback mode for a single port.
      operationId: setPortLoopback
      parameters:
      - name: xname
        in: path
        required: true
        type: string
        x-example: x1000c0r1j0p0
      - in: body
        name: loopback
        required: true
        schema:
          $ref: '#/definitions/Loopback'
      responses:
        "200":
          description: Success
        "404":
          description: Requested port was not found
        default:
          description: Could not set port loopback mode due to an error
          schema:
            $ref: '#/definitions/Error'
  /port-sets/{name}/config:
    get:
      tags:
      - port-sets
      - FabricController
      summary: Get configuration for ports in a port set
      description: Return port configuration for each port in the named port set.
      operationId: getPortSetConfig
      parameters:
      - name: name
        in: path
        description: 'Example: my-port-set'
        required: true
        type: string
        x-example: edge-ports
      - name: param
        in: query
        description: Filter by information to be taken from port configuration (e.g. speed)
        required: false
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/PortSetConfiguration'
        default:
          description: Error getting port set configuration
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
      - port-sets
      - FabricController
      - cli_from_file
      summary: Set named port set configuration
      description: Set configuration for the set of ports in the named port set.
      operationId: setPortSetConfig
      parameters:
      - name: name
        in: path
        description: 'Example: my-port-set'
        required: true
        type: string
        x-example: edge-ports
      - in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/PortConfiguration'
      responses:
        "200":
          description: Success
        default:
          description: Error setting port set configuration
          schema:
            $ref: '#/definitions/Error'
  /port-sets/{name}/status:
    get:
      tags:
      - port-sets
      - FabricController
      summary: Get status for ports in a port set
      description: Return port status for each port in the named port set.
      operationId: getPortSetStatus
      parameters:
      - name: name
        in: path
        description: 'Example: my-port-set'
        required: true
        type: string
        x-example: edge-ports
      - name: param
        in: query
        description: Filter by information to be taken from port status (e.g. speed)
        required: false
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/PortSetStatus'
        default:
          description: Error getting port status
          schema:
            $ref: '#/definitions/Error'
  /ports/{xname}/config:
    get:
      tags:
      - ports
      - FabricController
      summary: Get port configuration
      description: Retrieve configuration for a single port.
      operationId: getPortConfig
      parameters:
      - name: xname
        in: path
        required: true
        type: string
        x-example: x1000c0r1j0p0
      responses:
        "200":
          description: Retrieves port active configuration
          schema:
            $ref: '#/definitions/PortConfiguration'
        "404":
          description: Requested port was not found
        default:
          description: Could not read configuration for port
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
      - ports
      - FabricController
      - cli_from_file
      summary: Set port configuration
      description: Set configuration for a single port.
      operationId: setPortConfig
      parameters:
      - name: xname
        in: path
        required: true
        type: string
        x-example: x1000c0r1j0p0
      - in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/PortConfiguration'
      responses:
        "200":
          description: Success
        "404":
          description: Requested port was not found
        default:
          description: Could not configure port due to an error
          schema:
            $ref: '#/definitions/Error'
  /ports/{xname}/status:
    get:
      tags:
      - ports
      - FabricController
      summary: Get port status
      description: Retrieve the status of a single port specified by xname.
      operationId: getPortStatus
      parameters:
      - name: xname
        in: path
        required: true
        type: string
        x-example: x1000c0r1j0p0
      responses:
        "200":
          description: Port status
          schema:
            $ref: '#/definitions/PortStatus'
        "404":
          description: Requested port was not found
        default:
          description: Could not read configuration for port
          schema:
            $ref: '#/definitions/Error'
  /port-sets/{name}/statistics/{type}/{group}:
    get:
      tags:
      - port-sets
      - statistics
      - FabricController
      summary: Get statistics for ports in a port set
      description: Get statistics for ports in port set
      operationId: getPortsetStatistics
      parameters:
      - name: name
        in: path
        description: 'Example: my-port-set'
        required: true
        type: string
        x-example: edge-ports
      - name: type
        in: path
        description: RFC or Rosetta
        required: true
        type: string
      - name: group
        in: path
        description: RFC group id or Rosetta block name
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/PortSetStatistics'
        default:
          description: Error displaying RFC or Rosetta block statistics
          schema:
            $ref: '#/definitions/Error'
  /port-sets/{name}/statistics/clear:
    put:
      tags:
      - port-sets
      - statistics
      - FabricController
      summary: Clears port statistics for all ports in port set
      description: Clear statistics for ports in port set
      operationId: clearPortsetStatistics
      parameters:
      - name: name
        in: path
        description: 'Example: my-port-set'
        required: true
        type: string
        x-example: edge-ports
      responses:
        "200":
          description: Success
        default:
          description: Error clearing port statistics
          schema:
            $ref: '#/definitions/Error'
definitions:
  ControllerTemplate:
    type: object
    required:
    - links
    - maxNumLocalSwitches
    - numGroups
    - switches
    properties:
      switches:
        type: array
        description: Switches in the topology template
        items:
          $ref: '#/definitions/TemplateSwitch'
        minItems: 1
      links:
        type: array
        description: Links in the topology template
        items:
          $ref: '#/definitions/XnameLink'
      numGroups:
        type: integer
        description: Total number of groups in the topology template
        minimum: 0
      maxNumLocalSwitches:
        type: integer
        description: Maximum number of switches in a group in the topology template
        minimum: 0
    example:
  TemplateSwitch:
    type: object
    required:
    - IP
    - edgePorts
    - fabricPorts
    - grpId
    - swcNum
    properties:
      grpId:
        type: integer
      swcNum:
        type: integer
      edgePorts:
        type: array
        description: edge ports in the topology
        items:
          $ref: '#/definitions/TemplatePort'
      fabricPorts:
        type: array
        description: fabric ports in the topology
        items:
          $ref: '#/definitions/TemplatePort'
      IP:
        type: string
  TemplatePort:
    type: object
    required:
    - id
    - meta
    properties:
      id:
        type: string
        description: Id of the port
      meta:
        description: Metadata associated with the port
        $ref: '#/definitions/TemplatePortMetadata'
    description: Description of a port in a topology template
  TemplatePortMetadata:
    type: object
    required:
    - conn_port
    properties:
      conn_port:
        type: string
        description: Port connector xname
    description: Metadata associated with a port
  XnameLink:
    type: object
    required:
    - endpoint1
    - endpoint2
    properties:
      endpoint1:
        type: string
        example: x16c3r4j7p0
        description: Port xname
        pattern: x[0-9]+c[0-9]+r[0-9]+j[0-9]+p[0-1]
      endpoint2:
        type: string
        example: x16c3r4j7p0
        description: Port xname
        pattern: x[0-9]+c[0-9]+r[0-9]+j[0-9]+p[0-1]
    description: Link where both ends are represented by an xname
  Error:
    type: object
    required:
    - code
    - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  PortConnectivity:
    type: object
    required:
    - links
    - ports
    properties:
      ports:
        $ref: '#/definitions/PortInfo'
      links:
        type: array
        items:
          $ref: '#/definitions/XnameLink'
    description: Connectivity data, detailing the ports and how they are connected
  PortInfo:
    type: object
    required:
    - edge
    - fabric
    properties:
      edge:
        type: array
        items:
          type: string
          example: x16c3r4j7p0
          description: Port xname
          pattern: x[0-9]+c[0-9]+r[0-9]+j[0-9]+p[0-1]
      fabric:
        type: array
        items:
          type: string
          example: x16c3r4j7p0
          description: Port xname
          pattern: x[0-9]+c[0-9]+r[0-9]+j[0-9]+p[0-1]
    description: Lists of edge and fabric ports
  FabricConfig:
    type: object
    required:
    - mtu
    properties:
      mtu:
        type: integer
        description: Fabric-wide edge MTU
        minimum: 64
        maximum: 9216
    description: Fabric Configuration
  LldpEnable:
    type: object
    required:
    - enable
    properties:
      enable:
        type: boolean
    description: LLDP fabric enablement
  LldpFeatureFlag:
    type: object
    required:
    - featureFlag
    properties:
      featureFlag:
        type: array
        items:
          type: string
        minItems: 0
    description: LLDP feature flag
  SweepRate:
    type: object
    required:
    - value
    properties:
      value:
        type: integer
        minimum: 0
        maximum: 300
    description: Fabric polling sweep rate in seconds.
  AgentTimeout:
    type: object
    required:
    - value
    properties:
      value:
        type: integer
        minimum: 1
        maximum: 60
    description: Agent connection timeout in seconds.
  TelemetryInfo:
    type: object
    properties:
      periodicity:
        $ref: '#/definitions/TelemetryPeriodicity'
      collector:
        $ref: '#/definitions/TelemetryCollector'
      locality:
        $ref: '#/definitions/TelemetryLocality'
      statistics:
        $ref: '#/definitions/TelemetryStatistics'
      counters:
        $ref: '#/definitions/TelemetryCounters'
    description: Telemetry information used on get and potentially patch, parameters are optional
  TelemetryPeriodicity:
    type: object
    required:
    - value
    properties:
      value:
        type: integer
        minimum: 0
        maximum: 300
    description: Telemetry periodicity in seconds. Zero disables periodic post.
  TelemetryCollector:
    type: object
    required:
    - value
    properties:
      value:
        type: string
    description: Telemetry collector address
  TelemetryLocality:
    type: object
    required:
    - enable
    properties:
      enable:
        type: boolean
    description: Telemetry locality log enablement
  TelemetryStatistics:
    type: object
    required:
    - values
    properties:
      values:
        type: array
        uniqueItems: true
        items:
          type: string
        minItems: 0
    description: Telemetry statistics collected
  TelemetryCounters:
    type: object
    required:
    - values
    properties:
      values:
        type: array
        uniqueItems: true
        items:
          type: string
        minItems: 0
    description: Telemetry counters blocks collected
  TelemetryConfig:
    type: object
    required:
    - collector
    - counters
    - locality
    - periodicity
    - statistics
    properties:
      periodicity:
        $ref: '#/definitions/TelemetryPeriodicity'
      collector:
        $ref: '#/definitions/TelemetryCollector'
      locality:
        $ref: '#/definitions/TelemetryLocality'
      statistics:
        $ref: '#/definitions/TelemetryStatistics'
      counters:
        $ref: '#/definitions/TelemetryCounters'
    description: Telemetry configuration information, all parameters are required
  NameList:
    type: object
    required:
    - names
    properties:
      names:
        type: array
        items:
          type: string
    description: A list of names.
  PortSet:
    type: object
    required:
    - name
    properties:
      name:
        type: string
        description: Name of the port set
      ports:
        type: array
        description: xnames of ports belonging to the port set
        items:
          type: string
          example: x16c3r4j7p0
          pattern: x[0-9]+c[0-9]+r[0-9]+j[0-9]+p[0-1]
    description: Port set consisting of a name and a list of ports
    example:
  PortList:
    type: object
    required:
    - ports
    properties:
      ports:
        type: array
        items:
          type: string
          example: x1000c0r0j5p0
          description: Port xname
          pattern: x[0-9]+c[0-9]+r[0-9]+j[0-9]+p[0-1]
  Loopback:
    type: object
    required:
    - loopback
    properties:
      loopback:
        type: string
    description: Port loopback mode
  PortSetConfiguration:
    type: object
    required:
    - ports
    properties:
      ports:
        type: array
        items:
          $ref: '#/definitions/PortPairConfig'
    description: List of port xnames and configuration pairs, representing the port's configuration
  PortPairConfig:
    type: object
    required:
    - config
    - xname
    properties:
      xname:
        type: string
        example: x16c3r4j7p0
        description: Port xname
        pattern: x[0-9]+c[0-9]+r[0-9]+j[0-9]+p[0-1]
      config:
        description: Port configuration
        $ref: '#/definitions/PortReadConfiguration'
    description: Port xname and configuration, representing a port configuration
  PortReadConfiguration:
    type: object
    properties:
      enable:
        type: boolean
        description: Enable/disable the port
      mac:
        type: string
        description: Port MAC address
      speed:
        type: string
        description: Port speed
        enum:
        - "100"
        - "200"
        - AUTO
      flowControl:
        description: Flow control information
        $ref: '#/definitions/PortFlowControl'
      autoneg:
        type: boolean
        description: Port auto-negotiation setting
    description: Set of properties that can be retrieved from a port
  PortFlowControl:
    type: object
    required:
    - rx
    - tx
    properties:
      rx:
        type: boolean
      tx:
        type: boolean
  PortConfiguration:
    type: object
    required:
    - autoneg
    - enable
    - flowControl
    - speed
    properties:
      enable:
        type: boolean
        description: Enable/disable the port
      speed:
        type: string
        description: Port speed
        enum:
        - "100"
        - "200"
        - AUTO
      flowControl:
        description: Flow control information
        $ref: '#/definitions/PortFlowControl'
      autoneg:
        type: boolean
        description: Port auto-negotiation setting
      mac:
        type: string
        example: 02:00:00:00:00:00
        description: MAC range
        pattern: ([0-9A-F]{2}[:]){5}([0-9A-F]{2})
    description: Set of properties that can be set on a port
    example:
  PortSetStatus:
    type: object
    required:
    - ports
    properties:
      ports:
        type: array
        items:
          $ref: '#/definitions/PortSetPortStatus'
    description: List of port xnames and status pairs, representing the port status
  PortSetPortStatus:
    type: object
    required:
    - status
    - xname
    properties:
      xname:
        type: string
        example: x16c3r4j7p0
        description: Port xname
        pattern: x[0-9]+c[0-9]+r[0-9]+j[0-9]+p[0-1]
      status:
        description: Port status
        $ref: '#/definitions/PortStatus'
    description: Port xname and status, representing a port status
  PortStatus:
    type: object
    properties:
      enable:
        type: boolean
        description: Enable/disable status of the port
      speed:
        type: string
        description: Port speed
        enum:
        - "100"
        - "200"
      mac:
        type: string
        description: Port MAC address
      mtu:
        type: integer
        description: Port MTU setting
        minimum: 64
        maximum: 9216
      loopback:
        type: string
        description: Port loopack setting
      portType:
        type: string
        description: Port type
      portSubtype:
        type: string
        description: Port subtype
      autoneg:
        type: boolean
        description: Port auto-negotiation setting
    description: Set of port status properties
  PortSetStatistics:
    type: object
    required:
    - ports
    properties:
      ports:
        type: array
        items:
          $ref: '#/definitions/PortStatistics'
    description: List of port xnames and statistics pairs
  PortStatistics:
    type: object
    required:
    - xname
    properties:
      xname:
        type: string
        example: x16c3r4j7p0
        description: Port xname
        pattern: x[0-9]+c[0-9]+r[0-9]+j[0-9]+p[0-1]
      status:
        description: Port status
        $ref: '#/definitions/StatsGroup'
    description: Port xname and statistics
  StatsGroup:
    type: object
    required:
    - name
    - stat
    properties:
      name:
        type: string
      stat:
        type: array
        items:
          $ref: '#/definitions/StatSample'
  StatSample:
    type: object
    required:
    - name
    - value
    properties:
      name:
        type: string
      value:
        type: string

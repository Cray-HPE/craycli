{
    "openapi": "3.0.2",
    "info": {
        "title": "Boot Orchestration Service",
        "version": "0.0.0-api",
        "description": "The Boot Orchestration Service (BOS) provides coordinated provisioning actions\nover defined hardware sets to enable boot, reboot, shutdown, configuration and\nstaging for specified hardware subsets. These provisioning actions apply state\nthrough numerous system management APIs at the request of system administrators\nfor managed product environments.\n\nThe default content type for the BOS API is \"application/json\". Unsuccessful\nAPI calls return a content type of \"application/problem+json\" as per RFC 7807.\n\n## Resources\n\n\n### /sessiontemplate\n\nA session template sets the operational context of which nodes to operate on for\nany given set of nodes. It is largely comprised of one or more boot\nsets and their associated software configuration.\n\nA boot set defines a list of nodes, the image you want to boot/reboot the nodes with,\nkernel parameters to use to boot the nodes, and additional configuration management\nframework actions to apply during node bring up.\n\n### /session\n\nA BOS session applies a provided action to the nodes defined in a session\ntemplate.\n\n## Workflow\n\n\n### Create a New Session\n\n#### GET /sessiontemplate\n\nList available session templates.\nNote the *name* which uniquely identifies each session template.\nThis value can be used to create a new session later,\nif specified in the request body of POST /session.\n\n#### POST /sessiontemplate\n\nIf no session template pre-exists that satisfies requirements,\nthen create a new session template. *name* uniquely identifies the\nsession template.\nThis value can be used to create a new session later,\nif specified in the request body of POST /session.\n\n#### POST /session\n\nSpecify template_name and an\noperation to create a new session.\nThe template_name corresponds to the session template *name*.\nA new session is launched as a result of this call.\n\nA limit can also be specified to narrow the scope of the session. The limit\ncan consist of nodes, groups or roles in a comma-separated list.\nMultiple groups are treated as separated by OR, unless \"&\" is added to\nthe start of the component, in which case this becomes an AND.  Components\ncan also be preceded by \"!\" to exclude them.\n\nNote, the response from a successful session launch contains *links*.\nWithin *links*, *href* is a string that uniquely identifies the session.\n*href* is constructed using the session template name and a generated uuid.\nUse the entire *href* string as the path parameter *session_id*\nto uniquely identify a session in for the /session/{session_id}\nendpoint.\n\n\n#### GET /session/{session_id}\n\nGet session details by session id.\n\nList all in progress and completed sessions.\n\n\n## Interactions with Other APIs\n\n\nBOS works in concert with Image Management Service (IMS) to access boot images,\nand if *enable_cfs* is true then\nBOS will invoke CFS to configure the compute nodes.\n\n\nAll boot images specified via the session template, must be available via IMS.\n"
    },
    "servers": [
        {
            "url": "https://api-gw-service-nmn.local/apis/bos",
            "description": "The production BOS API server through a standard API gateway"
        },
        {
            "url": "https://cray-bos/",
            "description": "The service as exposed through k8s DNS service mapping"
        }
    ],
    "components": {
        "schemas": {
            "Healthz": {
                "description": "Service health status",
                "type": "object",
                "properties": {
                    "etcdStatus": {
                        "type": "string"
                    },
                    "apiStatus": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "Version": {
                "description": "Version data",
                "type": "object",
                "properties": {
                    "major": {
                        "type": "integer"
                    },
                    "minor": {
                        "type": "integer"
                    },
                    "patch": {
                        "type": "integer"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "description": "Link to other resources",
                            "type": "object",
                            "properties": {
                                "rel": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                },
                "additionalProperties": false
            },
            "ProblemDetails": {
                "description": "An error response for RFC 7807 problem details.",
                "type": "object",
                "properties": {
                    "type": {
                        "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                        "type": "string",
                        "format": "uri",
                        "default": "about:blank"
                    },
                    "title": {
                        "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                        "type": "string"
                    },
                    "status": {
                        "description": "HTTP status code",
                        "type": "integer",
                        "example": 400
                    },
                    "instance": {
                        "description": "A relative URI reference that identifies the specific occurrence of the problem",
                        "format": "uri",
                        "type": "string"
                    },
                    "detail": {
                        "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "Link": {
                "description": "Link to other resources",
                "type": "object",
                "properties": {
                    "rel": {
                        "type": "string"
                    },
                    "href": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "V1CfsParameters": {
                "type": "object",
                "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled.\n",
                "properties": {
                    "clone_url": {
                        "type": "string",
                        "description": "The clone url for the repository providing the configuration. (DEPRECATED)\n"
                    },
                    "branch": {
                        "type": "string",
                        "description": "The name of the branch containing the configuration that you want to\napply to the nodes. Mutually exclusive with commit. (DEPRECATED)\n"
                    },
                    "commit": {
                        "type": "string",
                        "description": "The commit id of the configuration that you want to\napply to the nodes. Mutually exclusive with branch. (DEPRECATED)\n"
                    },
                    "playbook": {
                        "type": "string",
                        "description": "The name of the playbook to run for configuration. The file path must be specified\nrelative to the base directory of the config repo. (DEPRECATED)\n"
                    },
                    "configuration": {
                        "type": "string",
                        "description": "The name of configuration to be applied.\n"
                    }
                },
                "additionalProperties": false
            },
            "V1GenericMetadata": {
                "type": "object",
                "description": "The status metadata\n",
                "properties": {
                    "start_time": {
                        "type": "string",
                        "description": "The start time\n",
                        "example": "2020-04-24T12:00"
                    },
                    "stop_time": {
                        "type": "string",
                        "description": "The stop time\n",
                        "example": "2020-04-24T12:00"
                    },
                    "complete": {
                        "type": "boolean",
                        "description": "Is the object's status complete\n",
                        "example": true
                    },
                    "in_progress": {
                        "type": "boolean",
                        "description": "Is the object still doing something\n",
                        "example": false
                    },
                    "error_count": {
                        "type": "integer",
                        "description": "How many errors were encountered\n",
                        "example": 0
                    }
                },
                "additionalProperties": false
            },
            "V1NodeList": {
                "type": "array",
                "items": {
                    "type": "string",
                    "example": [
                        "x3000c0s19b1n0",
                        "x3000c0s19b2n0"
                    ]
                }
            },
            "V1PhaseCategoryStatus": {
                "type": "object",
                "description": "A list of the nodes in a given category within a phase.\n\n## Link Relationships\n\n* self : The session object\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Phase Category\n",
                        "example": "Succeeded",
                        "pattern": "^(?i)not_started|in_progress|succeeded|failed|excluded$"
                    },
                    "node_list": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": [
                                "x3000c0s19b1n0",
                                "x3000c0s19b2n0"
                            ]
                        }
                    }
                }
            },
            "V1PhaseStatus": {
                "type": "object",
                "description": "The phase's status. It is a list of all of the nodes in the phase and\nwhat category those nodes fall into within the phase.\n\n## Link Relationships\n\n* self : The session object\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Phase\n",
                        "example": "Boot",
                        "pattern": "^(?i)boot|configure|shutdown$"
                    },
                    "metadata": {
                        "type": "object",
                        "description": "The status metadata\n",
                        "properties": {
                            "start_time": {
                                "type": "string",
                                "description": "The start time\n",
                                "example": "2020-04-24T12:00"
                            },
                            "stop_time": {
                                "type": "string",
                                "description": "The stop time\n",
                                "example": "2020-04-24T12:00"
                            },
                            "complete": {
                                "type": "boolean",
                                "description": "Is the object's status complete\n",
                                "example": true
                            },
                            "in_progress": {
                                "type": "boolean",
                                "description": "Is the object still doing something\n",
                                "example": false
                            },
                            "error_count": {
                                "type": "integer",
                                "description": "How many errors were encountered\n",
                                "example": 0
                            }
                        },
                        "additionalProperties": false
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "A list of the nodes in a given category within a phase.\n\n## Link Relationships\n\n* self : The session object\n",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the Phase Category\n",
                                    "example": "Succeeded",
                                    "pattern": "^(?i)not_started|in_progress|succeeded|failed|excluded$"
                                },
                                "node_list": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": [
                                            "x3000c0s19b1n0",
                                            "x3000c0s19b2n0"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "errors": {
                        "type": "object",
                        "description": "Categorizing nodes into failures by the type of error they have.\nThis is an additive characterization. Nodes will be added to existing errors.\nThis does not overwrite previously existing errors.\n",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "example": [
                                    "x3000c0s19b1n0",
                                    "x3000c0s19b2n0"
                                ]
                            }
                        }
                    }
                }
            },
            "V1BootSetStatus": {
                "type": "object",
                "description": "The status for a Boot Set. It as a list of the phase statuses for the Boot Set.\n\n## Link Relationships\n\n* self : The session object\n* phase : A phase of the boot set\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the Boot Set",
                        "example": "Boot-Set"
                    },
                    "session": {
                        "type": "string",
                        "description": "Session ID",
                        "example": "Session-ID"
                    },
                    "metadata": {
                        "type": "object",
                        "description": "The status metadata\n",
                        "properties": {
                            "start_time": {
                                "type": "string",
                                "description": "The start time\n",
                                "example": "2020-04-24T12:00"
                            },
                            "stop_time": {
                                "type": "string",
                                "description": "The stop time\n",
                                "example": "2020-04-24T12:00"
                            },
                            "complete": {
                                "type": "boolean",
                                "description": "Is the object's status complete\n",
                                "example": true
                            },
                            "in_progress": {
                                "type": "boolean",
                                "description": "Is the object still doing something\n",
                                "example": false
                            },
                            "error_count": {
                                "type": "integer",
                                "description": "How many errors were encountered\n",
                                "example": 0
                            }
                        },
                        "additionalProperties": false
                    },
                    "phases": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "The phase's status. It is a list of all of the nodes in the phase and\nwhat category those nodes fall into within the phase.\n\n## Link Relationships\n\n* self : The session object\n",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the Phase\n",
                                    "example": "Boot",
                                    "pattern": "^(?i)boot|configure|shutdown$"
                                },
                                "metadata": {
                                    "type": "object",
                                    "description": "The status metadata\n",
                                    "properties": {
                                        "start_time": {
                                            "type": "string",
                                            "description": "The start time\n",
                                            "example": "2020-04-24T12:00"
                                        },
                                        "stop_time": {
                                            "type": "string",
                                            "description": "The stop time\n",
                                            "example": "2020-04-24T12:00"
                                        },
                                        "complete": {
                                            "type": "boolean",
                                            "description": "Is the object's status complete\n",
                                            "example": true
                                        },
                                        "in_progress": {
                                            "type": "boolean",
                                            "description": "Is the object still doing something\n",
                                            "example": false
                                        },
                                        "error_count": {
                                            "type": "integer",
                                            "description": "How many errors were encountered\n",
                                            "example": 0
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "A list of the nodes in a given category within a phase.\n\n## Link Relationships\n\n* self : The session object\n",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the Phase Category\n",
                                                "example": "Succeeded",
                                                "pattern": "^(?i)not_started|in_progress|succeeded|failed|excluded$"
                                            },
                                            "node_list": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": [
                                                        "x3000c0s19b1n0",
                                                        "x3000c0s19b2n0"
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "Categorizing nodes into failures by the type of error they have.\nThis is an additive characterization. Nodes will be added to existing errors.\nThis does not overwrite previously existing errors.\n",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": [
                                                "x3000c0s19b1n0",
                                                "x3000c0s19b2n0"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "description": "Link to other resources",
                            "type": "object",
                            "properties": {
                                "rel": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            },
            "V1SessionStatus": {
                "type": "object",
                "description": "The status for a Boot Session. It is a list of all of the Boot Set Statuses in the session.\n## Link Relationships\n\n* self : The session object\n* boot sets: URL to access the Boot Set status\n",
                "properties": {
                    "metadata": {
                        "type": "object",
                        "description": "The status metadata\n",
                        "properties": {
                            "start_time": {
                                "type": "string",
                                "description": "The start time\n",
                                "example": "2020-04-24T12:00"
                            },
                            "stop_time": {
                                "type": "string",
                                "description": "The stop time\n",
                                "example": "2020-04-24T12:00"
                            },
                            "complete": {
                                "type": "boolean",
                                "description": "Is the object's status complete\n",
                                "example": true
                            },
                            "in_progress": {
                                "type": "boolean",
                                "description": "Is the object still doing something\n",
                                "example": false
                            },
                            "error_count": {
                                "type": "integer",
                                "description": "How many errors were encountered\n",
                                "example": 0
                            }
                        },
                        "additionalProperties": false
                    },
                    "boot_sets": {
                        "description": "The boot sets in the Session\n",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1
                    },
                    "id": {
                        "type": "string",
                        "description": "Session ID"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "description": "Link to other resources",
                            "type": "object",
                            "properties": {
                                "rel": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            },
            "V1BootSet": {
                "description": "A boot set defines a collection of nodes and the information about the\nboot artifacts and parameters to be sent to each node over the specified\nnetwork to enable these nodes to boot. When multiple boot sets are used\nin a session template, the boot_ordinal and shtudown_ordinal indicate\nthe order in which boot sets need to be acted upon. Boot sets sharing\nthe same ordinal number will be addressed at the same time.\n",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The Boot Set name.\n"
                    },
                    "boot_ordinal": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "The boot ordinal. This will establish the order for boot set operations.\nBoot sets boot in order from the lowest to highest boot_ordinal.\n"
                    },
                    "shutdown_ordinal": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "The shutdown ordinal. This will establish the order for boot set\nshutdown operations. Sets shutdown from low to high shutdown_ordinal.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                    },
                    "etag": {
                        "type": "string",
                        "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                    },
                    "kernel_parameters": {
                        "type": "string",
                        "description": "The kernel parameters to use to boot the nodes.\n"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network over which the node will boot from.\nChoices:  NMN -- Node Management Network\npattern: '^(?i)nmn$'\n"
                    },
                    "node_list": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1,
                        "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                    },
                    "node_roles_groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1,
                        "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                    },
                    "node_groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1,
                        "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                    },
                    "rootfs_provider": {
                        "type": "string",
                        "description": "The root file system provider.\n"
                    },
                    "rootfs_provider_passthrough": {
                        "type": "string",
                        "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                    }
                },
                "additionalProperties": false,
                "required": [
                    "path",
                    "type"
                ]
            },
            "V1SessionTemplate": {
                "type": "object",
                "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which when combined with an\naction (i.e. boot, reconfigure, reboot, shutdown) will create a K8s BOA job\nto complete the required tasks for the operation.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                "properties": {
                    "templateUrl": {
                        "type": "string",
                        "description": "The URL to the resource providing the session template data.\nSpecify either a templateURL, or the other session\ntemplate parameters.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                        "example": "cle-1.0.0",
                        "minLength": 1,
                        "maxLength": 45,
                        "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description for the session template.\n"
                    },
                    "cfs_url": {
                        "type": "string",
                        "description": "The url for the repository providing the configuration. DEPRECATED\n"
                    },
                    "cfs_branch": {
                        "type": "string",
                        "description": "The name of the branch containing the configuration that you want to\napply to the nodes.  DEPRECATED.\n"
                    },
                    "enable_cfs": {
                        "type": "boolean",
                        "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                        "default": true
                    },
                    "cfs": {
                        "type": "object",
                        "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled.\n",
                        "properties": {
                            "clone_url": {
                                "type": "string",
                                "description": "The clone url for the repository providing the configuration. (DEPRECATED)\n"
                            },
                            "branch": {
                                "type": "string",
                                "description": "The name of the branch containing the configuration that you want to\napply to the nodes. Mutually exclusive with commit. (DEPRECATED)\n"
                            },
                            "commit": {
                                "type": "string",
                                "description": "The commit id of the configuration that you want to\napply to the nodes. Mutually exclusive with branch. (DEPRECATED)\n"
                            },
                            "playbook": {
                                "type": "string",
                                "description": "The name of the playbook to run for configuration. The file path must be specified\nrelative to the base directory of the config repo. (DEPRECATED)\n"
                            },
                            "configuration": {
                                "type": "string",
                                "description": "The name of configuration to be applied.\n"
                            }
                        },
                        "additionalProperties": false
                    },
                    "partition": {
                        "type": "string",
                        "description": "The machine partition to operate on.\n"
                    },
                    "boot_sets": {
                        "type": "object",
                        "additionalProperties": {
                            "description": "A boot set defines a collection of nodes and the information about the\nboot artifacts and parameters to be sent to each node over the specified\nnetwork to enable these nodes to boot. When multiple boot sets are used\nin a session template, the boot_ordinal and shtudown_ordinal indicate\nthe order in which boot sets need to be acted upon. Boot sets sharing\nthe same ordinal number will be addressed at the same time.\n",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The Boot Set name.\n"
                                },
                                "boot_ordinal": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The boot ordinal. This will establish the order for boot set operations.\nBoot sets boot in order from the lowest to highest boot_ordinal.\n"
                                },
                                "shutdown_ordinal": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "The shutdown ordinal. This will establish the order for boot set\nshutdown operations. Sets shutdown from low to high shutdown_ordinal.\n"
                                },
                                "path": {
                                    "type": "string",
                                    "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                },
                                "etag": {
                                    "type": "string",
                                    "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                },
                                "kernel_parameters": {
                                    "type": "string",
                                    "description": "The kernel parameters to use to boot the nodes.\n"
                                },
                                "network": {
                                    "type": "string",
                                    "description": "The network over which the node will boot from.\nChoices:  NMN -- Node Management Network\npattern: '^(?i)nmn$'\n"
                                },
                                "node_list": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "minItems": 1,
                                    "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                },
                                "node_roles_groups": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "minItems": 1,
                                    "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                },
                                "node_groups": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "minItems": 1,
                                    "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                },
                                "rootfs_provider": {
                                    "type": "string",
                                    "description": "The root file system provider.\n"
                                },
                                "rootfs_provider_passthrough": {
                                    "type": "string",
                                    "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "path",
                                "type"
                            ]
                        }
                    },
                    "links": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "description": "Link to other resources",
                            "type": "object",
                            "properties": {
                                "rel": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                },
                "required": [
                    "name"
                ],
                "additionalProperties": false
            },
            "V1Session": {
                "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                "type": "object",
                "properties": {
                    "operation": {
                        "type": "string",
                        "description": "A Session represents an operation on a SessionTemplate. The creation of a session effectively results in the creation of a K8s Boot Orchestration Agent (BOA) job to perform the duties required to complete the operation.\nOperation -- An operation to perform on nodes in this session.\n\n    Boot         Boot nodes that are off.\n\n    Configure    Reconfigure the nodes using the Configuration Framework\n                 Service (CFS).\n\n    Reboot       Gracefully power down nodes that are on and then power\n                 them back up.\n\n    Shutdown     Gracefully power down nodes that are on.\n",
                        "pattern": "^(?i)boot|configure|reboot|shutdown$"
                    },
                    "templateUuid": {
                        "type": "string",
                        "description": "DEPRECATED - use templateName",
                        "example": "my-session-template",
                        "format": "string"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "The name of the Session Template",
                        "example": "my-session-template",
                        "format": "string"
                    },
                    "job": {
                        "type": "string",
                        "maxLength": 64,
                        "readOnly": true,
                        "description": "The identity of the k8s job that is created to handle the session.\n",
                        "example": "boa-07877de1-09bb-4ca8-a4e5-943b1262dbf0"
                    },
                    "limit": {
                        "type": "string",
                        "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                    },
                    "links": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "description": "Link to other resources",
                            "type": "object",
                            "properties": {
                                "rel": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                },
                "required": [
                    "operation"
                ],
                "additionalProperties": false
            },
            "V1NodeChangeList": {
                "type": "object",
                "description": "The information used to update the status of a node list. It moves nodes from\none category to another within a phase.\n",
                "properties": {
                    "phase": {
                        "type": "string",
                        "example": "Boot"
                    },
                    "source": {
                        "type": "string",
                        "example": "in_progress"
                    },
                    "destination": {
                        "type": "string",
                        "example": "Succeeded"
                    },
                    "node_list": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": [
                                "x3000c0s19b1n0",
                                "x3000c0s19b2n0"
                            ]
                        }
                    }
                },
                "additionalProperties": false,
                "required": [
                    "phase",
                    "source",
                    "destination",
                    "node_list"
                ]
            },
            "V1NodeErrorsList": {
                "type": "object",
                "description": "Categorizing nodes into failures by the type of error they have.\nThis is an additive characterization. Nodes will be added to existing errors.\nThis does not overwrite previously existing errors.\n",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "example": [
                            "x3000c0s19b1n0",
                            "x3000c0s19b2n0"
                        ]
                    }
                }
            },
            "V1UpdateRequestNodeChangeList": {
                "description": "This is the payload sent during an update request. It contains\nupdates to which categories nodes are in.\n",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "update_type": {
                            "description": "The type of update data",
                            "pattern": "NodeChangeList",
                            "type": "string"
                        },
                        "phase": {
                            "description": "The phase that this data belongs to. If  blank, it belongs to\nthe Boot Set itself, which only applies to the GenericMetadata type.\n",
                            "pattern": "(?i)shutdown|boot|configure",
                            "type": "string"
                        },
                        "data": {
                            "type": "object",
                            "description": "The information used to update the status of a node list. It moves nodes from\none category to another within a phase.\n",
                            "properties": {
                                "phase": {
                                    "type": "string",
                                    "example": "Boot"
                                },
                                "source": {
                                    "type": "string",
                                    "example": "in_progress"
                                },
                                "destination": {
                                    "type": "string",
                                    "example": "Succeeded"
                                },
                                "node_list": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": [
                                            "x3000c0s19b1n0",
                                            "x3000c0s19b2n0"
                                        ]
                                    }
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "phase",
                                "source",
                                "destination",
                                "node_list"
                            ]
                        }
                    }
                }
            },
            "V1UpdateRequestNodeErrorsList": {
                "description": "This is the payload sent during an update request. It contains\nupdates to which errors have occurred and which nodes encountered those errors\n",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "update_type": {
                            "description": "The type of update data",
                            "pattern": "NodeErrorsList",
                            "type": "string"
                        },
                        "phase": {
                            "description": "The phase that this data belongs to. If  blank, it belongs to\nthe Boot Set itself, which only applies to the GenericMetadata type.\n",
                            "pattern": "(?i)shutdown|boot|configure",
                            "type": "string"
                        },
                        "data": {
                            "type": "object",
                            "description": "Categorizing nodes into failures by the type of error they have.\nThis is an additive characterization. Nodes will be added to existing errors.\nThis does not overwrite previously existing errors.\n",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": [
                                        "x3000c0s19b1n0",
                                        "x3000c0s19b2n0"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "V1UpdateRequestGenericMetadata": {
                "description": "This is the payload sent during an update request. It contains\nupdates to metadata, specifically start and stop times\n",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "update_type": {
                            "description": "The type of update data",
                            "pattern": "GenericMetadata",
                            "type": "string"
                        },
                        "phase": {
                            "description": "The phase that this data belongs to. If the phase is boot_set, it belongs to\nthe Boot Set itself, which only applies to the GenericMetadata type.\n",
                            "pattern": "(?i)shutdown|boot|configure|boot_set",
                            "type": "string"
                        },
                        "data": {
                            "type": "object",
                            "description": "The status metadata\n",
                            "properties": {
                                "start_time": {
                                    "type": "string",
                                    "description": "The start time\n",
                                    "example": "2020-04-24T12:00"
                                },
                                "stop_time": {
                                    "type": "string",
                                    "description": "The stop time\n",
                                    "example": "2020-04-24T12:00"
                                },
                                "complete": {
                                    "type": "boolean",
                                    "description": "Is the object's status complete\n",
                                    "example": true
                                },
                                "in_progress": {
                                    "type": "boolean",
                                    "description": "Is the object still doing something\n",
                                    "example": false
                                },
                                "error_count": {
                                    "type": "integer",
                                    "description": "How many errors were encountered\n",
                                    "example": 0
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            },
            "V2CfsParameters": {
                "type": "object",
                "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                "properties": {
                    "configuration": {
                        "type": "string",
                        "description": "The name of configuration to be applied.\n"
                    }
                },
                "additionalProperties": false
            },
            "V2SessionTemplate": {
                "type": "object",
                "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which applies the data to\ngroup of components.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                        "example": "cle-1.0.0",
                        "minLength": 1,
                        "maxLength": 45,
                        "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description for the session template.\n"
                    },
                    "enable_cfs": {
                        "type": "boolean",
                        "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                        "default": true
                    },
                    "cfs": {
                        "type": "object",
                        "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                        "properties": {
                            "configuration": {
                                "type": "string",
                                "description": "The name of configuration to be applied.\n"
                            }
                        },
                        "additionalProperties": false
                    },
                    "boot_sets": {
                        "type": "object",
                        "additionalProperties": {
                            "description": "A boot set is a collection of nodes defined by an explicit list, their functional\nrole, and their logical groupings. This collection of nodes is associated with one\nset of boot artifacts and optional additional records for configuration and root\nfilesystem provisioning.\n",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The Boot Set name.\n"
                                },
                                "path": {
                                    "type": "string",
                                    "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                },
                                "cfs": {
                                    "type": "object",
                                    "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                    "properties": {
                                        "configuration": {
                                            "type": "string",
                                            "description": "The name of configuration to be applied.\n"
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "type": {
                                    "type": "string",
                                    "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                },
                                "etag": {
                                    "type": "string",
                                    "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                },
                                "kernel_parameters": {
                                    "type": "string",
                                    "description": "The kernel parameters to use to boot the nodes.\n"
                                },
                                "node_list": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "minItems": 1,
                                    "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                },
                                "node_roles_groups": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "minItems": 1,
                                    "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                },
                                "node_groups": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "minItems": 1,
                                    "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                },
                                "rootfs_provider": {
                                    "type": "string",
                                    "description": "The root file system provider.\n"
                                },
                                "rootfs_provider_passthrough": {
                                    "type": "string",
                                    "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "path",
                                "type"
                            ]
                        }
                    },
                    "links": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "description": "Link to other resources",
                            "type": "object",
                            "properties": {
                                "rel": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                },
                "required": [],
                "additionalProperties": false
            },
            "V2SessionTemplateArray": {
                "description": "An array of session templates.",
                "type": "array",
                "items": {
                    "type": "object",
                    "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which applies the data to\ngroup of components.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                            "example": "cle-1.0.0",
                            "minLength": 1,
                            "maxLength": 45,
                            "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
                            "readOnly": true
                        },
                        "description": {
                            "type": "string",
                            "description": "An optional description for the session template.\n"
                        },
                        "enable_cfs": {
                            "type": "boolean",
                            "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                            "default": true
                        },
                        "cfs": {
                            "type": "object",
                            "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                            "properties": {
                                "configuration": {
                                    "type": "string",
                                    "description": "The name of configuration to be applied.\n"
                                }
                            },
                            "additionalProperties": false
                        },
                        "boot_sets": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A boot set is a collection of nodes defined by an explicit list, their functional\nrole, and their logical groupings. This collection of nodes is associated with one\nset of boot artifacts and optional additional records for configuration and root\nfilesystem provisioning.\n",
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The Boot Set name.\n"
                                    },
                                    "path": {
                                        "type": "string",
                                        "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                    },
                                    "cfs": {
                                        "type": "object",
                                        "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                        "properties": {
                                            "configuration": {
                                                "type": "string",
                                                "description": "The name of configuration to be applied.\n"
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                    },
                                    "etag": {
                                        "type": "string",
                                        "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                    },
                                    "kernel_parameters": {
                                        "type": "string",
                                        "description": "The kernel parameters to use to boot the nodes.\n"
                                    },
                                    "node_list": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "minItems": 1,
                                        "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                    },
                                    "node_roles_groups": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "minItems": 1,
                                        "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                    },
                                    "node_groups": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "minItems": 1,
                                        "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                    },
                                    "rootfs_provider": {
                                        "type": "string",
                                        "description": "The root file system provider.\n"
                                    },
                                    "rootfs_provider_passthrough": {
                                        "type": "string",
                                        "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "path",
                                    "type"
                                ]
                            }
                        },
                        "links": {
                            "type": "array",
                            "readOnly": true,
                            "items": {
                                "description": "Link to other resources",
                                "type": "object",
                                "properties": {
                                    "rel": {
                                        "type": "string"
                                    },
                                    "href": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    },
                    "required": [],
                    "additionalProperties": false
                }
            },
            "V2SessionTemplateValidation": {
                "description": "Message describing errors or incompleteness in a Session Template.\n",
                "type": "string"
            },
            "V2SessionCreate": {
                "description": "A Session Creation object\n",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the session. A uuid name is generated if a name is not provided.",
                        "example": "session-20190728032600",
                        "minLength": 1,
                        "maxLength": 45,
                        "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                    },
                    "operation": {
                        "type": "string",
                        "enum": [
                            "boot",
                            "reboot",
                            "shutdown"
                        ],
                        "description": "A Session represents a desired state that is being applied to a group of components.  Sessions run until all components it manages have either been disabled due to completion, or until all components are managed by other newer sessions.\nOperation -- An operation to perform on nodes in this session.\n    Boot                 Applies the template to the components and boots/reboots if necessary.\n    Reboot               Applies the template to the components guarantees a reboot.\n    Shutdown             Power down nodes that are on.\n"
                    },
                    "template_name": {
                        "type": "string",
                        "description": "The name of the Session Template",
                        "example": "my-session-template",
                        "format": "string"
                    },
                    "limit": {
                        "type": "string",
                        "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                    },
                    "stage": {
                        "type": "boolean",
                        "description": "Set to force nodes to reboot even if they are already in the desired state.\n",
                        "default": false
                    }
                },
                "required": [
                    "operation",
                    "template_name"
                ],
                "additionalProperties": false
            },
            "V2SessionStatus": {
                "type": "object",
                "description": "Information on the status of a session.\n",
                "properties": {
                    "start_time": {
                        "type": "string",
                        "description": "When the session was created.\n"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "When the session completed.\n"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "running",
                            "complete"
                        ],
                        "description": "The status of a session.\n"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error which prevented the session from running\n"
                    }
                },
                "additionalProperties": false
            },
            "V2BootSet": {
                "description": "A boot set is a collection of nodes defined by an explicit list, their functional\nrole, and their logical groupings. This collection of nodes is associated with one\nset of boot artifacts and optional additional records for configuration and root\nfilesystem provisioning.\n",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The Boot Set name.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                    },
                    "cfs": {
                        "type": "object",
                        "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                        "properties": {
                            "configuration": {
                                "type": "string",
                                "description": "The name of configuration to be applied.\n"
                            }
                        },
                        "additionalProperties": false
                    },
                    "type": {
                        "type": "string",
                        "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                    },
                    "etag": {
                        "type": "string",
                        "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                    },
                    "kernel_parameters": {
                        "type": "string",
                        "description": "The kernel parameters to use to boot the nodes.\n"
                    },
                    "node_list": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1,
                        "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                    },
                    "node_roles_groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1,
                        "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                    },
                    "node_groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1,
                        "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                    },
                    "rootfs_provider": {
                        "type": "string",
                        "description": "The root file system provider.\n"
                    },
                    "rootfs_provider_passthrough": {
                        "type": "string",
                        "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                    }
                },
                "additionalProperties": false,
                "required": [
                    "path",
                    "type"
                ]
            },
            "V2Session": {
                "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the session.\n"
                    },
                    "operation": {
                        "type": "string",
                        "enum": [
                            "boot",
                            "reboot",
                            "shutdown"
                        ],
                        "description": "A Session represents a desired state that is being applied to a group of components.  Sessions run until all components it manages have either been disabled due to completion, or until all components are managed by other newer sessions.\nOperation -- An operation to perform on nodes in this session.\n    Boot                 Applies the template to the components and boots/reboots if necessary.\n    Reboot               Applies the template to the components guarantees a reboot.\n    Shutdown             Power down nodes that are on.\n"
                    },
                    "template_name": {
                        "type": "string",
                        "description": "The name of the Session Template",
                        "example": "my-session-template",
                        "format": "string"
                    },
                    "limit": {
                        "type": "string",
                        "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                    },
                    "stage": {
                        "type": "boolean",
                        "description": "Set to stage a session which will not immediately change the state of any components. The \"applystaged\" endpoint can be called at a later time to trigger the start of this session.\n"
                    },
                    "components": {
                        "type": "string",
                        "description": "A comma separated list of nodes, representing the initial list of nodes the session should operate against.  The list will remain even if other sessions have taken over management of the nodes.\n"
                    },
                    "status": {
                        "type": "object",
                        "description": "Information on the status of a session.\n",
                        "properties": {
                            "start_time": {
                                "type": "string",
                                "description": "When the session was created.\n"
                            },
                            "end_time": {
                                "type": "string",
                                "description": "When the session completed.\n"
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "pending",
                                    "running",
                                    "complete"
                                ],
                                "description": "The status of a session.\n"
                            },
                            "error": {
                                "type": "string",
                                "description": "Error which prevented the session from running\n"
                            }
                        },
                        "additionalProperties": false
                    }
                },
                "additionalProperties": false
            },
            "V2SessionArray": {
                "description": "An array of sessions.",
                "type": "array",
                "items": {
                    "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of the session.\n"
                        },
                        "operation": {
                            "type": "string",
                            "enum": [
                                "boot",
                                "reboot",
                                "shutdown"
                            ],
                            "description": "A Session represents a desired state that is being applied to a group of components.  Sessions run until all components it manages have either been disabled due to completion, or until all components are managed by other newer sessions.\nOperation -- An operation to perform on nodes in this session.\n    Boot                 Applies the template to the components and boots/reboots if necessary.\n    Reboot               Applies the template to the components guarantees a reboot.\n    Shutdown             Power down nodes that are on.\n"
                        },
                        "template_name": {
                            "type": "string",
                            "description": "The name of the Session Template",
                            "example": "my-session-template",
                            "format": "string"
                        },
                        "limit": {
                            "type": "string",
                            "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                        },
                        "stage": {
                            "type": "boolean",
                            "description": "Set to stage a session which will not immediately change the state of any components. The \"applystaged\" endpoint can be called at a later time to trigger the start of this session.\n"
                        },
                        "components": {
                            "type": "string",
                            "description": "A comma separated list of nodes, representing the initial list of nodes the session should operate against.  The list will remain even if other sessions have taken over management of the nodes.\n"
                        },
                        "status": {
                            "type": "object",
                            "description": "Information on the status of a session.\n",
                            "properties": {
                                "start_time": {
                                    "type": "string",
                                    "description": "When the session was created.\n"
                                },
                                "end_time": {
                                    "type": "string",
                                    "description": "When the session completed.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "pending",
                                        "running",
                                        "complete"
                                    ],
                                    "description": "The status of a session.\n"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Error which prevented the session from running\n"
                                }
                            },
                            "additionalProperties": false
                        }
                    },
                    "additionalProperties": false
                }
            },
            "V2SessionExtendedStatusPhases": {
                "type": "object",
                "description": "Detailed information on the phases of a session.\n",
                "properties": {
                    "percent_complete": {
                        "type": "float",
                        "description": "The percent of components currently in a completed/stable state\n"
                    },
                    "percent_powering_on": {
                        "type": "float",
                        "description": "The percent of components currently in the powering-on phase\n"
                    },
                    "percent_powering_off": {
                        "type": "float",
                        "description": "The percent of components currently in the powering-off phase\n"
                    },
                    "percent_configuring": {
                        "type": "float",
                        "description": "The percent of components currently in the configuring phase\n"
                    }
                },
                "additionalProperties": false
            },
            "V2SessionExtendedStatusTiming": {
                "type": "object",
                "description": "Detailed information on the timing of a session.\n",
                "properties": {
                    "start_time": {
                        "type": "string",
                        "description": "When the session was created.\n"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "When the session completed.\n"
                    },
                    "duration": {
                        "type": "string",
                        "description": "The current duration of the on-going session or final duration of the completed session.\n"
                    }
                },
                "additionalProperties": false
            },
            "V2SessionExtendedStatus": {
                "type": "object",
                "description": "Detailed information on the status of a session.\n",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "running",
                            "complete"
                        ],
                        "description": "The status of a session.\n"
                    },
                    "managed_components_count": {
                        "type": "integer",
                        "description": "The count of components currently managed by this session\n"
                    },
                    "phases": {
                        "type": "object",
                        "description": "Detailed information on the phases of a session.\n",
                        "properties": {
                            "percent_complete": {
                                "type": "float",
                                "description": "The percent of components currently in a completed/stable state\n"
                            },
                            "percent_powering_on": {
                                "type": "float",
                                "description": "The percent of components currently in the powering-on phase\n"
                            },
                            "percent_powering_off": {
                                "type": "float",
                                "description": "The percent of components currently in the powering-off phase\n"
                            },
                            "percent_configuring": {
                                "type": "float",
                                "description": "The percent of components currently in the configuring phase\n"
                            }
                        },
                        "additionalProperties": false
                    },
                    "percent_successful": {
                        "type": "float",
                        "description": "The percent of components currently in a successful state\n"
                    },
                    "percent_failed": {
                        "type": "float",
                        "description": "The percent of components currently in a failed state\n"
                    },
                    "percent_staged": {
                        "type": "float",
                        "description": "The percent of components currently still staged for this session\n"
                    },
                    "error_summary": {
                        "type": "object",
                        "description": "A summary of the errors currently listed by all components\n"
                    },
                    "timing": {
                        "type": "object",
                        "description": "Detailed information on the timing of a session.\n",
                        "properties": {
                            "start_time": {
                                "type": "string",
                                "description": "When the session was created.\n"
                            },
                            "end_time": {
                                "type": "string",
                                "description": "When the session completed.\n"
                            },
                            "duration": {
                                "type": "string",
                                "description": "The current duration of the on-going session or final duration of the completed session.\n"
                            }
                        },
                        "additionalProperties": false
                    }
                },
                "additionalProperties": false
            },
            "V2BootArtifacts": {
                "description": "A collection of boot artifacts.\n",
                "type": "object",
                "properties": {
                    "kernel": {
                        "type": "string",
                        "description": "An md5sum hash of the kernel ID"
                    },
                    "kernel_parameters": {
                        "type": "string",
                        "description": "Kernel parameters"
                    },
                    "initrd": {
                        "type": "string",
                        "description": "Initrd ID"
                    }
                },
                "additionalProperties": false
            },
            "V2ComponentActualState": {
                "description": "The desired boot artifacts and configuration for a component\n",
                "type": "object",
                "properties": {
                    "boot_artifacts": {
                        "description": "A collection of boot artifacts.\n",
                        "type": "object",
                        "properties": {
                            "kernel": {
                                "type": "string",
                                "description": "An md5sum hash of the kernel ID"
                            },
                            "kernel_parameters": {
                                "type": "string",
                                "description": "Kernel parameters"
                            },
                            "initrd": {
                                "type": "string",
                                "description": "Initrd ID"
                            }
                        },
                        "additionalProperties": false
                    },
                    "bss_token": {
                        "type": "string",
                        "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                    },
                    "last_updated": {
                        "type": "string",
                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                        "example": "2019-07-28T03:26:00Z",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "V2ComponentDesiredState": {
                "description": "The desired boot artifacts and configuration for a component\n",
                "type": "object",
                "properties": {
                    "boot_artifacts": {
                        "description": "A collection of boot artifacts.\n",
                        "type": "object",
                        "properties": {
                            "kernel": {
                                "type": "string",
                                "description": "An md5sum hash of the kernel ID"
                            },
                            "kernel_parameters": {
                                "type": "string",
                                "description": "Kernel parameters"
                            },
                            "initrd": {
                                "type": "string",
                                "description": "Initrd ID"
                            }
                        },
                        "additionalProperties": false
                    },
                    "configuration": {
                        "type": "string",
                        "description": "A CFS configuration ID."
                    },
                    "bss_token": {
                        "type": "string",
                        "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                    },
                    "last_updated": {
                        "type": "string",
                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                        "example": "2019-07-28T03:26:00Z",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "V2ComponentStagedState": {
                "description": "The desired boot artifacts and configuration for a component\n",
                "type": "object",
                "properties": {
                    "boot_artifacts": {
                        "description": "A collection of boot artifacts.\n",
                        "type": "object",
                        "properties": {
                            "kernel": {
                                "type": "string",
                                "description": "An md5sum hash of the kernel ID"
                            },
                            "kernel_parameters": {
                                "type": "string",
                                "description": "Kernel parameters"
                            },
                            "initrd": {
                                "type": "string",
                                "description": "Initrd ID"
                            }
                        },
                        "additionalProperties": false
                    },
                    "configuration": {
                        "type": "string",
                        "description": "A CFS configuration ID."
                    },
                    "session": {
                        "type": "string",
                        "description": "A session which can be triggered at a later time against this component."
                    },
                    "last_updated": {
                        "type": "string",
                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                        "example": "2019-07-28T03:26:00Z",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "V2ComponentLastAction": {
                "description": "Information on the most recent action taken against the node.\n",
                "type": "object",
                "properties": {
                    "last_updated": {
                        "type": "string",
                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                        "example": "2019-07-28T03:26:00Z",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "action": {
                        "type": "string",
                        "description": "A description of the most recent operator/action to impact the component."
                    },
                    "num_attempts": {
                        "type": "integer",
                        "description": "How many attempts have been made for this action."
                    }
                },
                "additionalProperties": false
            },
            "V2ComponentStatus": {
                "description": "Status information for the component",
                "type": "object",
                "properties": {
                    "phase": {
                        "type": "string",
                        "description": "The current phase of the component in the boot process."
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the component.  More detailed than phase.",
                        "readOnly": true
                    },
                    "status_override": {
                        "type": "string",
                        "description": "If set, this will override the status value."
                    }
                },
                "additionalProperties": false
            },
            "V2Component": {
                "description": "The current and desired artifacts state for a component.\n",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The component's id. e.g. xname for hardware components"
                    },
                    "actual_state": {
                        "description": "The desired boot artifacts and configuration for a component\n",
                        "type": "object",
                        "properties": {
                            "boot_artifacts": {
                                "description": "A collection of boot artifacts.\n",
                                "type": "object",
                                "properties": {
                                    "kernel": {
                                        "type": "string",
                                        "description": "An md5sum hash of the kernel ID"
                                    },
                                    "kernel_parameters": {
                                        "type": "string",
                                        "description": "Kernel parameters"
                                    },
                                    "initrd": {
                                        "type": "string",
                                        "description": "Initrd ID"
                                    }
                                },
                                "additionalProperties": false
                            },
                            "bss_token": {
                                "type": "string",
                                "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                            },
                            "last_updated": {
                                "type": "string",
                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                "example": "2019-07-28T03:26:00Z",
                                "format": "date-time",
                                "readOnly": true
                            }
                        }
                    },
                    "desired_state": {
                        "description": "The desired boot artifacts and configuration for a component\n",
                        "type": "object",
                        "properties": {
                            "boot_artifacts": {
                                "description": "A collection of boot artifacts.\n",
                                "type": "object",
                                "properties": {
                                    "kernel": {
                                        "type": "string",
                                        "description": "An md5sum hash of the kernel ID"
                                    },
                                    "kernel_parameters": {
                                        "type": "string",
                                        "description": "Kernel parameters"
                                    },
                                    "initrd": {
                                        "type": "string",
                                        "description": "Initrd ID"
                                    }
                                },
                                "additionalProperties": false
                            },
                            "configuration": {
                                "type": "string",
                                "description": "A CFS configuration ID."
                            },
                            "bss_token": {
                                "type": "string",
                                "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                            },
                            "last_updated": {
                                "type": "string",
                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                "example": "2019-07-28T03:26:00Z",
                                "format": "date-time",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    },
                    "staged_state": {
                        "description": "The desired boot artifacts and configuration for a component\n",
                        "type": "object",
                        "properties": {
                            "boot_artifacts": {
                                "description": "A collection of boot artifacts.\n",
                                "type": "object",
                                "properties": {
                                    "kernel": {
                                        "type": "string",
                                        "description": "An md5sum hash of the kernel ID"
                                    },
                                    "kernel_parameters": {
                                        "type": "string",
                                        "description": "Kernel parameters"
                                    },
                                    "initrd": {
                                        "type": "string",
                                        "description": "Initrd ID"
                                    }
                                },
                                "additionalProperties": false
                            },
                            "configuration": {
                                "type": "string",
                                "description": "A CFS configuration ID."
                            },
                            "session": {
                                "type": "string",
                                "description": "A session which can be triggered at a later time against this component."
                            },
                            "last_updated": {
                                "type": "string",
                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                "example": "2019-07-28T03:26:00Z",
                                "format": "date-time",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    },
                    "last_action": {
                        "description": "Information on the most recent action taken against the node.\n",
                        "type": "object",
                        "properties": {
                            "last_updated": {
                                "type": "string",
                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                "example": "2019-07-28T03:26:00Z",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "action": {
                                "type": "string",
                                "description": "A description of the most recent operator/action to impact the component."
                            },
                            "num_attempts": {
                                "type": "integer",
                                "description": "How many attempts have been made for this action."
                            }
                        },
                        "additionalProperties": false
                    },
                    "status": {
                        "description": "Status information for the component",
                        "type": "object",
                        "properties": {
                            "phase": {
                                "type": "string",
                                "description": "The current phase of the component in the boot process."
                            },
                            "status": {
                                "type": "string",
                                "description": "The current status of the component.  More detailed than phase.",
                                "readOnly": true
                            },
                            "status_override": {
                                "type": "string",
                                "description": "If set, this will override the status value."
                            }
                        },
                        "additionalProperties": false
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "A flag indicating if actions should be taken for this component."
                    },
                    "error": {
                        "type": "string",
                        "description": "A description of the most recent error to impact the component."
                    },
                    "session": {
                        "type": "string",
                        "description": "The session responsible for the component's current state"
                    }
                },
                "additionalProperties": false
            },
            "V2ComponentArray": {
                "description": "An array of component states.",
                "type": "array",
                "items": {
                    "description": "The current and desired artifacts state for a component.\n",
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "The component's id. e.g. xname for hardware components"
                        },
                        "actual_state": {
                            "description": "The desired boot artifacts and configuration for a component\n",
                            "type": "object",
                            "properties": {
                                "boot_artifacts": {
                                    "description": "A collection of boot artifacts.\n",
                                    "type": "object",
                                    "properties": {
                                        "kernel": {
                                            "type": "string",
                                            "description": "An md5sum hash of the kernel ID"
                                        },
                                        "kernel_parameters": {
                                            "type": "string",
                                            "description": "Kernel parameters"
                                        },
                                        "initrd": {
                                            "type": "string",
                                            "description": "Initrd ID"
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "bss_token": {
                                    "type": "string",
                                    "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                },
                                "last_updated": {
                                    "type": "string",
                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                    "example": "2019-07-28T03:26:00Z",
                                    "format": "date-time",
                                    "readOnly": true
                                }
                            }
                        },
                        "desired_state": {
                            "description": "The desired boot artifacts and configuration for a component\n",
                            "type": "object",
                            "properties": {
                                "boot_artifacts": {
                                    "description": "A collection of boot artifacts.\n",
                                    "type": "object",
                                    "properties": {
                                        "kernel": {
                                            "type": "string",
                                            "description": "An md5sum hash of the kernel ID"
                                        },
                                        "kernel_parameters": {
                                            "type": "string",
                                            "description": "Kernel parameters"
                                        },
                                        "initrd": {
                                            "type": "string",
                                            "description": "Initrd ID"
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "configuration": {
                                    "type": "string",
                                    "description": "A CFS configuration ID."
                                },
                                "bss_token": {
                                    "type": "string",
                                    "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                },
                                "last_updated": {
                                    "type": "string",
                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                    "example": "2019-07-28T03:26:00Z",
                                    "format": "date-time",
                                    "readOnly": true
                                }
                            },
                            "additionalProperties": false
                        },
                        "staged_state": {
                            "description": "The desired boot artifacts and configuration for a component\n",
                            "type": "object",
                            "properties": {
                                "boot_artifacts": {
                                    "description": "A collection of boot artifacts.\n",
                                    "type": "object",
                                    "properties": {
                                        "kernel": {
                                            "type": "string",
                                            "description": "An md5sum hash of the kernel ID"
                                        },
                                        "kernel_parameters": {
                                            "type": "string",
                                            "description": "Kernel parameters"
                                        },
                                        "initrd": {
                                            "type": "string",
                                            "description": "Initrd ID"
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "configuration": {
                                    "type": "string",
                                    "description": "A CFS configuration ID."
                                },
                                "session": {
                                    "type": "string",
                                    "description": "A session which can be triggered at a later time against this component."
                                },
                                "last_updated": {
                                    "type": "string",
                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                    "example": "2019-07-28T03:26:00Z",
                                    "format": "date-time",
                                    "readOnly": true
                                }
                            },
                            "additionalProperties": false
                        },
                        "last_action": {
                            "description": "Information on the most recent action taken against the node.\n",
                            "type": "object",
                            "properties": {
                                "last_updated": {
                                    "type": "string",
                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                    "example": "2019-07-28T03:26:00Z",
                                    "format": "date-time",
                                    "readOnly": true
                                },
                                "action": {
                                    "type": "string",
                                    "description": "A description of the most recent operator/action to impact the component."
                                },
                                "num_attempts": {
                                    "type": "integer",
                                    "description": "How many attempts have been made for this action."
                                }
                            },
                            "additionalProperties": false
                        },
                        "status": {
                            "description": "Status information for the component",
                            "type": "object",
                            "properties": {
                                "phase": {
                                    "type": "string",
                                    "description": "The current phase of the component in the boot process."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The current status of the component.  More detailed than phase.",
                                    "readOnly": true
                                },
                                "status_override": {
                                    "type": "string",
                                    "description": "If set, this will override the status value."
                                }
                            },
                            "additionalProperties": false
                        },
                        "enabled": {
                            "type": "boolean",
                            "description": "A flag indicating if actions should be taken for this component."
                        },
                        "error": {
                            "type": "string",
                            "description": "A description of the most recent error to impact the component."
                        },
                        "session": {
                            "type": "string",
                            "description": "The session responsible for the component's current state"
                        }
                    },
                    "additionalProperties": false
                }
            },
            "V2ComponentsFilter": {
                "description": "Information for patching multiple components.",
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "string",
                        "description": "A comma separated list of component ids"
                    },
                    "session": {
                        "type": "string",
                        "description": "A session name.  All components part of this session will be patched."
                    }
                }
            },
            "V2ComponentsUpdate": {
                "description": "Information for patching multiple components.",
                "type": "object",
                "properties": {
                    "patch": {
                        "description": "The current and desired artifacts state for a component.\n",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "The component's id. e.g. xname for hardware components"
                            },
                            "actual_state": {
                                "description": "The desired boot artifacts and configuration for a component\n",
                                "type": "object",
                                "properties": {
                                    "boot_artifacts": {
                                        "description": "A collection of boot artifacts.\n",
                                        "type": "object",
                                        "properties": {
                                            "kernel": {
                                                "type": "string",
                                                "description": "An md5sum hash of the kernel ID"
                                            },
                                            "kernel_parameters": {
                                                "type": "string",
                                                "description": "Kernel parameters"
                                            },
                                            "initrd": {
                                                "type": "string",
                                                "description": "Initrd ID"
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "bss_token": {
                                        "type": "string",
                                        "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                    },
                                    "last_updated": {
                                        "type": "string",
                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                        "example": "2019-07-28T03:26:00Z",
                                        "format": "date-time",
                                        "readOnly": true
                                    }
                                }
                            },
                            "desired_state": {
                                "description": "The desired boot artifacts and configuration for a component\n",
                                "type": "object",
                                "properties": {
                                    "boot_artifacts": {
                                        "description": "A collection of boot artifacts.\n",
                                        "type": "object",
                                        "properties": {
                                            "kernel": {
                                                "type": "string",
                                                "description": "An md5sum hash of the kernel ID"
                                            },
                                            "kernel_parameters": {
                                                "type": "string",
                                                "description": "Kernel parameters"
                                            },
                                            "initrd": {
                                                "type": "string",
                                                "description": "Initrd ID"
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "configuration": {
                                        "type": "string",
                                        "description": "A CFS configuration ID."
                                    },
                                    "bss_token": {
                                        "type": "string",
                                        "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                    },
                                    "last_updated": {
                                        "type": "string",
                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                        "example": "2019-07-28T03:26:00Z",
                                        "format": "date-time",
                                        "readOnly": true
                                    }
                                },
                                "additionalProperties": false
                            },
                            "staged_state": {
                                "description": "The desired boot artifacts and configuration for a component\n",
                                "type": "object",
                                "properties": {
                                    "boot_artifacts": {
                                        "description": "A collection of boot artifacts.\n",
                                        "type": "object",
                                        "properties": {
                                            "kernel": {
                                                "type": "string",
                                                "description": "An md5sum hash of the kernel ID"
                                            },
                                            "kernel_parameters": {
                                                "type": "string",
                                                "description": "Kernel parameters"
                                            },
                                            "initrd": {
                                                "type": "string",
                                                "description": "Initrd ID"
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "configuration": {
                                        "type": "string",
                                        "description": "A CFS configuration ID."
                                    },
                                    "session": {
                                        "type": "string",
                                        "description": "A session which can be triggered at a later time against this component."
                                    },
                                    "last_updated": {
                                        "type": "string",
                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                        "example": "2019-07-28T03:26:00Z",
                                        "format": "date-time",
                                        "readOnly": true
                                    }
                                },
                                "additionalProperties": false
                            },
                            "last_action": {
                                "description": "Information on the most recent action taken against the node.\n",
                                "type": "object",
                                "properties": {
                                    "last_updated": {
                                        "type": "string",
                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                        "example": "2019-07-28T03:26:00Z",
                                        "format": "date-time",
                                        "readOnly": true
                                    },
                                    "action": {
                                        "type": "string",
                                        "description": "A description of the most recent operator/action to impact the component."
                                    },
                                    "num_attempts": {
                                        "type": "integer",
                                        "description": "How many attempts have been made for this action."
                                    }
                                },
                                "additionalProperties": false
                            },
                            "status": {
                                "description": "Status information for the component",
                                "type": "object",
                                "properties": {
                                    "phase": {
                                        "type": "string",
                                        "description": "The current phase of the component in the boot process."
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "The current status of the component.  More detailed than phase.",
                                        "readOnly": true
                                    },
                                    "status_override": {
                                        "type": "string",
                                        "description": "If set, this will override the status value."
                                    }
                                },
                                "additionalProperties": false
                            },
                            "enabled": {
                                "type": "boolean",
                                "description": "A flag indicating if actions should be taken for this component."
                            },
                            "error": {
                                "type": "string",
                                "description": "A description of the most recent error to impact the component."
                            },
                            "session": {
                                "type": "string",
                                "description": "The session responsible for the component's current state"
                            }
                        },
                        "additionalProperties": false
                    },
                    "filters": {
                        "description": "Information for patching multiple components.",
                        "type": "object",
                        "properties": {
                            "ids": {
                                "type": "string",
                                "description": "A comma separated list of component ids"
                            },
                            "session": {
                                "type": "string",
                                "description": "A session name.  All components part of this session will be patched."
                            }
                        }
                    }
                },
                "required": [
                    "patch",
                    "filters"
                ]
            },
            "V2ApplyStagedComponents": {
                "description": "A list of components that should have their staged session applied.\n",
                "type": "object",
                "properties": {
                    "xnames": {
                        "description": "The list of component xnames",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "additionalProperties": false
            },
            "V2ApplyStagedStatus": {
                "description": "A list of components that should have their staged session applied.\n",
                "type": "object",
                "properties": {
                    "succeeded": {
                        "description": "The list of component xnames",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "failed": {
                        "description": "The list of component xnames",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ignored": {
                        "description": "The list of component xnames",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "additionalProperties": false
            },
            "V2Options": {
                "description": "Options for the boot orchestration service.\n",
                "type": "object",
                "properties": {
                    "cleanup_completed_session_ttl": {
                        "type": "string",
                        "description": "Delete complete sessions that are older than cleanup_completed_session_ttl (in hours). 0h disables cleanup behavior."
                    },
                    "component_actual_state_ttl": {
                        "type": "string",
                        "description": "The maximum amount of time a component's actual state is considered valid (in hours). 0h disables cleanup behavior for newly booted nodes and instructs bos-state-reporter to report once instead of periodically."
                    },
                    "disable_components_on_completion": {
                        "type": "boolean",
                        "description": "Allows for BOS components to be marked as disabled after a session has been completed. If false, BOS will continue to maintain the state of the nodes declaratively, even after a session finishes."
                    },
                    "discovery_frequency": {
                        "type": "integer",
                        "description": "How frequently the BOS discovery agent syncs new components from HSM. (in seconds)"
                    },
                    "logging_level": {
                        "type": "string",
                        "description": "The logging level for all BOS services"
                    },
                    "max_power_on_wait_time": {
                        "type": "integer",
                        "description": "How long BOS will wait for a node to power on before rebooting again (in seconds)"
                    },
                    "max_power_off_wait_time": {
                        "type": "integer",
                        "description": "How long BOS will wait for a node to power off before forcefully powering off (in seconds)"
                    },
                    "polling_frequency": {
                        "type": "integer",
                        "description": "How frequently the BOS operators check component state for needed actions. (in seconds)"
                    }
                },
                "additionalProperties": true
            }
        },
        "requestBodies": {
            "V2sessionCreateRequest": {
                "description": "The information to create a session",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "A Session Creation object\n",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the session. A uuid name is generated if a name is not provided.",
                                    "example": "session-20190728032600",
                                    "minLength": 1,
                                    "maxLength": 45,
                                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                },
                                "operation": {
                                    "type": "string",
                                    "enum": [
                                        "boot",
                                        "reboot",
                                        "shutdown"
                                    ],
                                    "description": "A Session represents a desired state that is being applied to a group of components.  Sessions run until all components it manages have either been disabled due to completion, or until all components are managed by other newer sessions.\nOperation -- An operation to perform on nodes in this session.\n    Boot                 Applies the template to the components and boots/reboots if necessary.\n    Reboot               Applies the template to the components guarantees a reboot.\n    Shutdown             Power down nodes that are on.\n"
                                },
                                "template_name": {
                                    "type": "string",
                                    "description": "The name of the Session Template",
                                    "example": "my-session-template",
                                    "format": "string"
                                },
                                "limit": {
                                    "type": "string",
                                    "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                },
                                "stage": {
                                    "type": "boolean",
                                    "description": "Set to force nodes to reboot even if they are already in the desired state.\n",
                                    "default": false
                                }
                            },
                            "required": [
                                "operation",
                                "template_name"
                            ],
                            "additionalProperties": false
                        }
                    }
                }
            },
            "V2componentUpdateRequest": {
                "description": "The state for a single component",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "The current and desired artifacts state for a component.\n",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "The component's id. e.g. xname for hardware components"
                                },
                                "actual_state": {
                                    "description": "The desired boot artifacts and configuration for a component\n",
                                    "type": "object",
                                    "properties": {
                                        "boot_artifacts": {
                                            "description": "A collection of boot artifacts.\n",
                                            "type": "object",
                                            "properties": {
                                                "kernel": {
                                                    "type": "string",
                                                    "description": "An md5sum hash of the kernel ID"
                                                },
                                                "kernel_parameters": {
                                                    "type": "string",
                                                    "description": "Kernel parameters"
                                                },
                                                "initrd": {
                                                    "type": "string",
                                                    "description": "Initrd ID"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "bss_token": {
                                            "type": "string",
                                            "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                        },
                                        "last_updated": {
                                            "type": "string",
                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                            "example": "2019-07-28T03:26:00Z",
                                            "format": "date-time",
                                            "readOnly": true
                                        }
                                    }
                                },
                                "desired_state": {
                                    "description": "The desired boot artifacts and configuration for a component\n",
                                    "type": "object",
                                    "properties": {
                                        "boot_artifacts": {
                                            "description": "A collection of boot artifacts.\n",
                                            "type": "object",
                                            "properties": {
                                                "kernel": {
                                                    "type": "string",
                                                    "description": "An md5sum hash of the kernel ID"
                                                },
                                                "kernel_parameters": {
                                                    "type": "string",
                                                    "description": "Kernel parameters"
                                                },
                                                "initrd": {
                                                    "type": "string",
                                                    "description": "Initrd ID"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "configuration": {
                                            "type": "string",
                                            "description": "A CFS configuration ID."
                                        },
                                        "bss_token": {
                                            "type": "string",
                                            "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                        },
                                        "last_updated": {
                                            "type": "string",
                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                            "example": "2019-07-28T03:26:00Z",
                                            "format": "date-time",
                                            "readOnly": true
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "staged_state": {
                                    "description": "The desired boot artifacts and configuration for a component\n",
                                    "type": "object",
                                    "properties": {
                                        "boot_artifacts": {
                                            "description": "A collection of boot artifacts.\n",
                                            "type": "object",
                                            "properties": {
                                                "kernel": {
                                                    "type": "string",
                                                    "description": "An md5sum hash of the kernel ID"
                                                },
                                                "kernel_parameters": {
                                                    "type": "string",
                                                    "description": "Kernel parameters"
                                                },
                                                "initrd": {
                                                    "type": "string",
                                                    "description": "Initrd ID"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "configuration": {
                                            "type": "string",
                                            "description": "A CFS configuration ID."
                                        },
                                        "session": {
                                            "type": "string",
                                            "description": "A session which can be triggered at a later time against this component."
                                        },
                                        "last_updated": {
                                            "type": "string",
                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                            "example": "2019-07-28T03:26:00Z",
                                            "format": "date-time",
                                            "readOnly": true
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "last_action": {
                                    "description": "Information on the most recent action taken against the node.\n",
                                    "type": "object",
                                    "properties": {
                                        "last_updated": {
                                            "type": "string",
                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                            "example": "2019-07-28T03:26:00Z",
                                            "format": "date-time",
                                            "readOnly": true
                                        },
                                        "action": {
                                            "type": "string",
                                            "description": "A description of the most recent operator/action to impact the component."
                                        },
                                        "num_attempts": {
                                            "type": "integer",
                                            "description": "How many attempts have been made for this action."
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "status": {
                                    "description": "Status information for the component",
                                    "type": "object",
                                    "properties": {
                                        "phase": {
                                            "type": "string",
                                            "description": "The current phase of the component in the boot process."
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "The current status of the component.  More detailed than phase.",
                                            "readOnly": true
                                        },
                                        "status_override": {
                                            "type": "string",
                                            "description": "If set, this will override the status value."
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "description": "A flag indicating if actions should be taken for this component."
                                },
                                "error": {
                                    "type": "string",
                                    "description": "A description of the most recent error to impact the component."
                                },
                                "session": {
                                    "type": "string",
                                    "description": "The session responsible for the component's current state"
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            },
            "V2componentsPutRequest": {
                "description": "The state for an array of components",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "An array of component states.",
                            "type": "array",
                            "items": {
                                "description": "The current and desired artifacts state for a component.\n",
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "The component's id. e.g. xname for hardware components"
                                    },
                                    "actual_state": {
                                        "description": "The desired boot artifacts and configuration for a component\n",
                                        "type": "object",
                                        "properties": {
                                            "boot_artifacts": {
                                                "description": "A collection of boot artifacts.\n",
                                                "type": "object",
                                                "properties": {
                                                    "kernel": {
                                                        "type": "string",
                                                        "description": "An md5sum hash of the kernel ID"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "Kernel parameters"
                                                    },
                                                    "initrd": {
                                                        "type": "string",
                                                        "description": "Initrd ID"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "bss_token": {
                                                "type": "string",
                                                "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                            },
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            }
                                        }
                                    },
                                    "desired_state": {
                                        "description": "The desired boot artifacts and configuration for a component\n",
                                        "type": "object",
                                        "properties": {
                                            "boot_artifacts": {
                                                "description": "A collection of boot artifacts.\n",
                                                "type": "object",
                                                "properties": {
                                                    "kernel": {
                                                        "type": "string",
                                                        "description": "An md5sum hash of the kernel ID"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "Kernel parameters"
                                                    },
                                                    "initrd": {
                                                        "type": "string",
                                                        "description": "Initrd ID"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "configuration": {
                                                "type": "string",
                                                "description": "A CFS configuration ID."
                                            },
                                            "bss_token": {
                                                "type": "string",
                                                "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                            },
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "staged_state": {
                                        "description": "The desired boot artifacts and configuration for a component\n",
                                        "type": "object",
                                        "properties": {
                                            "boot_artifacts": {
                                                "description": "A collection of boot artifacts.\n",
                                                "type": "object",
                                                "properties": {
                                                    "kernel": {
                                                        "type": "string",
                                                        "description": "An md5sum hash of the kernel ID"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "Kernel parameters"
                                                    },
                                                    "initrd": {
                                                        "type": "string",
                                                        "description": "Initrd ID"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "configuration": {
                                                "type": "string",
                                                "description": "A CFS configuration ID."
                                            },
                                            "session": {
                                                "type": "string",
                                                "description": "A session which can be triggered at a later time against this component."
                                            },
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "last_action": {
                                        "description": "Information on the most recent action taken against the node.\n",
                                        "type": "object",
                                        "properties": {
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "A description of the most recent operator/action to impact the component."
                                            },
                                            "num_attempts": {
                                                "type": "integer",
                                                "description": "How many attempts have been made for this action."
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "status": {
                                        "description": "Status information for the component",
                                        "type": "object",
                                        "properties": {
                                            "phase": {
                                                "type": "string",
                                                "description": "The current phase of the component in the boot process."
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "The current status of the component.  More detailed than phase.",
                                                "readOnly": true
                                            },
                                            "status_override": {
                                                "type": "string",
                                                "description": "If set, this will override the status value."
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "A flag indicating if actions should be taken for this component."
                                    },
                                    "error": {
                                        "type": "string",
                                        "description": "A description of the most recent error to impact the component."
                                    },
                                    "session": {
                                        "type": "string",
                                        "description": "The session responsible for the component's current state"
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    }
                }
            },
            "V2componentsUpdateRequest": {
                "description": "The state for an array of components",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "description": "Information for patching multiple components.",
                                    "type": "object",
                                    "properties": {
                                        "patch": {
                                            "description": "The current and desired artifacts state for a component.\n",
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "description": "The component's id. e.g. xname for hardware components"
                                                },
                                                "actual_state": {
                                                    "description": "The desired boot artifacts and configuration for a component\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "boot_artifacts": {
                                                            "description": "A collection of boot artifacts.\n",
                                                            "type": "object",
                                                            "properties": {
                                                                "kernel": {
                                                                    "type": "string",
                                                                    "description": "An md5sum hash of the kernel ID"
                                                                },
                                                                "kernel_parameters": {
                                                                    "type": "string",
                                                                    "description": "Kernel parameters"
                                                                },
                                                                "initrd": {
                                                                    "type": "string",
                                                                    "description": "Initrd ID"
                                                                }
                                                            },
                                                            "additionalProperties": false
                                                        },
                                                        "bss_token": {
                                                            "type": "string",
                                                            "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                        },
                                                        "last_updated": {
                                                            "type": "string",
                                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                            "example": "2019-07-28T03:26:00Z",
                                                            "format": "date-time",
                                                            "readOnly": true
                                                        }
                                                    }
                                                },
                                                "desired_state": {
                                                    "description": "The desired boot artifacts and configuration for a component\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "boot_artifacts": {
                                                            "description": "A collection of boot artifacts.\n",
                                                            "type": "object",
                                                            "properties": {
                                                                "kernel": {
                                                                    "type": "string",
                                                                    "description": "An md5sum hash of the kernel ID"
                                                                },
                                                                "kernel_parameters": {
                                                                    "type": "string",
                                                                    "description": "Kernel parameters"
                                                                },
                                                                "initrd": {
                                                                    "type": "string",
                                                                    "description": "Initrd ID"
                                                                }
                                                            },
                                                            "additionalProperties": false
                                                        },
                                                        "configuration": {
                                                            "type": "string",
                                                            "description": "A CFS configuration ID."
                                                        },
                                                        "bss_token": {
                                                            "type": "string",
                                                            "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                        },
                                                        "last_updated": {
                                                            "type": "string",
                                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                            "example": "2019-07-28T03:26:00Z",
                                                            "format": "date-time",
                                                            "readOnly": true
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "staged_state": {
                                                    "description": "The desired boot artifacts and configuration for a component\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "boot_artifacts": {
                                                            "description": "A collection of boot artifacts.\n",
                                                            "type": "object",
                                                            "properties": {
                                                                "kernel": {
                                                                    "type": "string",
                                                                    "description": "An md5sum hash of the kernel ID"
                                                                },
                                                                "kernel_parameters": {
                                                                    "type": "string",
                                                                    "description": "Kernel parameters"
                                                                },
                                                                "initrd": {
                                                                    "type": "string",
                                                                    "description": "Initrd ID"
                                                                }
                                                            },
                                                            "additionalProperties": false
                                                        },
                                                        "configuration": {
                                                            "type": "string",
                                                            "description": "A CFS configuration ID."
                                                        },
                                                        "session": {
                                                            "type": "string",
                                                            "description": "A session which can be triggered at a later time against this component."
                                                        },
                                                        "last_updated": {
                                                            "type": "string",
                                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                            "example": "2019-07-28T03:26:00Z",
                                                            "format": "date-time",
                                                            "readOnly": true
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "last_action": {
                                                    "description": "Information on the most recent action taken against the node.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "last_updated": {
                                                            "type": "string",
                                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                            "example": "2019-07-28T03:26:00Z",
                                                            "format": "date-time",
                                                            "readOnly": true
                                                        },
                                                        "action": {
                                                            "type": "string",
                                                            "description": "A description of the most recent operator/action to impact the component."
                                                        },
                                                        "num_attempts": {
                                                            "type": "integer",
                                                            "description": "How many attempts have been made for this action."
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "status": {
                                                    "description": "Status information for the component",
                                                    "type": "object",
                                                    "properties": {
                                                        "phase": {
                                                            "type": "string",
                                                            "description": "The current phase of the component in the boot process."
                                                        },
                                                        "status": {
                                                            "type": "string",
                                                            "description": "The current status of the component.  More detailed than phase.",
                                                            "readOnly": true
                                                        },
                                                        "status_override": {
                                                            "type": "string",
                                                            "description": "If set, this will override the status value."
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "enabled": {
                                                    "type": "boolean",
                                                    "description": "A flag indicating if actions should be taken for this component."
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "description": "A description of the most recent error to impact the component."
                                                },
                                                "session": {
                                                    "type": "string",
                                                    "description": "The session responsible for the component's current state"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "filters": {
                                            "description": "Information for patching multiple components.",
                                            "type": "object",
                                            "properties": {
                                                "ids": {
                                                    "type": "string",
                                                    "description": "A comma separated list of component ids"
                                                },
                                                "session": {
                                                    "type": "string",
                                                    "description": "A session name.  All components part of this session will be patched."
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "patch",
                                        "filters"
                                    ]
                                },
                                {
                                    "description": "An array of component states.",
                                    "type": "array",
                                    "items": {
                                        "description": "The current and desired artifacts state for a component.\n",
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The component's id. e.g. xname for hardware components"
                                            },
                                            "actual_state": {
                                                "description": "The desired boot artifacts and configuration for a component\n",
                                                "type": "object",
                                                "properties": {
                                                    "boot_artifacts": {
                                                        "description": "A collection of boot artifacts.\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "kernel": {
                                                                "type": "string",
                                                                "description": "An md5sum hash of the kernel ID"
                                                            },
                                                            "kernel_parameters": {
                                                                "type": "string",
                                                                "description": "Kernel parameters"
                                                            },
                                                            "initrd": {
                                                                "type": "string",
                                                                "description": "Initrd ID"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "bss_token": {
                                                        "type": "string",
                                                        "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                    },
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    }
                                                }
                                            },
                                            "desired_state": {
                                                "description": "The desired boot artifacts and configuration for a component\n",
                                                "type": "object",
                                                "properties": {
                                                    "boot_artifacts": {
                                                        "description": "A collection of boot artifacts.\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "kernel": {
                                                                "type": "string",
                                                                "description": "An md5sum hash of the kernel ID"
                                                            },
                                                            "kernel_parameters": {
                                                                "type": "string",
                                                                "description": "Kernel parameters"
                                                            },
                                                            "initrd": {
                                                                "type": "string",
                                                                "description": "Initrd ID"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "configuration": {
                                                        "type": "string",
                                                        "description": "A CFS configuration ID."
                                                    },
                                                    "bss_token": {
                                                        "type": "string",
                                                        "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                    },
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "staged_state": {
                                                "description": "The desired boot artifacts and configuration for a component\n",
                                                "type": "object",
                                                "properties": {
                                                    "boot_artifacts": {
                                                        "description": "A collection of boot artifacts.\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "kernel": {
                                                                "type": "string",
                                                                "description": "An md5sum hash of the kernel ID"
                                                            },
                                                            "kernel_parameters": {
                                                                "type": "string",
                                                                "description": "Kernel parameters"
                                                            },
                                                            "initrd": {
                                                                "type": "string",
                                                                "description": "Initrd ID"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "configuration": {
                                                        "type": "string",
                                                        "description": "A CFS configuration ID."
                                                    },
                                                    "session": {
                                                        "type": "string",
                                                        "description": "A session which can be triggered at a later time against this component."
                                                    },
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "last_action": {
                                                "description": "Information on the most recent action taken against the node.\n",
                                                "type": "object",
                                                "properties": {
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "description": "A description of the most recent operator/action to impact the component."
                                                    },
                                                    "num_attempts": {
                                                        "type": "integer",
                                                        "description": "How many attempts have been made for this action."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "status": {
                                                "description": "Status information for the component",
                                                "type": "object",
                                                "properties": {
                                                    "phase": {
                                                        "type": "string",
                                                        "description": "The current phase of the component in the boot process."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "The current status of the component.  More detailed than phase.",
                                                        "readOnly": true
                                                    },
                                                    "status_override": {
                                                        "type": "string",
                                                        "description": "If set, this will override the status value."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "enabled": {
                                                "type": "boolean",
                                                "description": "A flag indicating if actions should be taken for this component."
                                            },
                                            "error": {
                                                "type": "string",
                                                "description": "A description of the most recent error to impact the component."
                                            },
                                            "session": {
                                                "type": "string",
                                                "description": "The session responsible for the component's current state"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "V2optionsUpdateRequest": {
                "description": "Service-wide options",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "Options for the boot orchestration service.\n",
                            "type": "object",
                            "properties": {
                                "cleanup_completed_session_ttl": {
                                    "type": "string",
                                    "description": "Delete complete sessions that are older than cleanup_completed_session_ttl (in hours). 0h disables cleanup behavior."
                                },
                                "component_actual_state_ttl": {
                                    "type": "string",
                                    "description": "The maximum amount of time a component's actual state is considered valid (in hours). 0h disables cleanup behavior for newly booted nodes and instructs bos-state-reporter to report once instead of periodically."
                                },
                                "disable_components_on_completion": {
                                    "type": "boolean",
                                    "description": "Allows for BOS components to be marked as disabled after a session has been completed. If false, BOS will continue to maintain the state of the nodes declaratively, even after a session finishes."
                                },
                                "discovery_frequency": {
                                    "type": "integer",
                                    "description": "How frequently the BOS discovery agent syncs new components from HSM. (in seconds)"
                                },
                                "logging_level": {
                                    "type": "string",
                                    "description": "The logging level for all BOS services"
                                },
                                "max_power_on_wait_time": {
                                    "type": "integer",
                                    "description": "How long BOS will wait for a node to power on before rebooting again (in seconds)"
                                },
                                "max_power_off_wait_time": {
                                    "type": "integer",
                                    "description": "How long BOS will wait for a node to power off before forcefully powering off (in seconds)"
                                },
                                "polling_frequency": {
                                    "type": "integer",
                                    "description": "How frequently the BOS operators check component state for needed actions. (in seconds)"
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "V2sessionUpdateRequest": {
                "description": "The state for a single session",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the session.\n"
                                },
                                "operation": {
                                    "type": "string",
                                    "enum": [
                                        "boot",
                                        "reboot",
                                        "shutdown"
                                    ],
                                    "description": "A Session represents a desired state that is being applied to a group of components.  Sessions run until all components it manages have either been disabled due to completion, or until all components are managed by other newer sessions.\nOperation -- An operation to perform on nodes in this session.\n    Boot                 Applies the template to the components and boots/reboots if necessary.\n    Reboot               Applies the template to the components guarantees a reboot.\n    Shutdown             Power down nodes that are on.\n"
                                },
                                "template_name": {
                                    "type": "string",
                                    "description": "The name of the Session Template",
                                    "example": "my-session-template",
                                    "format": "string"
                                },
                                "limit": {
                                    "type": "string",
                                    "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                },
                                "stage": {
                                    "type": "boolean",
                                    "description": "Set to stage a session which will not immediately change the state of any components. The \"applystaged\" endpoint can be called at a later time to trigger the start of this session.\n"
                                },
                                "components": {
                                    "type": "string",
                                    "description": "A comma separated list of nodes, representing the initial list of nodes the session should operate against.  The list will remain even if other sessions have taken over management of the nodes.\n"
                                },
                                "status": {
                                    "type": "object",
                                    "description": "Information on the status of a session.\n",
                                    "properties": {
                                        "start_time": {
                                            "type": "string",
                                            "description": "When the session was created.\n"
                                        },
                                        "end_time": {
                                            "type": "string",
                                            "description": "When the session completed.\n"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "complete"
                                            ],
                                            "description": "The status of a session.\n"
                                        },
                                        "error": {
                                            "type": "string",
                                            "description": "Error which prevented the session from running\n"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            },
            "V2applyStagedRequest": {
                "description": "A list of xnames that should have their staged session applied.",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "A list of components that should have their staged session applied.\n",
                            "type": "object",
                            "properties": {
                                "xnames": {
                                    "description": "The list of component xnames",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            }
        },
        "responses": {
            "ServiceHealth": {
                "description": "Service Health information",
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "Service health status",
                            "type": "object",
                            "properties": {
                                "etcdStatus": {
                                    "type": "string"
                                },
                                "apiStatus": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            },
            "Version": {
                "description": "Get version details\nThe versioning system uses [semver](https://semver.org/).\n## Link Relationships\n* self : Link to itself\n* versions : Link back to the versions resource\n",
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "Version data",
                            "type": "object",
                            "properties": {
                                "major": {
                                    "type": "integer"
                                },
                                "minor": {
                                    "type": "integer"
                                },
                                "patch": {
                                    "type": "integer"
                                },
                                "links": {
                                    "type": "array",
                                    "items": {
                                        "description": "Link to other resources",
                                        "type": "object",
                                        "properties": {
                                            "rel": {
                                                "type": "string"
                                            },
                                            "href": {
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            },
            "ResourceDeleted": {
                "description": "The resource was deleted."
            },
            "V1SessionDetails": {
                "description": "Session details",
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                            "type": "object",
                            "properties": {
                                "operation": {
                                    "type": "string",
                                    "description": "A Session represents an operation on a SessionTemplate. The creation of a session effectively results in the creation of a K8s Boot Orchestration Agent (BOA) job to perform the duties required to complete the operation.\nOperation -- An operation to perform on nodes in this session.\n\n    Boot         Boot nodes that are off.\n\n    Configure    Reconfigure the nodes using the Configuration Framework\n                 Service (CFS).\n\n    Reboot       Gracefully power down nodes that are on and then power\n                 them back up.\n\n    Shutdown     Gracefully power down nodes that are on.\n",
                                    "pattern": "^(?i)boot|configure|reboot|shutdown$"
                                },
                                "templateUuid": {
                                    "type": "string",
                                    "description": "DEPRECATED - use templateName",
                                    "example": "my-session-template",
                                    "format": "string"
                                },
                                "templateName": {
                                    "type": "string",
                                    "description": "The name of the Session Template",
                                    "example": "my-session-template",
                                    "format": "string"
                                },
                                "job": {
                                    "type": "string",
                                    "maxLength": 64,
                                    "readOnly": true,
                                    "description": "The identity of the k8s job that is created to handle the session.\n",
                                    "example": "boa-07877de1-09bb-4ca8-a4e5-943b1262dbf0"
                                },
                                "limit": {
                                    "type": "string",
                                    "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                },
                                "links": {
                                    "type": "array",
                                    "readOnly": true,
                                    "items": {
                                        "description": "Link to other resources",
                                        "type": "object",
                                        "properties": {
                                            "rel": {
                                                "type": "string"
                                            },
                                            "href": {
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                }
                            },
                            "required": [
                                "operation"
                            ],
                            "additionalProperties": false
                        }
                    }
                }
            },
            "V1SessionStatus": {
                "description": "A list of Boot Set Statuses and metadata",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "description": "The status for a Boot Session. It is a list of all of the Boot Set Statuses in the session.\n## Link Relationships\n\n* self : The session object\n* boot sets: URL to access the Boot Set status\n",
                            "properties": {
                                "metadata": {
                                    "type": "object",
                                    "description": "The status metadata\n",
                                    "properties": {
                                        "start_time": {
                                            "type": "string",
                                            "description": "The start time\n",
                                            "example": "2020-04-24T12:00"
                                        },
                                        "stop_time": {
                                            "type": "string",
                                            "description": "The stop time\n",
                                            "example": "2020-04-24T12:00"
                                        },
                                        "complete": {
                                            "type": "boolean",
                                            "description": "Is the object's status complete\n",
                                            "example": true
                                        },
                                        "in_progress": {
                                            "type": "boolean",
                                            "description": "Is the object still doing something\n",
                                            "example": false
                                        },
                                        "error_count": {
                                            "type": "integer",
                                            "description": "How many errors were encountered\n",
                                            "example": 0
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "boot_sets": {
                                    "description": "The boot sets in the Session\n",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "minItems": 1
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Session ID"
                                },
                                "links": {
                                    "type": "array",
                                    "items": {
                                        "description": "Link to other resources",
                                        "type": "object",
                                        "properties": {
                                            "rel": {
                                                "type": "string"
                                            },
                                            "href": {
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "V1SessionTemplateDetails": {
                "description": "Session template details",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which when combined with an\naction (i.e. boot, reconfigure, reboot, shutdown) will create a K8s BOA job\nto complete the required tasks for the operation.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                            "properties": {
                                "templateUrl": {
                                    "type": "string",
                                    "description": "The URL to the resource providing the session template data.\nSpecify either a templateURL, or the other session\ntemplate parameters.\n"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                                    "example": "cle-1.0.0",
                                    "minLength": 1,
                                    "maxLength": 45,
                                    "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "An optional description for the session template.\n"
                                },
                                "cfs_url": {
                                    "type": "string",
                                    "description": "The url for the repository providing the configuration. DEPRECATED\n"
                                },
                                "cfs_branch": {
                                    "type": "string",
                                    "description": "The name of the branch containing the configuration that you want to\napply to the nodes.  DEPRECATED.\n"
                                },
                                "enable_cfs": {
                                    "type": "boolean",
                                    "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                                    "default": true
                                },
                                "cfs": {
                                    "type": "object",
                                    "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled.\n",
                                    "properties": {
                                        "clone_url": {
                                            "type": "string",
                                            "description": "The clone url for the repository providing the configuration. (DEPRECATED)\n"
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "The name of the branch containing the configuration that you want to\napply to the nodes. Mutually exclusive with commit. (DEPRECATED)\n"
                                        },
                                        "commit": {
                                            "type": "string",
                                            "description": "The commit id of the configuration that you want to\napply to the nodes. Mutually exclusive with branch. (DEPRECATED)\n"
                                        },
                                        "playbook": {
                                            "type": "string",
                                            "description": "The name of the playbook to run for configuration. The file path must be specified\nrelative to the base directory of the config repo. (DEPRECATED)\n"
                                        },
                                        "configuration": {
                                            "type": "string",
                                            "description": "The name of configuration to be applied.\n"
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "partition": {
                                    "type": "string",
                                    "description": "The machine partition to operate on.\n"
                                },
                                "boot_sets": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A boot set defines a collection of nodes and the information about the\nboot artifacts and parameters to be sent to each node over the specified\nnetwork to enable these nodes to boot. When multiple boot sets are used\nin a session template, the boot_ordinal and shtudown_ordinal indicate\nthe order in which boot sets need to be acted upon. Boot sets sharing\nthe same ordinal number will be addressed at the same time.\n",
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The Boot Set name.\n"
                                            },
                                            "boot_ordinal": {
                                                "type": "integer",
                                                "minimum": 0,
                                                "description": "The boot ordinal. This will establish the order for boot set operations.\nBoot sets boot in order from the lowest to highest boot_ordinal.\n"
                                            },
                                            "shutdown_ordinal": {
                                                "type": "integer",
                                                "minimum": 0,
                                                "description": "The shutdown ordinal. This will establish the order for boot set\nshutdown operations. Sets shutdown from low to high shutdown_ordinal.\n"
                                            },
                                            "path": {
                                                "type": "string",
                                                "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                            },
                                            "etag": {
                                                "type": "string",
                                                "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                            },
                                            "kernel_parameters": {
                                                "type": "string",
                                                "description": "The kernel parameters to use to boot the nodes.\n"
                                            },
                                            "network": {
                                                "type": "string",
                                                "description": "The network over which the node will boot from.\nChoices:  NMN -- Node Management Network\npattern: '^(?i)nmn$'\n"
                                            },
                                            "node_list": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "minItems": 1,
                                                "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                            },
                                            "node_roles_groups": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "minItems": 1,
                                                "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                            },
                                            "node_groups": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "minItems": 1,
                                                "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                            },
                                            "rootfs_provider": {
                                                "type": "string",
                                                "description": "The root file system provider.\n"
                                            },
                                            "rootfs_provider_passthrough": {
                                                "type": "string",
                                                "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "path",
                                            "type"
                                        ]
                                    }
                                },
                                "links": {
                                    "type": "array",
                                    "readOnly": true,
                                    "items": {
                                        "description": "Link to other resources",
                                        "type": "object",
                                        "properties": {
                                            "rel": {
                                                "type": "string"
                                            },
                                            "href": {
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                }
                            },
                            "required": [
                                "name"
                            ],
                            "additionalProperties": false
                        }
                    }
                }
            },
            "V2SessionTemplateDetails": {
                "description": "Session template details",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which applies the data to\ngroup of components.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                                    "example": "cle-1.0.0",
                                    "minLength": 1,
                                    "maxLength": 45,
                                    "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
                                    "readOnly": true
                                },
                                "description": {
                                    "type": "string",
                                    "description": "An optional description for the session template.\n"
                                },
                                "enable_cfs": {
                                    "type": "boolean",
                                    "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                                    "default": true
                                },
                                "cfs": {
                                    "type": "object",
                                    "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                    "properties": {
                                        "configuration": {
                                            "type": "string",
                                            "description": "The name of configuration to be applied.\n"
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "boot_sets": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A boot set is a collection of nodes defined by an explicit list, their functional\nrole, and their logical groupings. This collection of nodes is associated with one\nset of boot artifacts and optional additional records for configuration and root\nfilesystem provisioning.\n",
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The Boot Set name.\n"
                                            },
                                            "path": {
                                                "type": "string",
                                                "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                            },
                                            "cfs": {
                                                "type": "object",
                                                "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                                "properties": {
                                                    "configuration": {
                                                        "type": "string",
                                                        "description": "The name of configuration to be applied.\n"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                            },
                                            "etag": {
                                                "type": "string",
                                                "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                            },
                                            "kernel_parameters": {
                                                "type": "string",
                                                "description": "The kernel parameters to use to boot the nodes.\n"
                                            },
                                            "node_list": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "minItems": 1,
                                                "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                            },
                                            "node_roles_groups": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "minItems": 1,
                                                "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                            },
                                            "node_groups": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "minItems": 1,
                                                "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                            },
                                            "rootfs_provider": {
                                                "type": "string",
                                                "description": "The root file system provider.\n"
                                            },
                                            "rootfs_provider_passthrough": {
                                                "type": "string",
                                                "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "path",
                                            "type"
                                        ]
                                    }
                                },
                                "links": {
                                    "type": "array",
                                    "readOnly": true,
                                    "items": {
                                        "description": "Link to other resources",
                                        "type": "object",
                                        "properties": {
                                            "rel": {
                                                "type": "string"
                                            },
                                            "href": {
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                }
                            },
                            "required": [],
                            "additionalProperties": false
                        }
                    }
                }
            },
            "V2SessionTemplateDetailsArray": {
                "description": "Session template details",
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "An array of session templates.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which applies the data to\ngroup of components.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                                        "example": "cle-1.0.0",
                                        "minLength": 1,
                                        "maxLength": 45,
                                        "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
                                        "readOnly": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "An optional description for the session template.\n"
                                    },
                                    "enable_cfs": {
                                        "type": "boolean",
                                        "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                                        "default": true
                                    },
                                    "cfs": {
                                        "type": "object",
                                        "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                        "properties": {
                                            "configuration": {
                                                "type": "string",
                                                "description": "The name of configuration to be applied.\n"
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "boot_sets": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "description": "A boot set is a collection of nodes defined by an explicit list, their functional\nrole, and their logical groupings. This collection of nodes is associated with one\nset of boot artifacts and optional additional records for configuration and root\nfilesystem provisioning.\n",
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "The Boot Set name.\n"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                                },
                                                "cfs": {
                                                    "type": "object",
                                                    "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                                    "properties": {
                                                        "configuration": {
                                                            "type": "string",
                                                            "description": "The name of configuration to be applied.\n"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                                },
                                                "etag": {
                                                    "type": "string",
                                                    "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                                },
                                                "kernel_parameters": {
                                                    "type": "string",
                                                    "description": "The kernel parameters to use to boot the nodes.\n"
                                                },
                                                "node_list": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 1,
                                                    "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                                },
                                                "node_roles_groups": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 1,
                                                    "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                                },
                                                "node_groups": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 1,
                                                    "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                                },
                                                "rootfs_provider": {
                                                    "type": "string",
                                                    "description": "The root file system provider.\n"
                                                },
                                                "rootfs_provider_passthrough": {
                                                    "type": "string",
                                                    "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "path",
                                                "type"
                                            ]
                                        }
                                    },
                                    "links": {
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                            "description": "Link to other resources",
                                            "type": "object",
                                            "properties": {
                                                "rel": {
                                                    "type": "string"
                                                },
                                                "href": {
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                },
                                "required": [],
                                "additionalProperties": false
                            }
                        }
                    }
                }
            },
            "V2SessionTemplateValidation": {
                "description": "Session template validity details",
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "Message describing errors or incompleteness in a Session Template.\n",
                            "type": "string"
                        }
                    }
                }
            },
            "V2SessionDetails": {
                "description": "Session details",
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the session.\n"
                                },
                                "operation": {
                                    "type": "string",
                                    "enum": [
                                        "boot",
                                        "reboot",
                                        "shutdown"
                                    ],
                                    "description": "A Session represents a desired state that is being applied to a group of components.  Sessions run until all components it manages have either been disabled due to completion, or until all components are managed by other newer sessions.\nOperation -- An operation to perform on nodes in this session.\n    Boot                 Applies the template to the components and boots/reboots if necessary.\n    Reboot               Applies the template to the components guarantees a reboot.\n    Shutdown             Power down nodes that are on.\n"
                                },
                                "template_name": {
                                    "type": "string",
                                    "description": "The name of the Session Template",
                                    "example": "my-session-template",
                                    "format": "string"
                                },
                                "limit": {
                                    "type": "string",
                                    "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                },
                                "stage": {
                                    "type": "boolean",
                                    "description": "Set to stage a session which will not immediately change the state of any components. The \"applystaged\" endpoint can be called at a later time to trigger the start of this session.\n"
                                },
                                "components": {
                                    "type": "string",
                                    "description": "A comma separated list of nodes, representing the initial list of nodes the session should operate against.  The list will remain even if other sessions have taken over management of the nodes.\n"
                                },
                                "status": {
                                    "type": "object",
                                    "description": "Information on the status of a session.\n",
                                    "properties": {
                                        "start_time": {
                                            "type": "string",
                                            "description": "When the session was created.\n"
                                        },
                                        "end_time": {
                                            "type": "string",
                                            "description": "When the session completed.\n"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "complete"
                                            ],
                                            "description": "The status of a session.\n"
                                        },
                                        "error": {
                                            "type": "string",
                                            "description": "Error which prevented the session from running\n"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            },
            "V2SessionDetailsArray": {
                "description": "Session details",
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "An array of sessions.",
                            "type": "array",
                            "items": {
                                "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the session.\n"
                                    },
                                    "operation": {
                                        "type": "string",
                                        "enum": [
                                            "boot",
                                            "reboot",
                                            "shutdown"
                                        ],
                                        "description": "A Session represents a desired state that is being applied to a group of components.  Sessions run until all components it manages have either been disabled due to completion, or until all components are managed by other newer sessions.\nOperation -- An operation to perform on nodes in this session.\n    Boot                 Applies the template to the components and boots/reboots if necessary.\n    Reboot               Applies the template to the components guarantees a reboot.\n    Shutdown             Power down nodes that are on.\n"
                                    },
                                    "template_name": {
                                        "type": "string",
                                        "description": "The name of the Session Template",
                                        "example": "my-session-template",
                                        "format": "string"
                                    },
                                    "limit": {
                                        "type": "string",
                                        "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                    },
                                    "stage": {
                                        "type": "boolean",
                                        "description": "Set to stage a session which will not immediately change the state of any components. The \"applystaged\" endpoint can be called at a later time to trigger the start of this session.\n"
                                    },
                                    "components": {
                                        "type": "string",
                                        "description": "A comma separated list of nodes, representing the initial list of nodes the session should operate against.  The list will remain even if other sessions have taken over management of the nodes.\n"
                                    },
                                    "status": {
                                        "type": "object",
                                        "description": "Information on the status of a session.\n",
                                        "properties": {
                                            "start_time": {
                                                "type": "string",
                                                "description": "When the session was created.\n"
                                            },
                                            "end_time": {
                                                "type": "string",
                                                "description": "When the session completed.\n"
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "pending",
                                                    "running",
                                                    "complete"
                                                ],
                                                "description": "The status of a session.\n"
                                            },
                                            "error": {
                                                "type": "string",
                                                "description": "Error which prevented the session from running\n"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    }
                }
            },
            "V2SessionExtendedStatus": {
                "description": "Session status details",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "description": "Detailed information on the status of a session.\n",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "pending",
                                        "running",
                                        "complete"
                                    ],
                                    "description": "The status of a session.\n"
                                },
                                "managed_components_count": {
                                    "type": "integer",
                                    "description": "The count of components currently managed by this session\n"
                                },
                                "phases": {
                                    "type": "object",
                                    "description": "Detailed information on the phases of a session.\n",
                                    "properties": {
                                        "percent_complete": {
                                            "type": "float",
                                            "description": "The percent of components currently in a completed/stable state\n"
                                        },
                                        "percent_powering_on": {
                                            "type": "float",
                                            "description": "The percent of components currently in the powering-on phase\n"
                                        },
                                        "percent_powering_off": {
                                            "type": "float",
                                            "description": "The percent of components currently in the powering-off phase\n"
                                        },
                                        "percent_configuring": {
                                            "type": "float",
                                            "description": "The percent of components currently in the configuring phase\n"
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "percent_successful": {
                                    "type": "float",
                                    "description": "The percent of components currently in a successful state\n"
                                },
                                "percent_failed": {
                                    "type": "float",
                                    "description": "The percent of components currently in a failed state\n"
                                },
                                "percent_staged": {
                                    "type": "float",
                                    "description": "The percent of components currently still staged for this session\n"
                                },
                                "error_summary": {
                                    "type": "object",
                                    "description": "A summary of the errors currently listed by all components\n"
                                },
                                "timing": {
                                    "type": "object",
                                    "description": "Detailed information on the timing of a session.\n",
                                    "properties": {
                                        "start_time": {
                                            "type": "string",
                                            "description": "When the session was created.\n"
                                        },
                                        "end_time": {
                                            "type": "string",
                                            "description": "When the session completed.\n"
                                        },
                                        "duration": {
                                            "type": "string",
                                            "description": "The current duration of the on-going session or final duration of the completed session.\n"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            },
            "V2componentDetails": {
                "description": "A single component state",
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "The current and desired artifacts state for a component.\n",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "The component's id. e.g. xname for hardware components"
                                },
                                "actual_state": {
                                    "description": "The desired boot artifacts and configuration for a component\n",
                                    "type": "object",
                                    "properties": {
                                        "boot_artifacts": {
                                            "description": "A collection of boot artifacts.\n",
                                            "type": "object",
                                            "properties": {
                                                "kernel": {
                                                    "type": "string",
                                                    "description": "An md5sum hash of the kernel ID"
                                                },
                                                "kernel_parameters": {
                                                    "type": "string",
                                                    "description": "Kernel parameters"
                                                },
                                                "initrd": {
                                                    "type": "string",
                                                    "description": "Initrd ID"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "bss_token": {
                                            "type": "string",
                                            "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                        },
                                        "last_updated": {
                                            "type": "string",
                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                            "example": "2019-07-28T03:26:00Z",
                                            "format": "date-time",
                                            "readOnly": true
                                        }
                                    }
                                },
                                "desired_state": {
                                    "description": "The desired boot artifacts and configuration for a component\n",
                                    "type": "object",
                                    "properties": {
                                        "boot_artifacts": {
                                            "description": "A collection of boot artifacts.\n",
                                            "type": "object",
                                            "properties": {
                                                "kernel": {
                                                    "type": "string",
                                                    "description": "An md5sum hash of the kernel ID"
                                                },
                                                "kernel_parameters": {
                                                    "type": "string",
                                                    "description": "Kernel parameters"
                                                },
                                                "initrd": {
                                                    "type": "string",
                                                    "description": "Initrd ID"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "configuration": {
                                            "type": "string",
                                            "description": "A CFS configuration ID."
                                        },
                                        "bss_token": {
                                            "type": "string",
                                            "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                        },
                                        "last_updated": {
                                            "type": "string",
                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                            "example": "2019-07-28T03:26:00Z",
                                            "format": "date-time",
                                            "readOnly": true
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "staged_state": {
                                    "description": "The desired boot artifacts and configuration for a component\n",
                                    "type": "object",
                                    "properties": {
                                        "boot_artifacts": {
                                            "description": "A collection of boot artifacts.\n",
                                            "type": "object",
                                            "properties": {
                                                "kernel": {
                                                    "type": "string",
                                                    "description": "An md5sum hash of the kernel ID"
                                                },
                                                "kernel_parameters": {
                                                    "type": "string",
                                                    "description": "Kernel parameters"
                                                },
                                                "initrd": {
                                                    "type": "string",
                                                    "description": "Initrd ID"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "configuration": {
                                            "type": "string",
                                            "description": "A CFS configuration ID."
                                        },
                                        "session": {
                                            "type": "string",
                                            "description": "A session which can be triggered at a later time against this component."
                                        },
                                        "last_updated": {
                                            "type": "string",
                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                            "example": "2019-07-28T03:26:00Z",
                                            "format": "date-time",
                                            "readOnly": true
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "last_action": {
                                    "description": "Information on the most recent action taken against the node.\n",
                                    "type": "object",
                                    "properties": {
                                        "last_updated": {
                                            "type": "string",
                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                            "example": "2019-07-28T03:26:00Z",
                                            "format": "date-time",
                                            "readOnly": true
                                        },
                                        "action": {
                                            "type": "string",
                                            "description": "A description of the most recent operator/action to impact the component."
                                        },
                                        "num_attempts": {
                                            "type": "integer",
                                            "description": "How many attempts have been made for this action."
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "status": {
                                    "description": "Status information for the component",
                                    "type": "object",
                                    "properties": {
                                        "phase": {
                                            "type": "string",
                                            "description": "The current phase of the component in the boot process."
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "The current status of the component.  More detailed than phase.",
                                            "readOnly": true
                                        },
                                        "status_override": {
                                            "type": "string",
                                            "description": "If set, this will override the status value."
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "description": "A flag indicating if actions should be taken for this component."
                                },
                                "error": {
                                    "type": "string",
                                    "description": "A description of the most recent error to impact the component."
                                },
                                "session": {
                                    "type": "string",
                                    "description": "The session responsible for the component's current state"
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            },
            "V2componentDetailsArray": {
                "description": "A collection of component states",
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "An array of component states.",
                            "type": "array",
                            "items": {
                                "description": "The current and desired artifacts state for a component.\n",
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "The component's id. e.g. xname for hardware components"
                                    },
                                    "actual_state": {
                                        "description": "The desired boot artifacts and configuration for a component\n",
                                        "type": "object",
                                        "properties": {
                                            "boot_artifacts": {
                                                "description": "A collection of boot artifacts.\n",
                                                "type": "object",
                                                "properties": {
                                                    "kernel": {
                                                        "type": "string",
                                                        "description": "An md5sum hash of the kernel ID"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "Kernel parameters"
                                                    },
                                                    "initrd": {
                                                        "type": "string",
                                                        "description": "Initrd ID"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "bss_token": {
                                                "type": "string",
                                                "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                            },
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            }
                                        }
                                    },
                                    "desired_state": {
                                        "description": "The desired boot artifacts and configuration for a component\n",
                                        "type": "object",
                                        "properties": {
                                            "boot_artifacts": {
                                                "description": "A collection of boot artifacts.\n",
                                                "type": "object",
                                                "properties": {
                                                    "kernel": {
                                                        "type": "string",
                                                        "description": "An md5sum hash of the kernel ID"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "Kernel parameters"
                                                    },
                                                    "initrd": {
                                                        "type": "string",
                                                        "description": "Initrd ID"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "configuration": {
                                                "type": "string",
                                                "description": "A CFS configuration ID."
                                            },
                                            "bss_token": {
                                                "type": "string",
                                                "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                            },
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "staged_state": {
                                        "description": "The desired boot artifacts and configuration for a component\n",
                                        "type": "object",
                                        "properties": {
                                            "boot_artifacts": {
                                                "description": "A collection of boot artifacts.\n",
                                                "type": "object",
                                                "properties": {
                                                    "kernel": {
                                                        "type": "string",
                                                        "description": "An md5sum hash of the kernel ID"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "Kernel parameters"
                                                    },
                                                    "initrd": {
                                                        "type": "string",
                                                        "description": "Initrd ID"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "configuration": {
                                                "type": "string",
                                                "description": "A CFS configuration ID."
                                            },
                                            "session": {
                                                "type": "string",
                                                "description": "A session which can be triggered at a later time against this component."
                                            },
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "last_action": {
                                        "description": "Information on the most recent action taken against the node.\n",
                                        "type": "object",
                                        "properties": {
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "A description of the most recent operator/action to impact the component."
                                            },
                                            "num_attempts": {
                                                "type": "integer",
                                                "description": "How many attempts have been made for this action."
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "status": {
                                        "description": "Status information for the component",
                                        "type": "object",
                                        "properties": {
                                            "phase": {
                                                "type": "string",
                                                "description": "The current phase of the component in the boot process."
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "The current status of the component.  More detailed than phase.",
                                                "readOnly": true
                                            },
                                            "status_override": {
                                                "type": "string",
                                                "description": "If set, this will override the status value."
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "A flag indicating if actions should be taken for this component."
                                    },
                                    "error": {
                                        "type": "string",
                                        "description": "A description of the most recent error to impact the component."
                                    },
                                    "session": {
                                        "type": "string",
                                        "description": "The session responsible for the component's current state"
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    }
                }
            },
            "V2applyStagedResponse": {
                "description": "A list of xnames that should have their staged session applied.",
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "A list of components that should have their staged session applied.\n",
                            "type": "object",
                            "properties": {
                                "succeeded": {
                                    "description": "The list of component xnames",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "failed": {
                                    "description": "The list of component xnames",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "ignored": {
                                    "description": "The list of component xnames",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            },
            "V2options": {
                "description": "A collection of service-wide options",
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "Options for the boot orchestration service.\n",
                            "type": "object",
                            "properties": {
                                "cleanup_completed_session_ttl": {
                                    "type": "string",
                                    "description": "Delete complete sessions that are older than cleanup_completed_session_ttl (in hours). 0h disables cleanup behavior."
                                },
                                "component_actual_state_ttl": {
                                    "type": "string",
                                    "description": "The maximum amount of time a component's actual state is considered valid (in hours). 0h disables cleanup behavior for newly booted nodes and instructs bos-state-reporter to report once instead of periodically."
                                },
                                "disable_components_on_completion": {
                                    "type": "boolean",
                                    "description": "Allows for BOS components to be marked as disabled after a session has been completed. If false, BOS will continue to maintain the state of the nodes declaratively, even after a session finishes."
                                },
                                "discovery_frequency": {
                                    "type": "integer",
                                    "description": "How frequently the BOS discovery agent syncs new components from HSM. (in seconds)"
                                },
                                "logging_level": {
                                    "type": "string",
                                    "description": "The logging level for all BOS services"
                                },
                                "max_power_on_wait_time": {
                                    "type": "integer",
                                    "description": "How long BOS will wait for a node to power on before rebooting again (in seconds)"
                                },
                                "max_power_off_wait_time": {
                                    "type": "integer",
                                    "description": "How long BOS will wait for a node to power off before forcefully powering off (in seconds)"
                                },
                                "polling_frequency": {
                                    "type": "integer",
                                    "description": "How frequently the BOS operators check component state for needed actions. (in seconds)"
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "BadRequest": {
                "description": "Bad Request",
                "content": {
                    "application/problem+json": {
                        "schema": {
                            "description": "An error response for RFC 7807 problem details.",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                    "type": "string",
                                    "format": "uri",
                                    "default": "about:blank"
                                },
                                "title": {
                                    "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "HTTP status code",
                                    "type": "integer",
                                    "example": 400
                                },
                                "instance": {
                                    "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                    "format": "uri",
                                    "type": "string"
                                },
                                "detail": {
                                    "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            },
            "ResourceNotFound": {
                "description": "The resource was not found.",
                "content": {
                    "application/problem+json": {
                        "schema": {
                            "description": "An error response for RFC 7807 problem details.",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                    "type": "string",
                                    "format": "uri",
                                    "default": "about:blank"
                                },
                                "title": {
                                    "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "HTTP status code",
                                    "type": "integer",
                                    "example": 400
                                },
                                "instance": {
                                    "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                    "format": "uri",
                                    "type": "string"
                                },
                                "detail": {
                                    "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            },
            "ServiceUnavailable": {
                "description": "Service Unavailable",
                "content": {
                    "application/problem+json": {
                        "schema": {
                            "description": "An error response for RFC 7807 problem details.",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                    "type": "string",
                                    "format": "uri",
                                    "default": "about:blank"
                                },
                                "title": {
                                    "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "HTTP status code",
                                    "type": "integer",
                                    "example": 400
                                },
                                "instance": {
                                    "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                    "format": "uri",
                                    "type": "string"
                                },
                                "detail": {
                                    "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            },
            "InternalError": {
                "description": "An Internal Server Error occurred handling the request.",
                "content": {
                    "application/problem+json": {
                        "schema": {
                            "description": "An error response for RFC 7807 problem details.",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                    "type": "string",
                                    "format": "uri",
                                    "default": "about:blank"
                                },
                                "title": {
                                    "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "HTTP status code",
                                    "type": "integer",
                                    "example": 400
                                },
                                "instance": {
                                    "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                    "format": "uri",
                                    "type": "string"
                                },
                                "detail": {
                                    "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/": {
            "get": {
                "summary": "Get API versions",
                "description": "Return list of versions currently running.",
                "tags": [
                    "version"
                ],
                "x-openapi-router-controller": "bos.server.controllers.base",
                "responses": {
                    "200": {
                        "description": "Get version details\nThe versioning system uses [semver](https://semver.org/).\n## Link Relationships\n* self : Link to itself\n* versions : Link back to the versions resource\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Version data",
                                    "type": "object",
                                    "properties": {
                                        "major": {
                                            "type": "integer"
                                        },
                                        "minor": {
                                            "type": "integer"
                                        },
                                        "patch": {
                                            "type": "integer"
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1": {
            "get": {
                "summary": "Get API version",
                "tags": [
                    "version"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.base",
                "operationId": "v1_get",
                "responses": {
                    "200": {
                        "description": "Get version details\nThe versioning system uses [semver](https://semver.org/).\n## Link Relationships\n* self : Link to itself\n* versions : Link back to the versions resource\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Version data",
                                    "type": "object",
                                    "properties": {
                                        "major": {
                                            "type": "integer"
                                        },
                                        "minor": {
                                            "type": "integer"
                                        },
                                        "patch": {
                                            "type": "integer"
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/healthz": {
            "get": {
                "summary": "Get service health details",
                "tags": [
                    "healthz"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.healthz",
                "operationId": "v1_get_healthz",
                "description": "Get bos health details.",
                "responses": {
                    "200": {
                        "description": "Service Health information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Service health status",
                                    "type": "object",
                                    "properties": {
                                        "etcdStatus": {
                                            "type": "string"
                                        },
                                        "apiStatus": {
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/sessiontemplate": {
            "post": {
                "summary": "Create session template",
                "tags": [
                    "sessiontemplate"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.sessiontemplate",
                "operationId": "create_v1_sessiontemplate",
                "description": "Create a new session template.",
                "requestBody": {
                    "description": "A JSON object for creating a session template",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which when combined with an\naction (i.e. boot, reconfigure, reboot, shutdown) will create a K8s BOA job\nto complete the required tasks for the operation.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                                "properties": {
                                    "templateUrl": {
                                        "type": "string",
                                        "description": "The URL to the resource providing the session template data.\nSpecify either a templateURL, or the other session\ntemplate parameters.\n"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                                        "example": "cle-1.0.0",
                                        "minLength": 1,
                                        "maxLength": 45,
                                        "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "An optional description for the session template.\n"
                                    },
                                    "cfs_url": {
                                        "type": "string",
                                        "description": "The url for the repository providing the configuration. DEPRECATED\n"
                                    },
                                    "cfs_branch": {
                                        "type": "string",
                                        "description": "The name of the branch containing the configuration that you want to\napply to the nodes.  DEPRECATED.\n"
                                    },
                                    "enable_cfs": {
                                        "type": "boolean",
                                        "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                                        "default": true
                                    },
                                    "cfs": {
                                        "type": "object",
                                        "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled.\n",
                                        "properties": {
                                            "clone_url": {
                                                "type": "string",
                                                "description": "The clone url for the repository providing the configuration. (DEPRECATED)\n"
                                            },
                                            "branch": {
                                                "type": "string",
                                                "description": "The name of the branch containing the configuration that you want to\napply to the nodes. Mutually exclusive with commit. (DEPRECATED)\n"
                                            },
                                            "commit": {
                                                "type": "string",
                                                "description": "The commit id of the configuration that you want to\napply to the nodes. Mutually exclusive with branch. (DEPRECATED)\n"
                                            },
                                            "playbook": {
                                                "type": "string",
                                                "description": "The name of the playbook to run for configuration. The file path must be specified\nrelative to the base directory of the config repo. (DEPRECATED)\n"
                                            },
                                            "configuration": {
                                                "type": "string",
                                                "description": "The name of configuration to be applied.\n"
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "partition": {
                                        "type": "string",
                                        "description": "The machine partition to operate on.\n"
                                    },
                                    "boot_sets": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "description": "A boot set defines a collection of nodes and the information about the\nboot artifacts and parameters to be sent to each node over the specified\nnetwork to enable these nodes to boot. When multiple boot sets are used\nin a session template, the boot_ordinal and shtudown_ordinal indicate\nthe order in which boot sets need to be acted upon. Boot sets sharing\nthe same ordinal number will be addressed at the same time.\n",
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "The Boot Set name.\n"
                                                },
                                                "boot_ordinal": {
                                                    "type": "integer",
                                                    "minimum": 0,
                                                    "description": "The boot ordinal. This will establish the order for boot set operations.\nBoot sets boot in order from the lowest to highest boot_ordinal.\n"
                                                },
                                                "shutdown_ordinal": {
                                                    "type": "integer",
                                                    "minimum": 0,
                                                    "description": "The shutdown ordinal. This will establish the order for boot set\nshutdown operations. Sets shutdown from low to high shutdown_ordinal.\n"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                                },
                                                "etag": {
                                                    "type": "string",
                                                    "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                                },
                                                "kernel_parameters": {
                                                    "type": "string",
                                                    "description": "The kernel parameters to use to boot the nodes.\n"
                                                },
                                                "network": {
                                                    "type": "string",
                                                    "description": "The network over which the node will boot from.\nChoices:  NMN -- Node Management Network\npattern: '^(?i)nmn$'\n"
                                                },
                                                "node_list": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 1,
                                                    "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                                },
                                                "node_roles_groups": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 1,
                                                    "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                                },
                                                "node_groups": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 1,
                                                    "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                                },
                                                "rootfs_provider": {
                                                    "type": "string",
                                                    "description": "The root file system provider.\n"
                                                },
                                                "rootfs_provider_passthrough": {
                                                    "type": "string",
                                                    "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "path",
                                                "type"
                                            ]
                                        }
                                    },
                                    "links": {
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                            "description": "Link to other resources",
                                            "type": "object",
                                            "properties": {
                                                "rel": {
                                                    "type": "string"
                                                },
                                                "href": {
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session template details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which when combined with an\naction (i.e. boot, reconfigure, reboot, shutdown) will create a K8s BOA job\nto complete the required tasks for the operation.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                                    "properties": {
                                        "templateUrl": {
                                            "type": "string",
                                            "description": "The URL to the resource providing the session template data.\nSpecify either a templateURL, or the other session\ntemplate parameters.\n"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                                            "example": "cle-1.0.0",
                                            "minLength": 1,
                                            "maxLength": 45,
                                            "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "An optional description for the session template.\n"
                                        },
                                        "cfs_url": {
                                            "type": "string",
                                            "description": "The url for the repository providing the configuration. DEPRECATED\n"
                                        },
                                        "cfs_branch": {
                                            "type": "string",
                                            "description": "The name of the branch containing the configuration that you want to\napply to the nodes.  DEPRECATED.\n"
                                        },
                                        "enable_cfs": {
                                            "type": "boolean",
                                            "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                                            "default": true
                                        },
                                        "cfs": {
                                            "type": "object",
                                            "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled.\n",
                                            "properties": {
                                                "clone_url": {
                                                    "type": "string",
                                                    "description": "The clone url for the repository providing the configuration. (DEPRECATED)\n"
                                                },
                                                "branch": {
                                                    "type": "string",
                                                    "description": "The name of the branch containing the configuration that you want to\napply to the nodes. Mutually exclusive with commit. (DEPRECATED)\n"
                                                },
                                                "commit": {
                                                    "type": "string",
                                                    "description": "The commit id of the configuration that you want to\napply to the nodes. Mutually exclusive with branch. (DEPRECATED)\n"
                                                },
                                                "playbook": {
                                                    "type": "string",
                                                    "description": "The name of the playbook to run for configuration. The file path must be specified\nrelative to the base directory of the config repo. (DEPRECATED)\n"
                                                },
                                                "configuration": {
                                                    "type": "string",
                                                    "description": "The name of configuration to be applied.\n"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "partition": {
                                            "type": "string",
                                            "description": "The machine partition to operate on.\n"
                                        },
                                        "boot_sets": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "description": "A boot set defines a collection of nodes and the information about the\nboot artifacts and parameters to be sent to each node over the specified\nnetwork to enable these nodes to boot. When multiple boot sets are used\nin a session template, the boot_ordinal and shtudown_ordinal indicate\nthe order in which boot sets need to be acted upon. Boot sets sharing\nthe same ordinal number will be addressed at the same time.\n",
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "The Boot Set name.\n"
                                                    },
                                                    "boot_ordinal": {
                                                        "type": "integer",
                                                        "minimum": 0,
                                                        "description": "The boot ordinal. This will establish the order for boot set operations.\nBoot sets boot in order from the lowest to highest boot_ordinal.\n"
                                                    },
                                                    "shutdown_ordinal": {
                                                        "type": "integer",
                                                        "minimum": 0,
                                                        "description": "The shutdown ordinal. This will establish the order for boot set\nshutdown operations. Sets shutdown from low to high shutdown_ordinal.\n"
                                                    },
                                                    "path": {
                                                        "type": "string",
                                                        "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                                    },
                                                    "etag": {
                                                        "type": "string",
                                                        "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "The kernel parameters to use to boot the nodes.\n"
                                                    },
                                                    "network": {
                                                        "type": "string",
                                                        "description": "The network over which the node will boot from.\nChoices:  NMN -- Node Management Network\npattern: '^(?i)nmn$'\n"
                                                    },
                                                    "node_list": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                                    },
                                                    "node_roles_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                                    },
                                                    "node_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                                    },
                                                    "rootfs_provider": {
                                                        "type": "string",
                                                        "description": "The root file system provider.\n"
                                                    },
                                                    "rootfs_provider_passthrough": {
                                                        "type": "string",
                                                        "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "required": [
                                                    "path",
                                                    "type"
                                                ]
                                            }
                                        },
                                        "links": {
                                            "type": "array",
                                            "readOnly": true,
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List session templates",
                "description": "List all session templates. Session templates are\nuniquely identified by the name.\n",
                "tags": [
                    "sessiontemplate"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.sessiontemplate",
                "operationId": "get_v1_sessiontemplates",
                "responses": {
                    "200": {
                        "description": "A collection of SessionTemplates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which when combined with an\naction (i.e. boot, reconfigure, reboot, shutdown) will create a K8s BOA job\nto complete the required tasks for the operation.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                                        "properties": {
                                            "templateUrl": {
                                                "type": "string",
                                                "description": "The URL to the resource providing the session template data.\nSpecify either a templateURL, or the other session\ntemplate parameters.\n"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                                                "example": "cle-1.0.0",
                                                "minLength": 1,
                                                "maxLength": 45,
                                                "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "An optional description for the session template.\n"
                                            },
                                            "cfs_url": {
                                                "type": "string",
                                                "description": "The url for the repository providing the configuration. DEPRECATED\n"
                                            },
                                            "cfs_branch": {
                                                "type": "string",
                                                "description": "The name of the branch containing the configuration that you want to\napply to the nodes.  DEPRECATED.\n"
                                            },
                                            "enable_cfs": {
                                                "type": "boolean",
                                                "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                                                "default": true
                                            },
                                            "cfs": {
                                                "type": "object",
                                                "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled.\n",
                                                "properties": {
                                                    "clone_url": {
                                                        "type": "string",
                                                        "description": "The clone url for the repository providing the configuration. (DEPRECATED)\n"
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "The name of the branch containing the configuration that you want to\napply to the nodes. Mutually exclusive with commit. (DEPRECATED)\n"
                                                    },
                                                    "commit": {
                                                        "type": "string",
                                                        "description": "The commit id of the configuration that you want to\napply to the nodes. Mutually exclusive with branch. (DEPRECATED)\n"
                                                    },
                                                    "playbook": {
                                                        "type": "string",
                                                        "description": "The name of the playbook to run for configuration. The file path must be specified\nrelative to the base directory of the config repo. (DEPRECATED)\n"
                                                    },
                                                    "configuration": {
                                                        "type": "string",
                                                        "description": "The name of configuration to be applied.\n"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "partition": {
                                                "type": "string",
                                                "description": "The machine partition to operate on.\n"
                                            },
                                            "boot_sets": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "description": "A boot set defines a collection of nodes and the information about the\nboot artifacts and parameters to be sent to each node over the specified\nnetwork to enable these nodes to boot. When multiple boot sets are used\nin a session template, the boot_ordinal and shtudown_ordinal indicate\nthe order in which boot sets need to be acted upon. Boot sets sharing\nthe same ordinal number will be addressed at the same time.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "The Boot Set name.\n"
                                                        },
                                                        "boot_ordinal": {
                                                            "type": "integer",
                                                            "minimum": 0,
                                                            "description": "The boot ordinal. This will establish the order for boot set operations.\nBoot sets boot in order from the lowest to highest boot_ordinal.\n"
                                                        },
                                                        "shutdown_ordinal": {
                                                            "type": "integer",
                                                            "minimum": 0,
                                                            "description": "The shutdown ordinal. This will establish the order for boot set\nshutdown operations. Sets shutdown from low to high shutdown_ordinal.\n"
                                                        },
                                                        "path": {
                                                            "type": "string",
                                                            "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                                        },
                                                        "etag": {
                                                            "type": "string",
                                                            "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                                        },
                                                        "kernel_parameters": {
                                                            "type": "string",
                                                            "description": "The kernel parameters to use to boot the nodes.\n"
                                                        },
                                                        "network": {
                                                            "type": "string",
                                                            "description": "The network over which the node will boot from.\nChoices:  NMN -- Node Management Network\npattern: '^(?i)nmn$'\n"
                                                        },
                                                        "node_list": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "minItems": 1,
                                                            "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                                        },
                                                        "node_roles_groups": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "minItems": 1,
                                                            "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                                        },
                                                        "node_groups": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "minItems": 1,
                                                            "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                                        },
                                                        "rootfs_provider": {
                                                            "type": "string",
                                                            "description": "The root file system provider.\n"
                                                        },
                                                        "rootfs_provider_passthrough": {
                                                            "type": "string",
                                                            "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": [
                                                        "path",
                                                        "type"
                                                    ]
                                                }
                                            },
                                            "links": {
                                                "type": "array",
                                                "readOnly": true,
                                                "items": {
                                                    "description": "Link to other resources",
                                                    "type": "object",
                                                    "properties": {
                                                        "rel": {
                                                            "type": "string"
                                                        },
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                }
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ],
                                        "additionalProperties": false
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/sessiontemplate/{session_template_id}": {
            "parameters": [
                {
                    "name": "session_template_id",
                    "in": "path",
                    "description": "Session Template ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get session template by id",
                "description": "Get session template by session_template_id.\nThe session_template_id corresponds to the *name*\nof the session template.\n",
                "tags": [
                    "sessiontemplate"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.sessiontemplate",
                "operationId": "get_v1_sessiontemplate",
                "responses": {
                    "200": {
                        "description": "Session template details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which when combined with an\naction (i.e. boot, reconfigure, reboot, shutdown) will create a K8s BOA job\nto complete the required tasks for the operation.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                                    "properties": {
                                        "templateUrl": {
                                            "type": "string",
                                            "description": "The URL to the resource providing the session template data.\nSpecify either a templateURL, or the other session\ntemplate parameters.\n"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                                            "example": "cle-1.0.0",
                                            "minLength": 1,
                                            "maxLength": 45,
                                            "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "An optional description for the session template.\n"
                                        },
                                        "cfs_url": {
                                            "type": "string",
                                            "description": "The url for the repository providing the configuration. DEPRECATED\n"
                                        },
                                        "cfs_branch": {
                                            "type": "string",
                                            "description": "The name of the branch containing the configuration that you want to\napply to the nodes.  DEPRECATED.\n"
                                        },
                                        "enable_cfs": {
                                            "type": "boolean",
                                            "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                                            "default": true
                                        },
                                        "cfs": {
                                            "type": "object",
                                            "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled.\n",
                                            "properties": {
                                                "clone_url": {
                                                    "type": "string",
                                                    "description": "The clone url for the repository providing the configuration. (DEPRECATED)\n"
                                                },
                                                "branch": {
                                                    "type": "string",
                                                    "description": "The name of the branch containing the configuration that you want to\napply to the nodes. Mutually exclusive with commit. (DEPRECATED)\n"
                                                },
                                                "commit": {
                                                    "type": "string",
                                                    "description": "The commit id of the configuration that you want to\napply to the nodes. Mutually exclusive with branch. (DEPRECATED)\n"
                                                },
                                                "playbook": {
                                                    "type": "string",
                                                    "description": "The name of the playbook to run for configuration. The file path must be specified\nrelative to the base directory of the config repo. (DEPRECATED)\n"
                                                },
                                                "configuration": {
                                                    "type": "string",
                                                    "description": "The name of configuration to be applied.\n"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "partition": {
                                            "type": "string",
                                            "description": "The machine partition to operate on.\n"
                                        },
                                        "boot_sets": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "description": "A boot set defines a collection of nodes and the information about the\nboot artifacts and parameters to be sent to each node over the specified\nnetwork to enable these nodes to boot. When multiple boot sets are used\nin a session template, the boot_ordinal and shtudown_ordinal indicate\nthe order in which boot sets need to be acted upon. Boot sets sharing\nthe same ordinal number will be addressed at the same time.\n",
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "The Boot Set name.\n"
                                                    },
                                                    "boot_ordinal": {
                                                        "type": "integer",
                                                        "minimum": 0,
                                                        "description": "The boot ordinal. This will establish the order for boot set operations.\nBoot sets boot in order from the lowest to highest boot_ordinal.\n"
                                                    },
                                                    "shutdown_ordinal": {
                                                        "type": "integer",
                                                        "minimum": 0,
                                                        "description": "The shutdown ordinal. This will establish the order for boot set\nshutdown operations. Sets shutdown from low to high shutdown_ordinal.\n"
                                                    },
                                                    "path": {
                                                        "type": "string",
                                                        "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                                    },
                                                    "etag": {
                                                        "type": "string",
                                                        "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "The kernel parameters to use to boot the nodes.\n"
                                                    },
                                                    "network": {
                                                        "type": "string",
                                                        "description": "The network over which the node will boot from.\nChoices:  NMN -- Node Management Network\npattern: '^(?i)nmn$'\n"
                                                    },
                                                    "node_list": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                                    },
                                                    "node_roles_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                                    },
                                                    "node_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                                    },
                                                    "rootfs_provider": {
                                                        "type": "string",
                                                        "description": "The root file system provider.\n"
                                                    },
                                                    "rootfs_provider_passthrough": {
                                                        "type": "string",
                                                        "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "required": [
                                                    "path",
                                                    "type"
                                                ]
                                            }
                                        },
                                        "links": {
                                            "type": "array",
                                            "readOnly": true,
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a session template",
                "description": "Delete a session template.",
                "tags": [
                    "sessiontemplate"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.sessiontemplate",
                "operationId": "delete_v1_sessiontemplate",
                "responses": {
                    "204": {
                        "description": "The resource was deleted."
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/sessiontemplatetemplate": {
            "get": {
                "summary": "Get an example session template.",
                "description": "Returns a skeleton of a session template, which can be\nused as a starting point for users creating their own\nsession templates.\n",
                "tags": [
                    "sessiontemplate"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.sessiontemplate",
                "operationId": "get_v1_sessiontemplatetemplate",
                "responses": {
                    "200": {
                        "description": "Session template details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which when combined with an\naction (i.e. boot, reconfigure, reboot, shutdown) will create a K8s BOA job\nto complete the required tasks for the operation.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                                    "properties": {
                                        "templateUrl": {
                                            "type": "string",
                                            "description": "The URL to the resource providing the session template data.\nSpecify either a templateURL, or the other session\ntemplate parameters.\n"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                                            "example": "cle-1.0.0",
                                            "minLength": 1,
                                            "maxLength": 45,
                                            "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "An optional description for the session template.\n"
                                        },
                                        "cfs_url": {
                                            "type": "string",
                                            "description": "The url for the repository providing the configuration. DEPRECATED\n"
                                        },
                                        "cfs_branch": {
                                            "type": "string",
                                            "description": "The name of the branch containing the configuration that you want to\napply to the nodes.  DEPRECATED.\n"
                                        },
                                        "enable_cfs": {
                                            "type": "boolean",
                                            "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                                            "default": true
                                        },
                                        "cfs": {
                                            "type": "object",
                                            "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled.\n",
                                            "properties": {
                                                "clone_url": {
                                                    "type": "string",
                                                    "description": "The clone url for the repository providing the configuration. (DEPRECATED)\n"
                                                },
                                                "branch": {
                                                    "type": "string",
                                                    "description": "The name of the branch containing the configuration that you want to\napply to the nodes. Mutually exclusive with commit. (DEPRECATED)\n"
                                                },
                                                "commit": {
                                                    "type": "string",
                                                    "description": "The commit id of the configuration that you want to\napply to the nodes. Mutually exclusive with branch. (DEPRECATED)\n"
                                                },
                                                "playbook": {
                                                    "type": "string",
                                                    "description": "The name of the playbook to run for configuration. The file path must be specified\nrelative to the base directory of the config repo. (DEPRECATED)\n"
                                                },
                                                "configuration": {
                                                    "type": "string",
                                                    "description": "The name of configuration to be applied.\n"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "partition": {
                                            "type": "string",
                                            "description": "The machine partition to operate on.\n"
                                        },
                                        "boot_sets": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "description": "A boot set defines a collection of nodes and the information about the\nboot artifacts and parameters to be sent to each node over the specified\nnetwork to enable these nodes to boot. When multiple boot sets are used\nin a session template, the boot_ordinal and shtudown_ordinal indicate\nthe order in which boot sets need to be acted upon. Boot sets sharing\nthe same ordinal number will be addressed at the same time.\n",
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "The Boot Set name.\n"
                                                    },
                                                    "boot_ordinal": {
                                                        "type": "integer",
                                                        "minimum": 0,
                                                        "description": "The boot ordinal. This will establish the order for boot set operations.\nBoot sets boot in order from the lowest to highest boot_ordinal.\n"
                                                    },
                                                    "shutdown_ordinal": {
                                                        "type": "integer",
                                                        "minimum": 0,
                                                        "description": "The shutdown ordinal. This will establish the order for boot set\nshutdown operations. Sets shutdown from low to high shutdown_ordinal.\n"
                                                    },
                                                    "path": {
                                                        "type": "string",
                                                        "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                                    },
                                                    "etag": {
                                                        "type": "string",
                                                        "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "The kernel parameters to use to boot the nodes.\n"
                                                    },
                                                    "network": {
                                                        "type": "string",
                                                        "description": "The network over which the node will boot from.\nChoices:  NMN -- Node Management Network\npattern: '^(?i)nmn$'\n"
                                                    },
                                                    "node_list": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                                    },
                                                    "node_roles_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                                    },
                                                    "node_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                                    },
                                                    "rootfs_provider": {
                                                        "type": "string",
                                                        "description": "The root file system provider.\n"
                                                    },
                                                    "rootfs_provider_passthrough": {
                                                        "type": "string",
                                                        "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "required": [
                                                    "path",
                                                    "type"
                                                ]
                                            }
                                        },
                                        "links": {
                                            "type": "array",
                                            "readOnly": true,
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/session": {
            "post": {
                "summary": "Create a session",
                "description": "The creation of a session performs the operation\nspecified in the SessionCreateRequest\non the boot set(s) defined in the session template.\n",
                "tags": [
                    "session"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.session",
                "operationId": "create_v1_session",
                "requestBody": {
                    "description": "A JSON object for creating a Session",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                                "type": "object",
                                "properties": {
                                    "operation": {
                                        "type": "string",
                                        "description": "A Session represents an operation on a SessionTemplate. The creation of a session effectively results in the creation of a K8s Boot Orchestration Agent (BOA) job to perform the duties required to complete the operation.\nOperation -- An operation to perform on nodes in this session.\n\n    Boot         Boot nodes that are off.\n\n    Configure    Reconfigure the nodes using the Configuration Framework\n                 Service (CFS).\n\n    Reboot       Gracefully power down nodes that are on and then power\n                 them back up.\n\n    Shutdown     Gracefully power down nodes that are on.\n",
                                        "pattern": "^(?i)boot|configure|reboot|shutdown$"
                                    },
                                    "templateUuid": {
                                        "type": "string",
                                        "description": "DEPRECATED - use templateName",
                                        "example": "my-session-template",
                                        "format": "string"
                                    },
                                    "templateName": {
                                        "type": "string",
                                        "description": "The name of the Session Template",
                                        "example": "my-session-template",
                                        "format": "string"
                                    },
                                    "job": {
                                        "type": "string",
                                        "maxLength": 64,
                                        "readOnly": true,
                                        "description": "The identity of the k8s job that is created to handle the session.\n",
                                        "example": "boa-07877de1-09bb-4ca8-a4e5-943b1262dbf0"
                                    },
                                    "limit": {
                                        "type": "string",
                                        "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                    },
                                    "links": {
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                            "description": "Link to other resources",
                                            "type": "object",
                                            "properties": {
                                                "rel": {
                                                    "type": "string"
                                                },
                                                "href": {
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                },
                                "required": [
                                    "operation"
                                ],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                                    "type": "object",
                                    "properties": {
                                        "operation": {
                                            "type": "string",
                                            "description": "A Session represents an operation on a SessionTemplate. The creation of a session effectively results in the creation of a K8s Boot Orchestration Agent (BOA) job to perform the duties required to complete the operation.\nOperation -- An operation to perform on nodes in this session.\n\n    Boot         Boot nodes that are off.\n\n    Configure    Reconfigure the nodes using the Configuration Framework\n                 Service (CFS).\n\n    Reboot       Gracefully power down nodes that are on and then power\n                 them back up.\n\n    Shutdown     Gracefully power down nodes that are on.\n",
                                            "pattern": "^(?i)boot|configure|reboot|shutdown$"
                                        },
                                        "templateUuid": {
                                            "type": "string",
                                            "description": "DEPRECATED - use templateName",
                                            "example": "my-session-template",
                                            "format": "string"
                                        },
                                        "templateName": {
                                            "type": "string",
                                            "description": "The name of the Session Template",
                                            "example": "my-session-template",
                                            "format": "string"
                                        },
                                        "job": {
                                            "type": "string",
                                            "maxLength": 64,
                                            "readOnly": true,
                                            "description": "The identity of the k8s job that is created to handle the session.\n",
                                            "example": "boa-07877de1-09bb-4ca8-a4e5-943b1262dbf0"
                                        },
                                        "limit": {
                                            "type": "string",
                                            "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                        },
                                        "links": {
                                            "type": "array",
                                            "readOnly": true,
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "required": [
                                        "operation"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List sessions",
                "description": "List all sessions, including those in progress and those complete.\n",
                "tags": [
                    "session"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.session",
                "operationId": "get_v1_sessions",
                "responses": {
                    "200": {
                        "description": "A collection of Sessions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                                        "type": "object",
                                        "properties": {
                                            "operation": {
                                                "type": "string",
                                                "description": "A Session represents an operation on a SessionTemplate. The creation of a session effectively results in the creation of a K8s Boot Orchestration Agent (BOA) job to perform the duties required to complete the operation.\nOperation -- An operation to perform on nodes in this session.\n\n    Boot         Boot nodes that are off.\n\n    Configure    Reconfigure the nodes using the Configuration Framework\n                 Service (CFS).\n\n    Reboot       Gracefully power down nodes that are on and then power\n                 them back up.\n\n    Shutdown     Gracefully power down nodes that are on.\n",
                                                "pattern": "^(?i)boot|configure|reboot|shutdown$"
                                            },
                                            "templateUuid": {
                                                "type": "string",
                                                "description": "DEPRECATED - use templateName",
                                                "example": "my-session-template",
                                                "format": "string"
                                            },
                                            "templateName": {
                                                "type": "string",
                                                "description": "The name of the Session Template",
                                                "example": "my-session-template",
                                                "format": "string"
                                            },
                                            "job": {
                                                "type": "string",
                                                "maxLength": 64,
                                                "readOnly": true,
                                                "description": "The identity of the k8s job that is created to handle the session.\n",
                                                "example": "boa-07877de1-09bb-4ca8-a4e5-943b1262dbf0"
                                            },
                                            "limit": {
                                                "type": "string",
                                                "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                            },
                                            "links": {
                                                "type": "array",
                                                "readOnly": true,
                                                "items": {
                                                    "description": "Link to other resources",
                                                    "type": "object",
                                                    "properties": {
                                                        "rel": {
                                                            "type": "string"
                                                        },
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                }
                                            }
                                        },
                                        "required": [
                                            "operation"
                                        ],
                                        "additionalProperties": false
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/session/{session_id}": {
            "get": {
                "summary": "Get session details by id",
                "description": "Get session details by session_id.",
                "tags": [
                    "session"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.session",
                "operationId": "get_v1_session",
                "responses": {
                    "200": {
                        "description": "Session details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                                    "type": "object",
                                    "properties": {
                                        "operation": {
                                            "type": "string",
                                            "description": "A Session represents an operation on a SessionTemplate. The creation of a session effectively results in the creation of a K8s Boot Orchestration Agent (BOA) job to perform the duties required to complete the operation.\nOperation -- An operation to perform on nodes in this session.\n\n    Boot         Boot nodes that are off.\n\n    Configure    Reconfigure the nodes using the Configuration Framework\n                 Service (CFS).\n\n    Reboot       Gracefully power down nodes that are on and then power\n                 them back up.\n\n    Shutdown     Gracefully power down nodes that are on.\n",
                                            "pattern": "^(?i)boot|configure|reboot|shutdown$"
                                        },
                                        "templateUuid": {
                                            "type": "string",
                                            "description": "DEPRECATED - use templateName",
                                            "example": "my-session-template",
                                            "format": "string"
                                        },
                                        "templateName": {
                                            "type": "string",
                                            "description": "The name of the Session Template",
                                            "example": "my-session-template",
                                            "format": "string"
                                        },
                                        "job": {
                                            "type": "string",
                                            "maxLength": 64,
                                            "readOnly": true,
                                            "description": "The identity of the k8s job that is created to handle the session.\n",
                                            "example": "boa-07877de1-09bb-4ca8-a4e5-943b1262dbf0"
                                        },
                                        "limit": {
                                            "type": "string",
                                            "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                        },
                                        "links": {
                                            "type": "array",
                                            "readOnly": true,
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "required": [
                                        "operation"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete session by id",
                "description": "Delete session by session_id.",
                "tags": [
                    "session"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.session",
                "operationId": "delete_v1_session",
                "responses": {
                    "204": {
                        "description": "The resource was deleted."
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "session_id",
                    "in": "path",
                    "description": "Session ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/v1/session/{session_id}/status": {
            "parameters": [
                {
                    "name": "session_id",
                    "in": "path",
                    "description": "Session ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "A list of the statuses for the different boot sets.",
                "description": "A list of the statuses for the different boot sets.\n",
                "tags": [
                    "session"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.status",
                "operationId": "get_v1_session_status",
                "responses": {
                    "200": {
                        "description": "A list of Boot Set Statuses and metadata",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "The status for a Boot Session. It is a list of all of the Boot Set Statuses in the session.\n## Link Relationships\n\n* self : The session object\n* boot sets: URL to access the Boot Set status\n",
                                    "properties": {
                                        "metadata": {
                                            "type": "object",
                                            "description": "The status metadata\n",
                                            "properties": {
                                                "start_time": {
                                                    "type": "string",
                                                    "description": "The start time\n",
                                                    "example": "2020-04-24T12:00"
                                                },
                                                "stop_time": {
                                                    "type": "string",
                                                    "description": "The stop time\n",
                                                    "example": "2020-04-24T12:00"
                                                },
                                                "complete": {
                                                    "type": "boolean",
                                                    "description": "Is the object's status complete\n",
                                                    "example": true
                                                },
                                                "in_progress": {
                                                    "type": "boolean",
                                                    "description": "Is the object still doing something\n",
                                                    "example": false
                                                },
                                                "error_count": {
                                                    "type": "integer",
                                                    "description": "How many errors were encountered\n",
                                                    "example": 0
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "boot_sets": {
                                            "description": "The boot sets in the Session\n",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "minItems": 1
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "Session ID"
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create the initial session status",
                "description": "Creates the initial session status.\n",
                "tags": [
                    "session"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.status",
                "operationId": "create_v1_session_status",
                "requestBody": {
                    "description": "A JSON object for creating the status for a session",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "description": "The status for a Boot Session. It is a list of all of the Boot Set Statuses in the session.\n## Link Relationships\n\n* self : The session object\n* boot sets: URL to access the Boot Set status\n",
                                "properties": {
                                    "metadata": {
                                        "type": "object",
                                        "description": "The status metadata\n",
                                        "properties": {
                                            "start_time": {
                                                "type": "string",
                                                "description": "The start time\n",
                                                "example": "2020-04-24T12:00"
                                            },
                                            "stop_time": {
                                                "type": "string",
                                                "description": "The stop time\n",
                                                "example": "2020-04-24T12:00"
                                            },
                                            "complete": {
                                                "type": "boolean",
                                                "description": "Is the object's status complete\n",
                                                "example": true
                                            },
                                            "in_progress": {
                                                "type": "boolean",
                                                "description": "Is the object still doing something\n",
                                                "example": false
                                            },
                                            "error_count": {
                                                "type": "integer",
                                                "description": "How many errors were encountered\n",
                                                "example": 0
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "boot_sets": {
                                        "description": "The boot sets in the Session\n",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "minItems": 1
                                    },
                                    "id": {
                                        "type": "string",
                                        "description": "Session ID"
                                    },
                                    "links": {
                                        "type": "array",
                                        "items": {
                                            "description": "Link to other resources",
                                            "type": "object",
                                            "properties": {
                                                "rel": {
                                                    "type": "string"
                                                },
                                                "href": {
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "A list of Boot Set Statuses and metadata",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "The status for a Boot Session. It is a list of all of the Boot Set Statuses in the session.\n## Link Relationships\n\n* self : The session object\n* boot sets: URL to access the Boot Set status\n",
                                    "properties": {
                                        "metadata": {
                                            "type": "object",
                                            "description": "The status metadata\n",
                                            "properties": {
                                                "start_time": {
                                                    "type": "string",
                                                    "description": "The start time\n",
                                                    "example": "2020-04-24T12:00"
                                                },
                                                "stop_time": {
                                                    "type": "string",
                                                    "description": "The stop time\n",
                                                    "example": "2020-04-24T12:00"
                                                },
                                                "complete": {
                                                    "type": "boolean",
                                                    "description": "Is the object's status complete\n",
                                                    "example": true
                                                },
                                                "in_progress": {
                                                    "type": "boolean",
                                                    "description": "Is the object still doing something\n",
                                                    "example": false
                                                },
                                                "error_count": {
                                                    "type": "integer",
                                                    "description": "How many errors were encountered\n",
                                                    "example": 0
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "boot_sets": {
                                            "description": "The boot sets in the Session\n",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "minItems": 1
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "Session ID"
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update the session status",
                "description": "Update the session status. You can update the start or stop times.\n",
                "tags": [
                    "session"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.status",
                "operationId": "update_v1_session_status",
                "requestBody": {
                    "description": "A JSON object for updating the status for a session",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "description": "The status metadata\n",
                                "properties": {
                                    "start_time": {
                                        "type": "string",
                                        "description": "The start time\n",
                                        "example": "2020-04-24T12:00"
                                    },
                                    "stop_time": {
                                        "type": "string",
                                        "description": "The stop time\n",
                                        "example": "2020-04-24T12:00"
                                    },
                                    "complete": {
                                        "type": "boolean",
                                        "description": "Is the object's status complete\n",
                                        "example": true
                                    },
                                    "in_progress": {
                                        "type": "boolean",
                                        "description": "Is the object still doing something\n",
                                        "example": false
                                    },
                                    "error_count": {
                                        "type": "integer",
                                        "description": "How many errors were encountered\n",
                                        "example": 0
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of Boot Set Statuses and metadata",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "The status for a Boot Session. It is a list of all of the Boot Set Statuses in the session.\n## Link Relationships\n\n* self : The session object\n* boot sets: URL to access the Boot Set status\n",
                                    "properties": {
                                        "metadata": {
                                            "type": "object",
                                            "description": "The status metadata\n",
                                            "properties": {
                                                "start_time": {
                                                    "type": "string",
                                                    "description": "The start time\n",
                                                    "example": "2020-04-24T12:00"
                                                },
                                                "stop_time": {
                                                    "type": "string",
                                                    "description": "The stop time\n",
                                                    "example": "2020-04-24T12:00"
                                                },
                                                "complete": {
                                                    "type": "boolean",
                                                    "description": "Is the object's status complete\n",
                                                    "example": true
                                                },
                                                "in_progress": {
                                                    "type": "boolean",
                                                    "description": "Is the object still doing something\n",
                                                    "example": false
                                                },
                                                "error_count": {
                                                    "type": "integer",
                                                    "description": "How many errors were encountered\n",
                                                    "example": 0
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "boot_sets": {
                                            "description": "The boot sets in the Session\n",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "minItems": 1
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "Session ID"
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the session status",
                "description": "Deletes an existing Session status\n",
                "tags": [
                    "session"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.status",
                "operationId": "delete_v1_session_status",
                "responses": {
                    "204": {
                        "description": "The resource was deleted."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/session/{session_id}/status/{boot_set_name}": {
            "parameters": [
                {
                    "name": "session_id",
                    "in": "path",
                    "description": "Session ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "boot_set_name",
                    "in": "path",
                    "description": "Boot set name",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get the status for a boot set.",
                "description": "Get the status for a boot set.",
                "tags": [
                    "session"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.status",
                "operationId": "get_v1_session_status_by_bootset",
                "responses": {
                    "200": {
                        "description": "A list of the Phase Statuses for the Boot Set and metadata",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "The status for a Boot Set. It as a list of the phase statuses for the Boot Set.\n\n## Link Relationships\n\n* self : The session object\n* phase : A phase of the boot set\n",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "minLength": 1,
                                            "description": "Name of the Boot Set",
                                            "example": "Boot-Set"
                                        },
                                        "session": {
                                            "type": "string",
                                            "description": "Session ID",
                                            "example": "Session-ID"
                                        },
                                        "metadata": {
                                            "type": "object",
                                            "description": "The status metadata\n",
                                            "properties": {
                                                "start_time": {
                                                    "type": "string",
                                                    "description": "The start time\n",
                                                    "example": "2020-04-24T12:00"
                                                },
                                                "stop_time": {
                                                    "type": "string",
                                                    "description": "The stop time\n",
                                                    "example": "2020-04-24T12:00"
                                                },
                                                "complete": {
                                                    "type": "boolean",
                                                    "description": "Is the object's status complete\n",
                                                    "example": true
                                                },
                                                "in_progress": {
                                                    "type": "boolean",
                                                    "description": "Is the object still doing something\n",
                                                    "example": false
                                                },
                                                "error_count": {
                                                    "type": "integer",
                                                    "description": "How many errors were encountered\n",
                                                    "example": 0
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "phases": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "description": "The phase's status. It is a list of all of the nodes in the phase and\nwhat category those nodes fall into within the phase.\n\n## Link Relationships\n\n* self : The session object\n",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name of the Phase\n",
                                                        "example": "Boot",
                                                        "pattern": "^(?i)boot|configure|shutdown$"
                                                    },
                                                    "metadata": {
                                                        "type": "object",
                                                        "description": "The status metadata\n",
                                                        "properties": {
                                                            "start_time": {
                                                                "type": "string",
                                                                "description": "The start time\n",
                                                                "example": "2020-04-24T12:00"
                                                            },
                                                            "stop_time": {
                                                                "type": "string",
                                                                "description": "The stop time\n",
                                                                "example": "2020-04-24T12:00"
                                                            },
                                                            "complete": {
                                                                "type": "boolean",
                                                                "description": "Is the object's status complete\n",
                                                                "example": true
                                                            },
                                                            "in_progress": {
                                                                "type": "boolean",
                                                                "description": "Is the object still doing something\n",
                                                                "example": false
                                                            },
                                                            "error_count": {
                                                                "type": "integer",
                                                                "description": "How many errors were encountered\n",
                                                                "example": 0
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "categories": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "description": "A list of the nodes in a given category within a phase.\n\n## Link Relationships\n\n* self : The session object\n",
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string",
                                                                    "description": "Name of the Phase Category\n",
                                                                    "example": "Succeeded",
                                                                    "pattern": "^(?i)not_started|in_progress|succeeded|failed|excluded$"
                                                                },
                                                                "node_list": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string",
                                                                        "example": [
                                                                            "x3000c0s19b1n0",
                                                                            "x3000c0s19b2n0"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "errors": {
                                                        "type": "object",
                                                        "description": "Categorizing nodes into failures by the type of error they have.\nThis is an additive characterization. Nodes will be added to existing errors.\nThis does not overwrite previously existing errors.\n",
                                                        "additionalProperties": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": [
                                                                    "x3000c0s19b1n0",
                                                                    "x3000c0s19b2n0"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a Boot Set Status",
                "description": "Create a status for a Boot Set\n",
                "tags": [
                    "session",
                    "status"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.status",
                "operationId": "create_v1_boot_set_status",
                "requestBody": {
                    "description": "A JSON object for creating a status for a Boot Set",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "description": "The status for a Boot Set. It as a list of the phase statuses for the Boot Set.\n\n## Link Relationships\n\n* self : The session object\n* phase : A phase of the boot set\n",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "description": "Name of the Boot Set",
                                        "example": "Boot-Set"
                                    },
                                    "session": {
                                        "type": "string",
                                        "description": "Session ID",
                                        "example": "Session-ID"
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "description": "The status metadata\n",
                                        "properties": {
                                            "start_time": {
                                                "type": "string",
                                                "description": "The start time\n",
                                                "example": "2020-04-24T12:00"
                                            },
                                            "stop_time": {
                                                "type": "string",
                                                "description": "The stop time\n",
                                                "example": "2020-04-24T12:00"
                                            },
                                            "complete": {
                                                "type": "boolean",
                                                "description": "Is the object's status complete\n",
                                                "example": true
                                            },
                                            "in_progress": {
                                                "type": "boolean",
                                                "description": "Is the object still doing something\n",
                                                "example": false
                                            },
                                            "error_count": {
                                                "type": "integer",
                                                "description": "How many errors were encountered\n",
                                                "example": 0
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "phases": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "description": "The phase's status. It is a list of all of the nodes in the phase and\nwhat category those nodes fall into within the phase.\n\n## Link Relationships\n\n* self : The session object\n",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "Name of the Phase\n",
                                                    "example": "Boot",
                                                    "pattern": "^(?i)boot|configure|shutdown$"
                                                },
                                                "metadata": {
                                                    "type": "object",
                                                    "description": "The status metadata\n",
                                                    "properties": {
                                                        "start_time": {
                                                            "type": "string",
                                                            "description": "The start time\n",
                                                            "example": "2020-04-24T12:00"
                                                        },
                                                        "stop_time": {
                                                            "type": "string",
                                                            "description": "The stop time\n",
                                                            "example": "2020-04-24T12:00"
                                                        },
                                                        "complete": {
                                                            "type": "boolean",
                                                            "description": "Is the object's status complete\n",
                                                            "example": true
                                                        },
                                                        "in_progress": {
                                                            "type": "boolean",
                                                            "description": "Is the object still doing something\n",
                                                            "example": false
                                                        },
                                                        "error_count": {
                                                            "type": "integer",
                                                            "description": "How many errors were encountered\n",
                                                            "example": 0
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "description": "A list of the nodes in a given category within a phase.\n\n## Link Relationships\n\n* self : The session object\n",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "description": "Name of the Phase Category\n",
                                                                "example": "Succeeded",
                                                                "pattern": "^(?i)not_started|in_progress|succeeded|failed|excluded$"
                                                            },
                                                            "node_list": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "example": [
                                                                        "x3000c0s19b1n0",
                                                                        "x3000c0s19b2n0"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "errors": {
                                                    "type": "object",
                                                    "description": "Categorizing nodes into failures by the type of error they have.\nThis is an additive characterization. Nodes will be added to existing errors.\nThis does not overwrite previously existing errors.\n",
                                                    "additionalProperties": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": [
                                                                "x3000c0s19b1n0",
                                                                "x3000c0s19b2n0"
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "links": {
                                        "type": "array",
                                        "items": {
                                            "description": "Link to other resources",
                                            "type": "object",
                                            "properties": {
                                                "rel": {
                                                    "type": "string"
                                                },
                                                "href": {
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created Boot Set status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "The status for a Boot Set. It as a list of the phase statuses for the Boot Set.\n\n## Link Relationships\n\n* self : The session object\n* phase : A phase of the boot set\n",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "minLength": 1,
                                            "description": "Name of the Boot Set",
                                            "example": "Boot-Set"
                                        },
                                        "session": {
                                            "type": "string",
                                            "description": "Session ID",
                                            "example": "Session-ID"
                                        },
                                        "metadata": {
                                            "type": "object",
                                            "description": "The status metadata\n",
                                            "properties": {
                                                "start_time": {
                                                    "type": "string",
                                                    "description": "The start time\n",
                                                    "example": "2020-04-24T12:00"
                                                },
                                                "stop_time": {
                                                    "type": "string",
                                                    "description": "The stop time\n",
                                                    "example": "2020-04-24T12:00"
                                                },
                                                "complete": {
                                                    "type": "boolean",
                                                    "description": "Is the object's status complete\n",
                                                    "example": true
                                                },
                                                "in_progress": {
                                                    "type": "boolean",
                                                    "description": "Is the object still doing something\n",
                                                    "example": false
                                                },
                                                "error_count": {
                                                    "type": "integer",
                                                    "description": "How many errors were encountered\n",
                                                    "example": 0
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "phases": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "description": "The phase's status. It is a list of all of the nodes in the phase and\nwhat category those nodes fall into within the phase.\n\n## Link Relationships\n\n* self : The session object\n",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name of the Phase\n",
                                                        "example": "Boot",
                                                        "pattern": "^(?i)boot|configure|shutdown$"
                                                    },
                                                    "metadata": {
                                                        "type": "object",
                                                        "description": "The status metadata\n",
                                                        "properties": {
                                                            "start_time": {
                                                                "type": "string",
                                                                "description": "The start time\n",
                                                                "example": "2020-04-24T12:00"
                                                            },
                                                            "stop_time": {
                                                                "type": "string",
                                                                "description": "The stop time\n",
                                                                "example": "2020-04-24T12:00"
                                                            },
                                                            "complete": {
                                                                "type": "boolean",
                                                                "description": "Is the object's status complete\n",
                                                                "example": true
                                                            },
                                                            "in_progress": {
                                                                "type": "boolean",
                                                                "description": "Is the object still doing something\n",
                                                                "example": false
                                                            },
                                                            "error_count": {
                                                                "type": "integer",
                                                                "description": "How many errors were encountered\n",
                                                                "example": 0
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "categories": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "description": "A list of the nodes in a given category within a phase.\n\n## Link Relationships\n\n* self : The session object\n",
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string",
                                                                    "description": "Name of the Phase Category\n",
                                                                    "example": "Succeeded",
                                                                    "pattern": "^(?i)not_started|in_progress|succeeded|failed|excluded$"
                                                                },
                                                                "node_list": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string",
                                                                        "example": [
                                                                            "x3000c0s19b1n0",
                                                                            "x3000c0s19b2n0"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "errors": {
                                                        "type": "object",
                                                        "description": "Categorizing nodes into failures by the type of error they have.\nThis is an additive characterization. Nodes will be added to existing errors.\nThis does not overwrite previously existing errors.\n",
                                                        "additionalProperties": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": [
                                                                    "x3000c0s19b1n0",
                                                                    "x3000c0s19b2n0"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update the status.",
                "description": "This will change the status for one or more nodes within\nthe boot set.\n",
                "tags": [
                    "session"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.status",
                "operationId": "update_v1_session_status_by_bootset",
                "requestBody": {
                    "description": "A JSON object for updating the status for a session",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "description": "This is the payload sent during an update request. It contains\nupdates to which categories nodes are in.\n",
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "update_type": {
                                                    "description": "The type of update data",
                                                    "pattern": "NodeChangeList",
                                                    "type": "string"
                                                },
                                                "phase": {
                                                    "description": "The phase that this data belongs to. If  blank, it belongs to\nthe Boot Set itself, which only applies to the GenericMetadata type.\n",
                                                    "pattern": "(?i)shutdown|boot|configure",
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "description": "The information used to update the status of a node list. It moves nodes from\none category to another within a phase.\n",
                                                    "properties": {
                                                        "phase": {
                                                            "type": "string",
                                                            "example": "Boot"
                                                        },
                                                        "source": {
                                                            "type": "string",
                                                            "example": "in_progress"
                                                        },
                                                        "destination": {
                                                            "type": "string",
                                                            "example": "Succeeded"
                                                        },
                                                        "node_list": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": [
                                                                    "x3000c0s19b1n0",
                                                                    "x3000c0s19b2n0"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": [
                                                        "phase",
                                                        "source",
                                                        "destination",
                                                        "node_list"
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "description": "This is the payload sent during an update request. It contains\nupdates to which errors have occurred and which nodes encountered those errors\n",
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "update_type": {
                                                    "description": "The type of update data",
                                                    "pattern": "NodeErrorsList",
                                                    "type": "string"
                                                },
                                                "phase": {
                                                    "description": "The phase that this data belongs to. If  blank, it belongs to\nthe Boot Set itself, which only applies to the GenericMetadata type.\n",
                                                    "pattern": "(?i)shutdown|boot|configure",
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "description": "Categorizing nodes into failures by the type of error they have.\nThis is an additive characterization. Nodes will be added to existing errors.\nThis does not overwrite previously existing errors.\n",
                                                    "additionalProperties": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": [
                                                                "x3000c0s19b1n0",
                                                                "x3000c0s19b2n0"
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "description": "This is the payload sent during an update request. It contains\nupdates to metadata, specifically start and stop times\n",
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "update_type": {
                                                    "description": "The type of update data",
                                                    "pattern": "GenericMetadata",
                                                    "type": "string"
                                                },
                                                "phase": {
                                                    "description": "The phase that this data belongs to. If the phase is boot_set, it belongs to\nthe Boot Set itself, which only applies to the GenericMetadata type.\n",
                                                    "pattern": "(?i)shutdown|boot|configure|boot_set",
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "description": "The status metadata\n",
                                                    "properties": {
                                                        "start_time": {
                                                            "type": "string",
                                                            "description": "The start time\n",
                                                            "example": "2020-04-24T12:00"
                                                        },
                                                        "stop_time": {
                                                            "type": "string",
                                                            "description": "The stop time\n",
                                                            "example": "2020-04-24T12:00"
                                                        },
                                                        "complete": {
                                                            "type": "boolean",
                                                            "description": "Is the object's status complete\n",
                                                            "example": true
                                                        },
                                                        "in_progress": {
                                                            "type": "boolean",
                                                            "description": "Is the object still doing something\n",
                                                            "example": false
                                                        },
                                                        "error_count": {
                                                            "type": "integer",
                                                            "description": "How many errors were encountered\n",
                                                            "example": 0
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of Boot Set Statuses and metadata",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "The status for a Boot Set. It as a list of the phase statuses for the Boot Set.\n\n## Link Relationships\n\n* self : The session object\n* phase : A phase of the boot set\n",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "minLength": 1,
                                            "description": "Name of the Boot Set",
                                            "example": "Boot-Set"
                                        },
                                        "session": {
                                            "type": "string",
                                            "description": "Session ID",
                                            "example": "Session-ID"
                                        },
                                        "metadata": {
                                            "type": "object",
                                            "description": "The status metadata\n",
                                            "properties": {
                                                "start_time": {
                                                    "type": "string",
                                                    "description": "The start time\n",
                                                    "example": "2020-04-24T12:00"
                                                },
                                                "stop_time": {
                                                    "type": "string",
                                                    "description": "The stop time\n",
                                                    "example": "2020-04-24T12:00"
                                                },
                                                "complete": {
                                                    "type": "boolean",
                                                    "description": "Is the object's status complete\n",
                                                    "example": true
                                                },
                                                "in_progress": {
                                                    "type": "boolean",
                                                    "description": "Is the object still doing something\n",
                                                    "example": false
                                                },
                                                "error_count": {
                                                    "type": "integer",
                                                    "description": "How many errors were encountered\n",
                                                    "example": 0
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "phases": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "description": "The phase's status. It is a list of all of the nodes in the phase and\nwhat category those nodes fall into within the phase.\n\n## Link Relationships\n\n* self : The session object\n",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name of the Phase\n",
                                                        "example": "Boot",
                                                        "pattern": "^(?i)boot|configure|shutdown$"
                                                    },
                                                    "metadata": {
                                                        "type": "object",
                                                        "description": "The status metadata\n",
                                                        "properties": {
                                                            "start_time": {
                                                                "type": "string",
                                                                "description": "The start time\n",
                                                                "example": "2020-04-24T12:00"
                                                            },
                                                            "stop_time": {
                                                                "type": "string",
                                                                "description": "The stop time\n",
                                                                "example": "2020-04-24T12:00"
                                                            },
                                                            "complete": {
                                                                "type": "boolean",
                                                                "description": "Is the object's status complete\n",
                                                                "example": true
                                                            },
                                                            "in_progress": {
                                                                "type": "boolean",
                                                                "description": "Is the object still doing something\n",
                                                                "example": false
                                                            },
                                                            "error_count": {
                                                                "type": "integer",
                                                                "description": "How many errors were encountered\n",
                                                                "example": 0
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "categories": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "description": "A list of the nodes in a given category within a phase.\n\n## Link Relationships\n\n* self : The session object\n",
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string",
                                                                    "description": "Name of the Phase Category\n",
                                                                    "example": "Succeeded",
                                                                    "pattern": "^(?i)not_started|in_progress|succeeded|failed|excluded$"
                                                                },
                                                                "node_list": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string",
                                                                        "example": [
                                                                            "x3000c0s19b1n0",
                                                                            "x3000c0s19b2n0"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "errors": {
                                                        "type": "object",
                                                        "description": "Categorizing nodes into failures by the type of error they have.\nThis is an additive characterization. Nodes will be added to existing errors.\nThis does not overwrite previously existing errors.\n",
                                                        "additionalProperties": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": [
                                                                    "x3000c0s19b1n0",
                                                                    "x3000c0s19b2n0"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the Boot Set status",
                "description": "Deletes an existing Boot Set status\n",
                "tags": [
                    "session"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.status",
                "operationId": "delete_v1_boot_set_status",
                "responses": {
                    "204": {
                        "description": "The resource was deleted."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/session/{session_id}/status/{boot_set_name}/{phase_name}": {
            "parameters": [
                {
                    "name": "session_id",
                    "in": "path",
                    "description": "Session ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "boot_set_name",
                    "in": "path",
                    "description": "Boot set name",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "phase_name",
                    "in": "path",
                    "description": "The phase name",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get the status for a specific boot set and phase.",
                "description": "Get the status for a specific boot set and phase.",
                "tags": [
                    "session"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.status",
                "operationId": "get_v1_session_status_by_bootset_and_phase",
                "responses": {
                    "200": {
                        "description": "A list of the nodes in the Phase and Category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "The phase's status. It is a list of all of the nodes in the phase and\nwhat category those nodes fall into within the phase.\n\n## Link Relationships\n\n* self : The session object\n",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the Phase\n",
                                            "example": "Boot",
                                            "pattern": "^(?i)boot|configure|shutdown$"
                                        },
                                        "metadata": {
                                            "type": "object",
                                            "description": "The status metadata\n",
                                            "properties": {
                                                "start_time": {
                                                    "type": "string",
                                                    "description": "The start time\n",
                                                    "example": "2020-04-24T12:00"
                                                },
                                                "stop_time": {
                                                    "type": "string",
                                                    "description": "The stop time\n",
                                                    "example": "2020-04-24T12:00"
                                                },
                                                "complete": {
                                                    "type": "boolean",
                                                    "description": "Is the object's status complete\n",
                                                    "example": true
                                                },
                                                "in_progress": {
                                                    "type": "boolean",
                                                    "description": "Is the object still doing something\n",
                                                    "example": false
                                                },
                                                "error_count": {
                                                    "type": "integer",
                                                    "description": "How many errors were encountered\n",
                                                    "example": 0
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "description": "A list of the nodes in a given category within a phase.\n\n## Link Relationships\n\n* self : The session object\n",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name of the Phase Category\n",
                                                        "example": "Succeeded",
                                                        "pattern": "^(?i)not_started|in_progress|succeeded|failed|excluded$"
                                                    },
                                                    "node_list": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": [
                                                                "x3000c0s19b1n0",
                                                                "x3000c0s19b2n0"
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "errors": {
                                            "type": "object",
                                            "description": "Categorizing nodes into failures by the type of error they have.\nThis is an additive characterization. Nodes will be added to existing errors.\nThis does not overwrite previously existing errors.\n",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": [
                                                        "x3000c0s19b1n0",
                                                        "x3000c0s19b2n0"
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/session/{session_id}/status/{boot_set_name}/{phase_name}/{category_name}": {
            "parameters": [
                {
                    "name": "session_id",
                    "in": "path",
                    "description": "Session ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "boot_set_name",
                    "in": "path",
                    "description": "Boot set name",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "phase_name",
                    "in": "path",
                    "description": "The phase name",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "category_name",
                    "in": "path",
                    "description": "The category name",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get the status for a specific boot set, phase, and category.",
                "description": "Get the status for a specific boot set, phase, and category.",
                "tags": [
                    "session"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.status",
                "operationId": "get_v1_session_status_by_bootset_and_phase_and_category",
                "responses": {
                    "200": {
                        "description": "A list of the nodes in the Phase and Category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "A list of the nodes in a given category within a phase.\n\n## Link Relationships\n\n* self : The session object\n",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the Phase Category\n",
                                            "example": "Succeeded",
                                            "pattern": "^(?i)not_started|in_progress|succeeded|failed|excluded$"
                                        },
                                        "node_list": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": [
                                                    "x3000c0s19b1n0",
                                                    "x3000c0s19b2n0"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/version": {
            "get": {
                "summary": "Get API version",
                "tags": [
                    "version"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v1.base",
                "operationId": "v1_get_version",
                "responses": {
                    "200": {
                        "description": "Get version details\nThe versioning system uses [semver](https://semver.org/).\n## Link Relationships\n* self : Link to itself\n* versions : Link back to the versions resource\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Version data",
                                    "type": "object",
                                    "properties": {
                                        "major": {
                                            "type": "integer"
                                        },
                                        "minor": {
                                            "type": "integer"
                                        },
                                        "patch": {
                                            "type": "integer"
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2": {
            "get": {
                "summary": "Get API version",
                "tags": [
                    "v2",
                    "version"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.base",
                "operationId": "get_v2",
                "responses": {
                    "200": {
                        "description": "Get version details\nThe versioning system uses [semver](https://semver.org/).\n## Link Relationships\n* self : Link to itself\n* versions : Link back to the versions resource\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Version data",
                                    "type": "object",
                                    "properties": {
                                        "major": {
                                            "type": "integer"
                                        },
                                        "minor": {
                                            "type": "integer"
                                        },
                                        "patch": {
                                            "type": "integer"
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/healthz": {
            "get": {
                "summary": "Get service health details",
                "tags": [
                    "v2",
                    "healthz"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.healthz",
                "operationId": "get_v2_healthz",
                "description": "Get bos health details.",
                "responses": {
                    "200": {
                        "description": "Service Health information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Service health status",
                                    "type": "object",
                                    "properties": {
                                        "etcdStatus": {
                                            "type": "string"
                                        },
                                        "apiStatus": {
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/sessiontemplates": {
            "get": {
                "summary": "List session templates",
                "description": "List all session templates. Session templates are\nuniquely identified by the name.\n",
                "tags": [
                    "v2",
                    "sessiontemplates"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.sessiontemplates",
                "operationId": "get_v2_sessiontemplates",
                "responses": {
                    "200": {
                        "description": "Session template details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An array of session templates.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which applies the data to\ngroup of components.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                                                "example": "cle-1.0.0",
                                                "minLength": 1,
                                                "maxLength": 45,
                                                "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
                                                "readOnly": true
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "An optional description for the session template.\n"
                                            },
                                            "enable_cfs": {
                                                "type": "boolean",
                                                "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                                                "default": true
                                            },
                                            "cfs": {
                                                "type": "object",
                                                "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                                "properties": {
                                                    "configuration": {
                                                        "type": "string",
                                                        "description": "The name of configuration to be applied.\n"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "boot_sets": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "description": "A boot set is a collection of nodes defined by an explicit list, their functional\nrole, and their logical groupings. This collection of nodes is associated with one\nset of boot artifacts and optional additional records for configuration and root\nfilesystem provisioning.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "The Boot Set name.\n"
                                                        },
                                                        "path": {
                                                            "type": "string",
                                                            "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                                        },
                                                        "cfs": {
                                                            "type": "object",
                                                            "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                                            "properties": {
                                                                "configuration": {
                                                                    "type": "string",
                                                                    "description": "The name of configuration to be applied.\n"
                                                                }
                                                            },
                                                            "additionalProperties": false
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                                        },
                                                        "etag": {
                                                            "type": "string",
                                                            "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                                        },
                                                        "kernel_parameters": {
                                                            "type": "string",
                                                            "description": "The kernel parameters to use to boot the nodes.\n"
                                                        },
                                                        "node_list": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "minItems": 1,
                                                            "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                                        },
                                                        "node_roles_groups": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "minItems": 1,
                                                            "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                                        },
                                                        "node_groups": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "minItems": 1,
                                                            "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                                        },
                                                        "rootfs_provider": {
                                                            "type": "string",
                                                            "description": "The root file system provider.\n"
                                                        },
                                                        "rootfs_provider_passthrough": {
                                                            "type": "string",
                                                            "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": [
                                                        "path",
                                                        "type"
                                                    ]
                                                }
                                            },
                                            "links": {
                                                "type": "array",
                                                "readOnly": true,
                                                "items": {
                                                    "description": "Link to other resources",
                                                    "type": "object",
                                                    "properties": {
                                                        "rel": {
                                                            "type": "string"
                                                        },
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                }
                                            }
                                        },
                                        "required": [],
                                        "additionalProperties": false
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/sessiontemplatesvalid/{session_template_id}": {
            "parameters": [
                {
                    "name": "session_template_id",
                    "in": "path",
                    "description": "Session Template ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Validate the session template by id",
                "description": "Validate session template by session_template_id.\nThe session_template_id corresponds to the *name*\nof the session template.\n",
                "tags": [
                    "v2",
                    "sessiontemplatess"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.sessiontemplates",
                "operationId": "validate_v2_sessiontemplate",
                "responses": {
                    "200": {
                        "description": "Session template validity details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Message describing errors or incompleteness in a Session Template.\n",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/sessiontemplates/{session_template_id}": {
            "parameters": [
                {
                    "name": "session_template_id",
                    "in": "path",
                    "description": "Session Template ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get session template by id",
                "description": "Get session template by session_template_id.\nThe session_template_id corresponds to the *name*\nof the session template.\n",
                "tags": [
                    "v2",
                    "sessiontemplatess"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.sessiontemplates",
                "operationId": "get_v2_sessiontemplate",
                "responses": {
                    "200": {
                        "description": "Session template details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which applies the data to\ngroup of components.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                                            "example": "cle-1.0.0",
                                            "minLength": 1,
                                            "maxLength": 45,
                                            "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
                                            "readOnly": true
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "An optional description for the session template.\n"
                                        },
                                        "enable_cfs": {
                                            "type": "boolean",
                                            "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                                            "default": true
                                        },
                                        "cfs": {
                                            "type": "object",
                                            "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                            "properties": {
                                                "configuration": {
                                                    "type": "string",
                                                    "description": "The name of configuration to be applied.\n"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "boot_sets": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "description": "A boot set is a collection of nodes defined by an explicit list, their functional\nrole, and their logical groupings. This collection of nodes is associated with one\nset of boot artifacts and optional additional records for configuration and root\nfilesystem provisioning.\n",
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "The Boot Set name.\n"
                                                    },
                                                    "path": {
                                                        "type": "string",
                                                        "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                                    },
                                                    "cfs": {
                                                        "type": "object",
                                                        "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                                        "properties": {
                                                            "configuration": {
                                                                "type": "string",
                                                                "description": "The name of configuration to be applied.\n"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                                    },
                                                    "etag": {
                                                        "type": "string",
                                                        "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "The kernel parameters to use to boot the nodes.\n"
                                                    },
                                                    "node_list": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                                    },
                                                    "node_roles_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                                    },
                                                    "node_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                                    },
                                                    "rootfs_provider": {
                                                        "type": "string",
                                                        "description": "The root file system provider.\n"
                                                    },
                                                    "rootfs_provider_passthrough": {
                                                        "type": "string",
                                                        "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "required": [
                                                    "path",
                                                    "type"
                                                ]
                                            }
                                        },
                                        "links": {
                                            "type": "array",
                                            "readOnly": true,
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "required": [],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Create session template",
                "tags": [
                    "v2",
                    "sessiontemplates"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.sessiontemplates",
                "operationId": "put_v2_sessiontemplate",
                "description": "Create a new session template.",
                "requestBody": {
                    "description": "A JSON object for creating a session template",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which applies the data to\ngroup of components.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                                        "example": "cle-1.0.0",
                                        "minLength": 1,
                                        "maxLength": 45,
                                        "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
                                        "readOnly": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "An optional description for the session template.\n"
                                    },
                                    "enable_cfs": {
                                        "type": "boolean",
                                        "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                                        "default": true
                                    },
                                    "cfs": {
                                        "type": "object",
                                        "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                        "properties": {
                                            "configuration": {
                                                "type": "string",
                                                "description": "The name of configuration to be applied.\n"
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "boot_sets": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "description": "A boot set is a collection of nodes defined by an explicit list, their functional\nrole, and their logical groupings. This collection of nodes is associated with one\nset of boot artifacts and optional additional records for configuration and root\nfilesystem provisioning.\n",
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "The Boot Set name.\n"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                                },
                                                "cfs": {
                                                    "type": "object",
                                                    "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                                    "properties": {
                                                        "configuration": {
                                                            "type": "string",
                                                            "description": "The name of configuration to be applied.\n"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                                },
                                                "etag": {
                                                    "type": "string",
                                                    "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                                },
                                                "kernel_parameters": {
                                                    "type": "string",
                                                    "description": "The kernel parameters to use to boot the nodes.\n"
                                                },
                                                "node_list": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 1,
                                                    "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                                },
                                                "node_roles_groups": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 1,
                                                    "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                                },
                                                "node_groups": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 1,
                                                    "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                                },
                                                "rootfs_provider": {
                                                    "type": "string",
                                                    "description": "The root file system provider.\n"
                                                },
                                                "rootfs_provider_passthrough": {
                                                    "type": "string",
                                                    "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "path",
                                                "type"
                                            ]
                                        }
                                    },
                                    "links": {
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                            "description": "Link to other resources",
                                            "type": "object",
                                            "properties": {
                                                "rel": {
                                                    "type": "string"
                                                },
                                                "href": {
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                },
                                "required": [],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session template details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which applies the data to\ngroup of components.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                                            "example": "cle-1.0.0",
                                            "minLength": 1,
                                            "maxLength": 45,
                                            "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
                                            "readOnly": true
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "An optional description for the session template.\n"
                                        },
                                        "enable_cfs": {
                                            "type": "boolean",
                                            "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                                            "default": true
                                        },
                                        "cfs": {
                                            "type": "object",
                                            "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                            "properties": {
                                                "configuration": {
                                                    "type": "string",
                                                    "description": "The name of configuration to be applied.\n"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "boot_sets": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "description": "A boot set is a collection of nodes defined by an explicit list, their functional\nrole, and their logical groupings. This collection of nodes is associated with one\nset of boot artifacts and optional additional records for configuration and root\nfilesystem provisioning.\n",
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "The Boot Set name.\n"
                                                    },
                                                    "path": {
                                                        "type": "string",
                                                        "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                                    },
                                                    "cfs": {
                                                        "type": "object",
                                                        "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                                        "properties": {
                                                            "configuration": {
                                                                "type": "string",
                                                                "description": "The name of configuration to be applied.\n"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                                    },
                                                    "etag": {
                                                        "type": "string",
                                                        "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "The kernel parameters to use to boot the nodes.\n"
                                                    },
                                                    "node_list": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                                    },
                                                    "node_roles_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                                    },
                                                    "node_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                                    },
                                                    "rootfs_provider": {
                                                        "type": "string",
                                                        "description": "The root file system provider.\n"
                                                    },
                                                    "rootfs_provider_passthrough": {
                                                        "type": "string",
                                                        "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "required": [
                                                    "path",
                                                    "type"
                                                ]
                                            }
                                        },
                                        "links": {
                                            "type": "array",
                                            "readOnly": true,
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "required": [],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a session template",
                "tags": [
                    "v2",
                    "sessiontemplates"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.sessiontemplates",
                "operationId": "patch_v2_sessiontemplate",
                "requestBody": {
                    "description": "A JSON object for updating a session template",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which applies the data to\ngroup of components.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                                        "example": "cle-1.0.0",
                                        "minLength": 1,
                                        "maxLength": 45,
                                        "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
                                        "readOnly": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "An optional description for the session template.\n"
                                    },
                                    "enable_cfs": {
                                        "type": "boolean",
                                        "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                                        "default": true
                                    },
                                    "cfs": {
                                        "type": "object",
                                        "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                        "properties": {
                                            "configuration": {
                                                "type": "string",
                                                "description": "The name of configuration to be applied.\n"
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "boot_sets": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "description": "A boot set is a collection of nodes defined by an explicit list, their functional\nrole, and their logical groupings. This collection of nodes is associated with one\nset of boot artifacts and optional additional records for configuration and root\nfilesystem provisioning.\n",
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "The Boot Set name.\n"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                                },
                                                "cfs": {
                                                    "type": "object",
                                                    "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                                    "properties": {
                                                        "configuration": {
                                                            "type": "string",
                                                            "description": "The name of configuration to be applied.\n"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                                },
                                                "etag": {
                                                    "type": "string",
                                                    "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                                },
                                                "kernel_parameters": {
                                                    "type": "string",
                                                    "description": "The kernel parameters to use to boot the nodes.\n"
                                                },
                                                "node_list": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 1,
                                                    "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                                },
                                                "node_roles_groups": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 1,
                                                    "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                                },
                                                "node_groups": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 1,
                                                    "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                                },
                                                "rootfs_provider": {
                                                    "type": "string",
                                                    "description": "The root file system provider.\n"
                                                },
                                                "rootfs_provider_passthrough": {
                                                    "type": "string",
                                                    "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "path",
                                                "type"
                                            ]
                                        }
                                    },
                                    "links": {
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                            "description": "Link to other resources",
                                            "type": "object",
                                            "properties": {
                                                "rel": {
                                                    "type": "string"
                                                },
                                                "href": {
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                },
                                "required": [],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session template details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which applies the data to\ngroup of components.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                                            "example": "cle-1.0.0",
                                            "minLength": 1,
                                            "maxLength": 45,
                                            "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
                                            "readOnly": true
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "An optional description for the session template.\n"
                                        },
                                        "enable_cfs": {
                                            "type": "boolean",
                                            "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                                            "default": true
                                        },
                                        "cfs": {
                                            "type": "object",
                                            "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                            "properties": {
                                                "configuration": {
                                                    "type": "string",
                                                    "description": "The name of configuration to be applied.\n"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "boot_sets": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "description": "A boot set is a collection of nodes defined by an explicit list, their functional\nrole, and their logical groupings. This collection of nodes is associated with one\nset of boot artifacts and optional additional records for configuration and root\nfilesystem provisioning.\n",
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "The Boot Set name.\n"
                                                    },
                                                    "path": {
                                                        "type": "string",
                                                        "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                                    },
                                                    "cfs": {
                                                        "type": "object",
                                                        "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                                        "properties": {
                                                            "configuration": {
                                                                "type": "string",
                                                                "description": "The name of configuration to be applied.\n"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                                    },
                                                    "etag": {
                                                        "type": "string",
                                                        "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "The kernel parameters to use to boot the nodes.\n"
                                                    },
                                                    "node_list": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                                    },
                                                    "node_roles_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                                    },
                                                    "node_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                                    },
                                                    "rootfs_provider": {
                                                        "type": "string",
                                                        "description": "The root file system provider.\n"
                                                    },
                                                    "rootfs_provider_passthrough": {
                                                        "type": "string",
                                                        "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "required": [
                                                    "path",
                                                    "type"
                                                ]
                                            }
                                        },
                                        "links": {
                                            "type": "array",
                                            "readOnly": true,
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "required": [],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a session template",
                "description": "Delete a session template.",
                "tags": [
                    "v2",
                    "sessiontemplates"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.sessiontemplates",
                "operationId": "delete_v2_sessiontemplate",
                "responses": {
                    "204": {
                        "description": "The resource was deleted."
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/sessiontemplatetemplate": {
            "get": {
                "summary": "Get an example session template.",
                "description": "Returns a skeleton of a session template, which can be\nused as a starting point for users creating their own\nsession templates.\n",
                "tags": [
                    "v2",
                    "sessiontemplates"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.sessiontemplates",
                "operationId": "get_v2_sessiontemplatetemplate",
                "responses": {
                    "200": {
                        "description": "Session template details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "A Session Template object represents a collection of resources and metadata.\nA session template is used to create a Session which applies the data to\ngroup of components.\n\nA Session Template can be created from a JSON structure.  It will return\na SessionTemplate name if successful.\nThis name is required when creating a Session.\n\n## Link Relationships\n\n* self : The session object\n",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the SessionTemplate. The length of the name is restricted to 45 characters.",
                                            "example": "cle-1.0.0",
                                            "minLength": 1,
                                            "maxLength": 45,
                                            "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
                                            "readOnly": true
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "An optional description for the session template.\n"
                                        },
                                        "enable_cfs": {
                                            "type": "boolean",
                                            "description": "Whether to enable the Configuration Framework Service (CFS).\nChoices: true/false\n",
                                            "default": true
                                        },
                                        "cfs": {
                                            "type": "object",
                                            "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                            "properties": {
                                                "configuration": {
                                                    "type": "string",
                                                    "description": "The name of configuration to be applied.\n"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "boot_sets": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "description": "A boot set is a collection of nodes defined by an explicit list, their functional\nrole, and their logical groupings. This collection of nodes is associated with one\nset of boot artifacts and optional additional records for configuration and root\nfilesystem provisioning.\n",
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "The Boot Set name.\n"
                                                    },
                                                    "path": {
                                                        "type": "string",
                                                        "description": "A path identifying the metadata describing the components of the boot image. This could be a URI, URL, etc.\nIt will be processed based on the type attribute.\n"
                                                    },
                                                    "cfs": {
                                                        "type": "object",
                                                        "description": "CFS Parameters is the collection of parameters that are passed to the Configuration\nFramework Service when configuration is enabled. Can be set as the global value for\na Session Template, or individually within a boot set.\n",
                                                        "properties": {
                                                            "configuration": {
                                                                "type": "string",
                                                                "description": "The name of configuration to be applied.\n"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "The mime type of the metadata describing the components of the boot image. This type controls how BOS processes the path attribute.\n"
                                                    },
                                                    "etag": {
                                                        "type": "string",
                                                        "description": "This is the 'entity tag'. It helps verify the version of metadata describing the components of the boot image we are working with.\n"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "The kernel parameters to use to boot the nodes.\n"
                                                    },
                                                    "node_list": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node list. This is an explicit mapping against hardware xnames.\n"
                                                    },
                                                    "node_roles_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node roles list. Allows actions against nodes with associated roles. Roles are defined in SMD.\n"
                                                    },
                                                    "node_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "minItems": 1,
                                                        "description": "The node groups list. Allows actions against associated nodes by logical groupings. Logical groups are user defined groups in SMD.\n"
                                                    },
                                                    "rootfs_provider": {
                                                        "type": "string",
                                                        "description": "The root file system provider.\n"
                                                    },
                                                    "rootfs_provider_passthrough": {
                                                        "type": "string",
                                                        "description": "The root file system provider passthrough.\nThese are additional kernel parameters that will be appended to\nthe 'rootfs=<protocol>' kernel parameter\n"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "required": [
                                                    "path",
                                                    "type"
                                                ]
                                            }
                                        },
                                        "links": {
                                            "type": "array",
                                            "readOnly": true,
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "required": [],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/sessions": {
            "post": {
                "summary": "Create a session",
                "description": "The creation of a session performs the operation\nspecified in the SessionCreateRequest\non the boot set(s) defined in the session template.\n",
                "tags": [
                    "v2",
                    "sessions"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.sessions",
                "operationId": "post_v2_session",
                "requestBody": {
                    "description": "The information to create a session",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A Session Creation object\n",
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the session. A uuid name is generated if a name is not provided.",
                                        "example": "session-20190728032600",
                                        "minLength": 1,
                                        "maxLength": 45,
                                        "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                    },
                                    "operation": {
                                        "type": "string",
                                        "enum": [
                                            "boot",
                                            "reboot",
                                            "shutdown"
                                        ],
                                        "description": "A Session represents a desired state that is being applied to a group of components.  Sessions run until all components it manages have either been disabled due to completion, or until all components are managed by other newer sessions.\nOperation -- An operation to perform on nodes in this session.\n    Boot                 Applies the template to the components and boots/reboots if necessary.\n    Reboot               Applies the template to the components guarantees a reboot.\n    Shutdown             Power down nodes that are on.\n"
                                    },
                                    "template_name": {
                                        "type": "string",
                                        "description": "The name of the Session Template",
                                        "example": "my-session-template",
                                        "format": "string"
                                    },
                                    "limit": {
                                        "type": "string",
                                        "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                    },
                                    "stage": {
                                        "type": "boolean",
                                        "description": "Set to force nodes to reboot even if they are already in the desired state.\n",
                                        "default": false
                                    }
                                },
                                "required": [
                                    "operation",
                                    "template_name"
                                ],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Session details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the session.\n"
                                        },
                                        "operation": {
                                            "type": "string",
                                            "enum": [
                                                "boot",
                                                "reboot",
                                                "shutdown"
                                            ],
                                            "description": "A Session represents a desired state that is being applied to a group of components.  Sessions run until all components it manages have either been disabled due to completion, or until all components are managed by other newer sessions.\nOperation -- An operation to perform on nodes in this session.\n    Boot                 Applies the template to the components and boots/reboots if necessary.\n    Reboot               Applies the template to the components guarantees a reboot.\n    Shutdown             Power down nodes that are on.\n"
                                        },
                                        "template_name": {
                                            "type": "string",
                                            "description": "The name of the Session Template",
                                            "example": "my-session-template",
                                            "format": "string"
                                        },
                                        "limit": {
                                            "type": "string",
                                            "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                        },
                                        "stage": {
                                            "type": "boolean",
                                            "description": "Set to stage a session which will not immediately change the state of any components. The \"applystaged\" endpoint can be called at a later time to trigger the start of this session.\n"
                                        },
                                        "components": {
                                            "type": "string",
                                            "description": "A comma separated list of nodes, representing the initial list of nodes the session should operate against.  The list will remain even if other sessions have taken over management of the nodes.\n"
                                        },
                                        "status": {
                                            "type": "object",
                                            "description": "Information on the status of a session.\n",
                                            "properties": {
                                                "start_time": {
                                                    "type": "string",
                                                    "description": "When the session was created.\n"
                                                },
                                                "end_time": {
                                                    "type": "string",
                                                    "description": "When the session completed.\n"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pending",
                                                        "running",
                                                        "complete"
                                                    ],
                                                    "description": "The status of a session.\n"
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "description": "Error which prevented the session from running\n"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List sessions",
                "description": "List all sessions, including those in progress and those complete.\n",
                "tags": [
                    "v2",
                    "sessions"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.sessions",
                "operationId": "get_v2_sessions",
                "parameters": [
                    {
                        "name": "min_age",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "description": "Return only sessions older than the given age.  Age is given in the format \"1d\" or \"6h\""
                    },
                    {
                        "name": "max_age",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "description": "Return only sessions younger than the given age.  Age is given in the format \"1d\" or \"6h\""
                    },
                    {
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "running",
                                "complete"
                            ]
                        },
                        "in": "query",
                        "description": "Return only sessions with the given status."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An array of sessions.",
                                    "type": "array",
                                    "items": {
                                        "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the session.\n"
                                            },
                                            "operation": {
                                                "type": "string",
                                                "enum": [
                                                    "boot",
                                                    "reboot",
                                                    "shutdown"
                                                ],
                                                "description": "A Session represents a desired state that is being applied to a group of components.  Sessions run until all components it manages have either been disabled due to completion, or until all components are managed by other newer sessions.\nOperation -- An operation to perform on nodes in this session.\n    Boot                 Applies the template to the components and boots/reboots if necessary.\n    Reboot               Applies the template to the components guarantees a reboot.\n    Shutdown             Power down nodes that are on.\n"
                                            },
                                            "template_name": {
                                                "type": "string",
                                                "description": "The name of the Session Template",
                                                "example": "my-session-template",
                                                "format": "string"
                                            },
                                            "limit": {
                                                "type": "string",
                                                "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                            },
                                            "stage": {
                                                "type": "boolean",
                                                "description": "Set to stage a session which will not immediately change the state of any components. The \"applystaged\" endpoint can be called at a later time to trigger the start of this session.\n"
                                            },
                                            "components": {
                                                "type": "string",
                                                "description": "A comma separated list of nodes, representing the initial list of nodes the session should operate against.  The list will remain even if other sessions have taken over management of the nodes.\n"
                                            },
                                            "status": {
                                                "type": "object",
                                                "description": "Information on the status of a session.\n",
                                                "properties": {
                                                    "start_time": {
                                                        "type": "string",
                                                        "description": "When the session was created.\n"
                                                    },
                                                    "end_time": {
                                                        "type": "string",
                                                        "description": "When the session completed.\n"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "running",
                                                            "complete"
                                                        ],
                                                        "description": "The status of a session.\n"
                                                    },
                                                    "error": {
                                                        "type": "string",
                                                        "description": "Error which prevented the session from running\n"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete multiple sessions.",
                "tags": [
                    "v2",
                    "sessions"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.sessions",
                "operationId": "delete_v2_sessions",
                "parameters": [
                    {
                        "name": "min_age",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "description": "Return only sessions older than the given age.  Age is given in the format \"1d\" or \"6h\""
                    },
                    {
                        "name": "max_age",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "description": "Return only sessions younger than the given age.  Age is given in the format \"1d\" or \"6h\""
                    },
                    {
                        "name": "status",
                        "schema": {
                            "enum": [
                                "pending",
                                "running",
                                "complete"
                            ],
                            "type": "string"
                        },
                        "in": "query",
                        "description": "Return only sessions with the given status."
                    }
                ],
                "description": "Delete multiple sessions.  If filters are provided, only sessions matching all filters will be deleted.  By default only completed sessions will be deleted.",
                "responses": {
                    "204": {
                        "description": "The resource was deleted."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/sessions/{session_id}": {
            "get": {
                "summary": "Get session details by id",
                "description": "Get session details by session_id.",
                "tags": [
                    "v2",
                    "sessions"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.sessions",
                "operationId": "get_v2_session",
                "responses": {
                    "200": {
                        "description": "Session details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the session.\n"
                                        },
                                        "operation": {
                                            "type": "string",
                                            "enum": [
                                                "boot",
                                                "reboot",
                                                "shutdown"
                                            ],
                                            "description": "A Session represents a desired state that is being applied to a group of components.  Sessions run until all components it manages have either been disabled due to completion, or until all components are managed by other newer sessions.\nOperation -- An operation to perform on nodes in this session.\n    Boot                 Applies the template to the components and boots/reboots if necessary.\n    Reboot               Applies the template to the components guarantees a reboot.\n    Shutdown             Power down nodes that are on.\n"
                                        },
                                        "template_name": {
                                            "type": "string",
                                            "description": "The name of the Session Template",
                                            "example": "my-session-template",
                                            "format": "string"
                                        },
                                        "limit": {
                                            "type": "string",
                                            "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                        },
                                        "stage": {
                                            "type": "boolean",
                                            "description": "Set to stage a session which will not immediately change the state of any components. The \"applystaged\" endpoint can be called at a later time to trigger the start of this session.\n"
                                        },
                                        "components": {
                                            "type": "string",
                                            "description": "A comma separated list of nodes, representing the initial list of nodes the session should operate against.  The list will remain even if other sessions have taken over management of the nodes.\n"
                                        },
                                        "status": {
                                            "type": "object",
                                            "description": "Information on the status of a session.\n",
                                            "properties": {
                                                "start_time": {
                                                    "type": "string",
                                                    "description": "When the session was created.\n"
                                                },
                                                "end_time": {
                                                    "type": "string",
                                                    "description": "When the session completed.\n"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pending",
                                                        "running",
                                                        "complete"
                                                    ],
                                                    "description": "The status of a session.\n"
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "description": "Error which prevented the session from running\n"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a single session",
                "tags": [
                    "v2",
                    "sessions"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.sessions",
                "description": "Update the state for a given session in the BOS database",
                "operationId": "patch_v2_session",
                "requestBody": {
                    "description": "The state for a single session",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the session.\n"
                                    },
                                    "operation": {
                                        "type": "string",
                                        "enum": [
                                            "boot",
                                            "reboot",
                                            "shutdown"
                                        ],
                                        "description": "A Session represents a desired state that is being applied to a group of components.  Sessions run until all components it manages have either been disabled due to completion, or until all components are managed by other newer sessions.\nOperation -- An operation to perform on nodes in this session.\n    Boot                 Applies the template to the components and boots/reboots if necessary.\n    Reboot               Applies the template to the components guarantees a reboot.\n    Shutdown             Power down nodes that are on.\n"
                                    },
                                    "template_name": {
                                        "type": "string",
                                        "description": "The name of the Session Template",
                                        "example": "my-session-template",
                                        "format": "string"
                                    },
                                    "limit": {
                                        "type": "string",
                                        "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                    },
                                    "stage": {
                                        "type": "boolean",
                                        "description": "Set to stage a session which will not immediately change the state of any components. The \"applystaged\" endpoint can be called at a later time to trigger the start of this session.\n"
                                    },
                                    "components": {
                                        "type": "string",
                                        "description": "A comma separated list of nodes, representing the initial list of nodes the session should operate against.  The list will remain even if other sessions have taken over management of the nodes.\n"
                                    },
                                    "status": {
                                        "type": "object",
                                        "description": "Information on the status of a session.\n",
                                        "properties": {
                                            "start_time": {
                                                "type": "string",
                                                "description": "When the session was created.\n"
                                            },
                                            "end_time": {
                                                "type": "string",
                                                "description": "When the session completed.\n"
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "pending",
                                                    "running",
                                                    "complete"
                                                ],
                                                "description": "The status of a session.\n"
                                            },
                                            "error": {
                                                "type": "string",
                                                "description": "Error which prevented the session from running\n"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the session.\n"
                                        },
                                        "operation": {
                                            "type": "string",
                                            "enum": [
                                                "boot",
                                                "reboot",
                                                "shutdown"
                                            ],
                                            "description": "A Session represents a desired state that is being applied to a group of components.  Sessions run until all components it manages have either been disabled due to completion, or until all components are managed by other newer sessions.\nOperation -- An operation to perform on nodes in this session.\n    Boot                 Applies the template to the components and boots/reboots if necessary.\n    Reboot               Applies the template to the components guarantees a reboot.\n    Shutdown             Power down nodes that are on.\n"
                                        },
                                        "template_name": {
                                            "type": "string",
                                            "description": "The name of the Session Template",
                                            "example": "my-session-template",
                                            "format": "string"
                                        },
                                        "limit": {
                                            "type": "string",
                                            "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                        },
                                        "stage": {
                                            "type": "boolean",
                                            "description": "Set to stage a session which will not immediately change the state of any components. The \"applystaged\" endpoint can be called at a later time to trigger the start of this session.\n"
                                        },
                                        "components": {
                                            "type": "string",
                                            "description": "A comma separated list of nodes, representing the initial list of nodes the session should operate against.  The list will remain even if other sessions have taken over management of the nodes.\n"
                                        },
                                        "status": {
                                            "type": "object",
                                            "description": "Information on the status of a session.\n",
                                            "properties": {
                                                "start_time": {
                                                    "type": "string",
                                                    "description": "When the session was created.\n"
                                                },
                                                "end_time": {
                                                    "type": "string",
                                                    "description": "When the session completed.\n"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pending",
                                                        "running",
                                                        "complete"
                                                    ],
                                                    "description": "The status of a session.\n"
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "description": "Error which prevented the session from running\n"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete session by id",
                "description": "Delete session by session_id.",
                "tags": [
                    "v2",
                    "sessions"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.sessions",
                "operationId": "delete_v2_session",
                "responses": {
                    "204": {
                        "description": "The resource was deleted."
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "session_id",
                    "in": "path",
                    "description": "Session ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/v2/sessions/{session_id}/status": {
            "get": {
                "summary": "Get session extended status information by id",
                "description": "Get session extended status information by id",
                "tags": [
                    "v2",
                    "sessions"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.sessions",
                "operationId": "get_v2_session_status",
                "responses": {
                    "200": {
                        "description": "Session status details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Detailed information on the status of a session.\n",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "complete"
                                            ],
                                            "description": "The status of a session.\n"
                                        },
                                        "managed_components_count": {
                                            "type": "integer",
                                            "description": "The count of components currently managed by this session\n"
                                        },
                                        "phases": {
                                            "type": "object",
                                            "description": "Detailed information on the phases of a session.\n",
                                            "properties": {
                                                "percent_complete": {
                                                    "type": "float",
                                                    "description": "The percent of components currently in a completed/stable state\n"
                                                },
                                                "percent_powering_on": {
                                                    "type": "float",
                                                    "description": "The percent of components currently in the powering-on phase\n"
                                                },
                                                "percent_powering_off": {
                                                    "type": "float",
                                                    "description": "The percent of components currently in the powering-off phase\n"
                                                },
                                                "percent_configuring": {
                                                    "type": "float",
                                                    "description": "The percent of components currently in the configuring phase\n"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "percent_successful": {
                                            "type": "float",
                                            "description": "The percent of components currently in a successful state\n"
                                        },
                                        "percent_failed": {
                                            "type": "float",
                                            "description": "The percent of components currently in a failed state\n"
                                        },
                                        "percent_staged": {
                                            "type": "float",
                                            "description": "The percent of components currently still staged for this session\n"
                                        },
                                        "error_summary": {
                                            "type": "object",
                                            "description": "A summary of the errors currently listed by all components\n"
                                        },
                                        "timing": {
                                            "type": "object",
                                            "description": "Detailed information on the timing of a session.\n",
                                            "properties": {
                                                "start_time": {
                                                    "type": "string",
                                                    "description": "When the session was created.\n"
                                                },
                                                "end_time": {
                                                    "type": "string",
                                                    "description": "When the session completed.\n"
                                                },
                                                "duration": {
                                                    "type": "string",
                                                    "description": "The current duration of the on-going session or final duration of the completed session.\n"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Saves the current session to database",
                "tags": [
                    "v2",
                    "sessions",
                    "cli_ignore"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.sessions",
                "description": "Saves the current session to database.  For use at session completion.",
                "operationId": "save_v2_session_status",
                "responses": {
                    "200": {
                        "description": "Session details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A Session object\n\n## Link Relationships\n\n* self : The session object\n",
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the session.\n"
                                        },
                                        "operation": {
                                            "type": "string",
                                            "enum": [
                                                "boot",
                                                "reboot",
                                                "shutdown"
                                            ],
                                            "description": "A Session represents a desired state that is being applied to a group of components.  Sessions run until all components it manages have either been disabled due to completion, or until all components are managed by other newer sessions.\nOperation -- An operation to perform on nodes in this session.\n    Boot                 Applies the template to the components and boots/reboots if necessary.\n    Reboot               Applies the template to the components guarantees a reboot.\n    Shutdown             Power down nodes that are on.\n"
                                        },
                                        "template_name": {
                                            "type": "string",
                                            "description": "The name of the Session Template",
                                            "example": "my-session-template",
                                            "format": "string"
                                        },
                                        "limit": {
                                            "type": "string",
                                            "description": "A comma separated of nodes, groups or roles to which the session will be limited. Components are treated as OR operations unless preceded by \"&\" for AND or \"!\" for NOT.\n"
                                        },
                                        "stage": {
                                            "type": "boolean",
                                            "description": "Set to stage a session which will not immediately change the state of any components. The \"applystaged\" endpoint can be called at a later time to trigger the start of this session.\n"
                                        },
                                        "components": {
                                            "type": "string",
                                            "description": "A comma separated list of nodes, representing the initial list of nodes the session should operate against.  The list will remain even if other sessions have taken over management of the nodes.\n"
                                        },
                                        "status": {
                                            "type": "object",
                                            "description": "Information on the status of a session.\n",
                                            "properties": {
                                                "start_time": {
                                                    "type": "string",
                                                    "description": "When the session was created.\n"
                                                },
                                                "end_time": {
                                                    "type": "string",
                                                    "description": "When the session completed.\n"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pending",
                                                        "running",
                                                        "complete"
                                                    ],
                                                    "description": "The status of a session.\n"
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "description": "Error which prevented the session from running\n"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "session_id",
                    "in": "path",
                    "description": "Session ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/v2/components": {
            "get": {
                "summary": "Retrieve the state of a collection of components",
                "tags": [
                    "v2",
                    "components"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.components",
                "description": "Retrieve the full collection of components in the form of a ComponentArray. Full results can also be filtered by query parameters. Only the first filter parameter of each type is used and the parameters are applied in an AND fashion. If the collection is empty or the filters have no match, an empty array is returned.",
                "operationId": "get_v2_components",
                "parameters": [
                    {
                        "name": "ids",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "description": "Retrieve the components with the given id (e.g. xname for hardware components). Can be chained for selecting groups of components."
                    },
                    {
                        "name": "session",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "description": "Retrieve the components with the given session id."
                    },
                    {
                        "name": "staged_session",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "description": "Retrieve the components with the given staged session id."
                    },
                    {
                        "name": "enabled",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "description": "Retrieve the components with the \"enabled\" state."
                    },
                    {
                        "name": "phase",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "description": "Retrieve the components in the given phase."
                    },
                    {
                        "name": "status",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "description": "Retrieve the components with the given status."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A collection of component states",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An array of component states.",
                                    "type": "array",
                                    "items": {
                                        "description": "The current and desired artifacts state for a component.\n",
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The component's id. e.g. xname for hardware components"
                                            },
                                            "actual_state": {
                                                "description": "The desired boot artifacts and configuration for a component\n",
                                                "type": "object",
                                                "properties": {
                                                    "boot_artifacts": {
                                                        "description": "A collection of boot artifacts.\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "kernel": {
                                                                "type": "string",
                                                                "description": "An md5sum hash of the kernel ID"
                                                            },
                                                            "kernel_parameters": {
                                                                "type": "string",
                                                                "description": "Kernel parameters"
                                                            },
                                                            "initrd": {
                                                                "type": "string",
                                                                "description": "Initrd ID"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "bss_token": {
                                                        "type": "string",
                                                        "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                    },
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    }
                                                }
                                            },
                                            "desired_state": {
                                                "description": "The desired boot artifacts and configuration for a component\n",
                                                "type": "object",
                                                "properties": {
                                                    "boot_artifacts": {
                                                        "description": "A collection of boot artifacts.\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "kernel": {
                                                                "type": "string",
                                                                "description": "An md5sum hash of the kernel ID"
                                                            },
                                                            "kernel_parameters": {
                                                                "type": "string",
                                                                "description": "Kernel parameters"
                                                            },
                                                            "initrd": {
                                                                "type": "string",
                                                                "description": "Initrd ID"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "configuration": {
                                                        "type": "string",
                                                        "description": "A CFS configuration ID."
                                                    },
                                                    "bss_token": {
                                                        "type": "string",
                                                        "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                    },
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "staged_state": {
                                                "description": "The desired boot artifacts and configuration for a component\n",
                                                "type": "object",
                                                "properties": {
                                                    "boot_artifacts": {
                                                        "description": "A collection of boot artifacts.\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "kernel": {
                                                                "type": "string",
                                                                "description": "An md5sum hash of the kernel ID"
                                                            },
                                                            "kernel_parameters": {
                                                                "type": "string",
                                                                "description": "Kernel parameters"
                                                            },
                                                            "initrd": {
                                                                "type": "string",
                                                                "description": "Initrd ID"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "configuration": {
                                                        "type": "string",
                                                        "description": "A CFS configuration ID."
                                                    },
                                                    "session": {
                                                        "type": "string",
                                                        "description": "A session which can be triggered at a later time against this component."
                                                    },
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "last_action": {
                                                "description": "Information on the most recent action taken against the node.\n",
                                                "type": "object",
                                                "properties": {
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "description": "A description of the most recent operator/action to impact the component."
                                                    },
                                                    "num_attempts": {
                                                        "type": "integer",
                                                        "description": "How many attempts have been made for this action."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "status": {
                                                "description": "Status information for the component",
                                                "type": "object",
                                                "properties": {
                                                    "phase": {
                                                        "type": "string",
                                                        "description": "The current phase of the component in the boot process."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "The current status of the component.  More detailed than phase.",
                                                        "readOnly": true
                                                    },
                                                    "status_override": {
                                                        "type": "string",
                                                        "description": "If set, this will override the status value."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "enabled": {
                                                "type": "boolean",
                                                "description": "A flag indicating if actions should be taken for this component."
                                            },
                                            "error": {
                                                "type": "string",
                                                "description": "A description of the most recent error to impact the component."
                                            },
                                            "session": {
                                                "type": "string",
                                                "description": "The session responsible for the component's current state"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Add or Replace a collection of components",
                "tags": [
                    "v2",
                    "components",
                    "cli_ignore"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.components",
                "description": "Update the state for a collection of components in the BOS database",
                "operationId": "put_v2_components",
                "requestBody": {
                    "description": "The state for an array of components",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "An array of component states.",
                                "type": "array",
                                "items": {
                                    "description": "The current and desired artifacts state for a component.\n",
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "The component's id. e.g. xname for hardware components"
                                        },
                                        "actual_state": {
                                            "description": "The desired boot artifacts and configuration for a component\n",
                                            "type": "object",
                                            "properties": {
                                                "boot_artifacts": {
                                                    "description": "A collection of boot artifacts.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "kernel": {
                                                            "type": "string",
                                                            "description": "An md5sum hash of the kernel ID"
                                                        },
                                                        "kernel_parameters": {
                                                            "type": "string",
                                                            "description": "Kernel parameters"
                                                        },
                                                        "initrd": {
                                                            "type": "string",
                                                            "description": "Initrd ID"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "bss_token": {
                                                    "type": "string",
                                                    "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                }
                                            }
                                        },
                                        "desired_state": {
                                            "description": "The desired boot artifacts and configuration for a component\n",
                                            "type": "object",
                                            "properties": {
                                                "boot_artifacts": {
                                                    "description": "A collection of boot artifacts.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "kernel": {
                                                            "type": "string",
                                                            "description": "An md5sum hash of the kernel ID"
                                                        },
                                                        "kernel_parameters": {
                                                            "type": "string",
                                                            "description": "Kernel parameters"
                                                        },
                                                        "initrd": {
                                                            "type": "string",
                                                            "description": "Initrd ID"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "configuration": {
                                                    "type": "string",
                                                    "description": "A CFS configuration ID."
                                                },
                                                "bss_token": {
                                                    "type": "string",
                                                    "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "staged_state": {
                                            "description": "The desired boot artifacts and configuration for a component\n",
                                            "type": "object",
                                            "properties": {
                                                "boot_artifacts": {
                                                    "description": "A collection of boot artifacts.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "kernel": {
                                                            "type": "string",
                                                            "description": "An md5sum hash of the kernel ID"
                                                        },
                                                        "kernel_parameters": {
                                                            "type": "string",
                                                            "description": "Kernel parameters"
                                                        },
                                                        "initrd": {
                                                            "type": "string",
                                                            "description": "Initrd ID"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "configuration": {
                                                    "type": "string",
                                                    "description": "A CFS configuration ID."
                                                },
                                                "session": {
                                                    "type": "string",
                                                    "description": "A session which can be triggered at a later time against this component."
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "last_action": {
                                            "description": "Information on the most recent action taken against the node.\n",
                                            "type": "object",
                                            "properties": {
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                },
                                                "action": {
                                                    "type": "string",
                                                    "description": "A description of the most recent operator/action to impact the component."
                                                },
                                                "num_attempts": {
                                                    "type": "integer",
                                                    "description": "How many attempts have been made for this action."
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "status": {
                                            "description": "Status information for the component",
                                            "type": "object",
                                            "properties": {
                                                "phase": {
                                                    "type": "string",
                                                    "description": "The current phase of the component in the boot process."
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "description": "The current status of the component.  More detailed than phase.",
                                                    "readOnly": true
                                                },
                                                "status_override": {
                                                    "type": "string",
                                                    "description": "If set, this will override the status value."
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "A flag indicating if actions should be taken for this component."
                                        },
                                        "error": {
                                            "type": "string",
                                            "description": "A description of the most recent error to impact the component."
                                        },
                                        "session": {
                                            "type": "string",
                                            "description": "The session responsible for the component's current state"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A collection of component states",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An array of component states.",
                                    "type": "array",
                                    "items": {
                                        "description": "The current and desired artifacts state for a component.\n",
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The component's id. e.g. xname for hardware components"
                                            },
                                            "actual_state": {
                                                "description": "The desired boot artifacts and configuration for a component\n",
                                                "type": "object",
                                                "properties": {
                                                    "boot_artifacts": {
                                                        "description": "A collection of boot artifacts.\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "kernel": {
                                                                "type": "string",
                                                                "description": "An md5sum hash of the kernel ID"
                                                            },
                                                            "kernel_parameters": {
                                                                "type": "string",
                                                                "description": "Kernel parameters"
                                                            },
                                                            "initrd": {
                                                                "type": "string",
                                                                "description": "Initrd ID"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "bss_token": {
                                                        "type": "string",
                                                        "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                    },
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    }
                                                }
                                            },
                                            "desired_state": {
                                                "description": "The desired boot artifacts and configuration for a component\n",
                                                "type": "object",
                                                "properties": {
                                                    "boot_artifacts": {
                                                        "description": "A collection of boot artifacts.\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "kernel": {
                                                                "type": "string",
                                                                "description": "An md5sum hash of the kernel ID"
                                                            },
                                                            "kernel_parameters": {
                                                                "type": "string",
                                                                "description": "Kernel parameters"
                                                            },
                                                            "initrd": {
                                                                "type": "string",
                                                                "description": "Initrd ID"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "configuration": {
                                                        "type": "string",
                                                        "description": "A CFS configuration ID."
                                                    },
                                                    "bss_token": {
                                                        "type": "string",
                                                        "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                    },
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "staged_state": {
                                                "description": "The desired boot artifacts and configuration for a component\n",
                                                "type": "object",
                                                "properties": {
                                                    "boot_artifacts": {
                                                        "description": "A collection of boot artifacts.\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "kernel": {
                                                                "type": "string",
                                                                "description": "An md5sum hash of the kernel ID"
                                                            },
                                                            "kernel_parameters": {
                                                                "type": "string",
                                                                "description": "Kernel parameters"
                                                            },
                                                            "initrd": {
                                                                "type": "string",
                                                                "description": "Initrd ID"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "configuration": {
                                                        "type": "string",
                                                        "description": "A CFS configuration ID."
                                                    },
                                                    "session": {
                                                        "type": "string",
                                                        "description": "A session which can be triggered at a later time against this component."
                                                    },
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "last_action": {
                                                "description": "Information on the most recent action taken against the node.\n",
                                                "type": "object",
                                                "properties": {
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "description": "A description of the most recent operator/action to impact the component."
                                                    },
                                                    "num_attempts": {
                                                        "type": "integer",
                                                        "description": "How many attempts have been made for this action."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "status": {
                                                "description": "Status information for the component",
                                                "type": "object",
                                                "properties": {
                                                    "phase": {
                                                        "type": "string",
                                                        "description": "The current phase of the component in the boot process."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "The current status of the component.  More detailed than phase.",
                                                        "readOnly": true
                                                    },
                                                    "status_override": {
                                                        "type": "string",
                                                        "description": "If set, this will override the status value."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "enabled": {
                                                "type": "boolean",
                                                "description": "A flag indicating if actions should be taken for this component."
                                            },
                                            "error": {
                                                "type": "string",
                                                "description": "A description of the most recent error to impact the component."
                                            },
                                            "session": {
                                                "type": "string",
                                                "description": "The session responsible for the component's current state"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a collection of components",
                "tags": [
                    "v2",
                    "components",
                    "cli_ignore"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.components",
                "description": "Update the state for a collection of components in the BOS database",
                "operationId": "patch_v2_components",
                "requestBody": {
                    "description": "The state for an array of components",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "description": "Information for patching multiple components.",
                                        "type": "object",
                                        "properties": {
                                            "patch": {
                                                "description": "The current and desired artifacts state for a component.\n",
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "description": "The component's id. e.g. xname for hardware components"
                                                    },
                                                    "actual_state": {
                                                        "description": "The desired boot artifacts and configuration for a component\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "boot_artifacts": {
                                                                "description": "A collection of boot artifacts.\n",
                                                                "type": "object",
                                                                "properties": {
                                                                    "kernel": {
                                                                        "type": "string",
                                                                        "description": "An md5sum hash of the kernel ID"
                                                                    },
                                                                    "kernel_parameters": {
                                                                        "type": "string",
                                                                        "description": "Kernel parameters"
                                                                    },
                                                                    "initrd": {
                                                                        "type": "string",
                                                                        "description": "Initrd ID"
                                                                    }
                                                                },
                                                                "additionalProperties": false
                                                            },
                                                            "bss_token": {
                                                                "type": "string",
                                                                "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                            },
                                                            "last_updated": {
                                                                "type": "string",
                                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                                "example": "2019-07-28T03:26:00Z",
                                                                "format": "date-time",
                                                                "readOnly": true
                                                            }
                                                        }
                                                    },
                                                    "desired_state": {
                                                        "description": "The desired boot artifacts and configuration for a component\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "boot_artifacts": {
                                                                "description": "A collection of boot artifacts.\n",
                                                                "type": "object",
                                                                "properties": {
                                                                    "kernel": {
                                                                        "type": "string",
                                                                        "description": "An md5sum hash of the kernel ID"
                                                                    },
                                                                    "kernel_parameters": {
                                                                        "type": "string",
                                                                        "description": "Kernel parameters"
                                                                    },
                                                                    "initrd": {
                                                                        "type": "string",
                                                                        "description": "Initrd ID"
                                                                    }
                                                                },
                                                                "additionalProperties": false
                                                            },
                                                            "configuration": {
                                                                "type": "string",
                                                                "description": "A CFS configuration ID."
                                                            },
                                                            "bss_token": {
                                                                "type": "string",
                                                                "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                            },
                                                            "last_updated": {
                                                                "type": "string",
                                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                                "example": "2019-07-28T03:26:00Z",
                                                                "format": "date-time",
                                                                "readOnly": true
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "staged_state": {
                                                        "description": "The desired boot artifacts and configuration for a component\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "boot_artifacts": {
                                                                "description": "A collection of boot artifacts.\n",
                                                                "type": "object",
                                                                "properties": {
                                                                    "kernel": {
                                                                        "type": "string",
                                                                        "description": "An md5sum hash of the kernel ID"
                                                                    },
                                                                    "kernel_parameters": {
                                                                        "type": "string",
                                                                        "description": "Kernel parameters"
                                                                    },
                                                                    "initrd": {
                                                                        "type": "string",
                                                                        "description": "Initrd ID"
                                                                    }
                                                                },
                                                                "additionalProperties": false
                                                            },
                                                            "configuration": {
                                                                "type": "string",
                                                                "description": "A CFS configuration ID."
                                                            },
                                                            "session": {
                                                                "type": "string",
                                                                "description": "A session which can be triggered at a later time against this component."
                                                            },
                                                            "last_updated": {
                                                                "type": "string",
                                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                                "example": "2019-07-28T03:26:00Z",
                                                                "format": "date-time",
                                                                "readOnly": true
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "last_action": {
                                                        "description": "Information on the most recent action taken against the node.\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "last_updated": {
                                                                "type": "string",
                                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                                "example": "2019-07-28T03:26:00Z",
                                                                "format": "date-time",
                                                                "readOnly": true
                                                            },
                                                            "action": {
                                                                "type": "string",
                                                                "description": "A description of the most recent operator/action to impact the component."
                                                            },
                                                            "num_attempts": {
                                                                "type": "integer",
                                                                "description": "How many attempts have been made for this action."
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "status": {
                                                        "description": "Status information for the component",
                                                        "type": "object",
                                                        "properties": {
                                                            "phase": {
                                                                "type": "string",
                                                                "description": "The current phase of the component in the boot process."
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "description": "The current status of the component.  More detailed than phase.",
                                                                "readOnly": true
                                                            },
                                                            "status_override": {
                                                                "type": "string",
                                                                "description": "If set, this will override the status value."
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "enabled": {
                                                        "type": "boolean",
                                                        "description": "A flag indicating if actions should be taken for this component."
                                                    },
                                                    "error": {
                                                        "type": "string",
                                                        "description": "A description of the most recent error to impact the component."
                                                    },
                                                    "session": {
                                                        "type": "string",
                                                        "description": "The session responsible for the component's current state"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "filters": {
                                                "description": "Information for patching multiple components.",
                                                "type": "object",
                                                "properties": {
                                                    "ids": {
                                                        "type": "string",
                                                        "description": "A comma separated list of component ids"
                                                    },
                                                    "session": {
                                                        "type": "string",
                                                        "description": "A session name.  All components part of this session will be patched."
                                                    }
                                                }
                                            }
                                        },
                                        "required": [
                                            "patch",
                                            "filters"
                                        ]
                                    },
                                    {
                                        "description": "An array of component states.",
                                        "type": "array",
                                        "items": {
                                            "description": "The current and desired artifacts state for a component.\n",
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "description": "The component's id. e.g. xname for hardware components"
                                                },
                                                "actual_state": {
                                                    "description": "The desired boot artifacts and configuration for a component\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "boot_artifacts": {
                                                            "description": "A collection of boot artifacts.\n",
                                                            "type": "object",
                                                            "properties": {
                                                                "kernel": {
                                                                    "type": "string",
                                                                    "description": "An md5sum hash of the kernel ID"
                                                                },
                                                                "kernel_parameters": {
                                                                    "type": "string",
                                                                    "description": "Kernel parameters"
                                                                },
                                                                "initrd": {
                                                                    "type": "string",
                                                                    "description": "Initrd ID"
                                                                }
                                                            },
                                                            "additionalProperties": false
                                                        },
                                                        "bss_token": {
                                                            "type": "string",
                                                            "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                        },
                                                        "last_updated": {
                                                            "type": "string",
                                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                            "example": "2019-07-28T03:26:00Z",
                                                            "format": "date-time",
                                                            "readOnly": true
                                                        }
                                                    }
                                                },
                                                "desired_state": {
                                                    "description": "The desired boot artifacts and configuration for a component\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "boot_artifacts": {
                                                            "description": "A collection of boot artifacts.\n",
                                                            "type": "object",
                                                            "properties": {
                                                                "kernel": {
                                                                    "type": "string",
                                                                    "description": "An md5sum hash of the kernel ID"
                                                                },
                                                                "kernel_parameters": {
                                                                    "type": "string",
                                                                    "description": "Kernel parameters"
                                                                },
                                                                "initrd": {
                                                                    "type": "string",
                                                                    "description": "Initrd ID"
                                                                }
                                                            },
                                                            "additionalProperties": false
                                                        },
                                                        "configuration": {
                                                            "type": "string",
                                                            "description": "A CFS configuration ID."
                                                        },
                                                        "bss_token": {
                                                            "type": "string",
                                                            "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                        },
                                                        "last_updated": {
                                                            "type": "string",
                                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                            "example": "2019-07-28T03:26:00Z",
                                                            "format": "date-time",
                                                            "readOnly": true
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "staged_state": {
                                                    "description": "The desired boot artifacts and configuration for a component\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "boot_artifacts": {
                                                            "description": "A collection of boot artifacts.\n",
                                                            "type": "object",
                                                            "properties": {
                                                                "kernel": {
                                                                    "type": "string",
                                                                    "description": "An md5sum hash of the kernel ID"
                                                                },
                                                                "kernel_parameters": {
                                                                    "type": "string",
                                                                    "description": "Kernel parameters"
                                                                },
                                                                "initrd": {
                                                                    "type": "string",
                                                                    "description": "Initrd ID"
                                                                }
                                                            },
                                                            "additionalProperties": false
                                                        },
                                                        "configuration": {
                                                            "type": "string",
                                                            "description": "A CFS configuration ID."
                                                        },
                                                        "session": {
                                                            "type": "string",
                                                            "description": "A session which can be triggered at a later time against this component."
                                                        },
                                                        "last_updated": {
                                                            "type": "string",
                                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                            "example": "2019-07-28T03:26:00Z",
                                                            "format": "date-time",
                                                            "readOnly": true
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "last_action": {
                                                    "description": "Information on the most recent action taken against the node.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "last_updated": {
                                                            "type": "string",
                                                            "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                            "example": "2019-07-28T03:26:00Z",
                                                            "format": "date-time",
                                                            "readOnly": true
                                                        },
                                                        "action": {
                                                            "type": "string",
                                                            "description": "A description of the most recent operator/action to impact the component."
                                                        },
                                                        "num_attempts": {
                                                            "type": "integer",
                                                            "description": "How many attempts have been made for this action."
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "status": {
                                                    "description": "Status information for the component",
                                                    "type": "object",
                                                    "properties": {
                                                        "phase": {
                                                            "type": "string",
                                                            "description": "The current phase of the component in the boot process."
                                                        },
                                                        "status": {
                                                            "type": "string",
                                                            "description": "The current status of the component.  More detailed than phase.",
                                                            "readOnly": true
                                                        },
                                                        "status_override": {
                                                            "type": "string",
                                                            "description": "If set, this will override the status value."
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "enabled": {
                                                    "type": "boolean",
                                                    "description": "A flag indicating if actions should be taken for this component."
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "description": "A description of the most recent error to impact the component."
                                                },
                                                "session": {
                                                    "type": "string",
                                                    "description": "The session responsible for the component's current state"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A collection of component states",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An array of component states.",
                                    "type": "array",
                                    "items": {
                                        "description": "The current and desired artifacts state for a component.\n",
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The component's id. e.g. xname for hardware components"
                                            },
                                            "actual_state": {
                                                "description": "The desired boot artifacts and configuration for a component\n",
                                                "type": "object",
                                                "properties": {
                                                    "boot_artifacts": {
                                                        "description": "A collection of boot artifacts.\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "kernel": {
                                                                "type": "string",
                                                                "description": "An md5sum hash of the kernel ID"
                                                            },
                                                            "kernel_parameters": {
                                                                "type": "string",
                                                                "description": "Kernel parameters"
                                                            },
                                                            "initrd": {
                                                                "type": "string",
                                                                "description": "Initrd ID"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "bss_token": {
                                                        "type": "string",
                                                        "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                    },
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    }
                                                }
                                            },
                                            "desired_state": {
                                                "description": "The desired boot artifacts and configuration for a component\n",
                                                "type": "object",
                                                "properties": {
                                                    "boot_artifacts": {
                                                        "description": "A collection of boot artifacts.\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "kernel": {
                                                                "type": "string",
                                                                "description": "An md5sum hash of the kernel ID"
                                                            },
                                                            "kernel_parameters": {
                                                                "type": "string",
                                                                "description": "Kernel parameters"
                                                            },
                                                            "initrd": {
                                                                "type": "string",
                                                                "description": "Initrd ID"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "configuration": {
                                                        "type": "string",
                                                        "description": "A CFS configuration ID."
                                                    },
                                                    "bss_token": {
                                                        "type": "string",
                                                        "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                    },
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "staged_state": {
                                                "description": "The desired boot artifacts and configuration for a component\n",
                                                "type": "object",
                                                "properties": {
                                                    "boot_artifacts": {
                                                        "description": "A collection of boot artifacts.\n",
                                                        "type": "object",
                                                        "properties": {
                                                            "kernel": {
                                                                "type": "string",
                                                                "description": "An md5sum hash of the kernel ID"
                                                            },
                                                            "kernel_parameters": {
                                                                "type": "string",
                                                                "description": "Kernel parameters"
                                                            },
                                                            "initrd": {
                                                                "type": "string",
                                                                "description": "Initrd ID"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "configuration": {
                                                        "type": "string",
                                                        "description": "A CFS configuration ID."
                                                    },
                                                    "session": {
                                                        "type": "string",
                                                        "description": "A session which can be triggered at a later time against this component."
                                                    },
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "last_action": {
                                                "description": "Information on the most recent action taken against the node.\n",
                                                "type": "object",
                                                "properties": {
                                                    "last_updated": {
                                                        "type": "string",
                                                        "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                        "example": "2019-07-28T03:26:00Z",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "description": "A description of the most recent operator/action to impact the component."
                                                    },
                                                    "num_attempts": {
                                                        "type": "integer",
                                                        "description": "How many attempts have been made for this action."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "status": {
                                                "description": "Status information for the component",
                                                "type": "object",
                                                "properties": {
                                                    "phase": {
                                                        "type": "string",
                                                        "description": "The current phase of the component in the boot process."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "The current status of the component.  More detailed than phase.",
                                                        "readOnly": true
                                                    },
                                                    "status_override": {
                                                        "type": "string",
                                                        "description": "If set, this will override the status value."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "enabled": {
                                                "type": "boolean",
                                                "description": "A flag indicating if actions should be taken for this component."
                                            },
                                            "error": {
                                                "type": "string",
                                                "description": "A description of the most recent error to impact the component."
                                            },
                                            "session": {
                                                "type": "string",
                                                "description": "The session responsible for the component's current state"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/components/{component_id}": {
            "get": {
                "summary": "Retrieve the state of a single component",
                "tags": [
                    "v2",
                    "components"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.components",
                "description": "Retrieve the current and desired state of a single component",
                "operationId": "get_v2_component",
                "responses": {
                    "200": {
                        "description": "A single component state",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The current and desired artifacts state for a component.\n",
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "The component's id. e.g. xname for hardware components"
                                        },
                                        "actual_state": {
                                            "description": "The desired boot artifacts and configuration for a component\n",
                                            "type": "object",
                                            "properties": {
                                                "boot_artifacts": {
                                                    "description": "A collection of boot artifacts.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "kernel": {
                                                            "type": "string",
                                                            "description": "An md5sum hash of the kernel ID"
                                                        },
                                                        "kernel_parameters": {
                                                            "type": "string",
                                                            "description": "Kernel parameters"
                                                        },
                                                        "initrd": {
                                                            "type": "string",
                                                            "description": "Initrd ID"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "bss_token": {
                                                    "type": "string",
                                                    "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                }
                                            }
                                        },
                                        "desired_state": {
                                            "description": "The desired boot artifacts and configuration for a component\n",
                                            "type": "object",
                                            "properties": {
                                                "boot_artifacts": {
                                                    "description": "A collection of boot artifacts.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "kernel": {
                                                            "type": "string",
                                                            "description": "An md5sum hash of the kernel ID"
                                                        },
                                                        "kernel_parameters": {
                                                            "type": "string",
                                                            "description": "Kernel parameters"
                                                        },
                                                        "initrd": {
                                                            "type": "string",
                                                            "description": "Initrd ID"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "configuration": {
                                                    "type": "string",
                                                    "description": "A CFS configuration ID."
                                                },
                                                "bss_token": {
                                                    "type": "string",
                                                    "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "staged_state": {
                                            "description": "The desired boot artifacts and configuration for a component\n",
                                            "type": "object",
                                            "properties": {
                                                "boot_artifacts": {
                                                    "description": "A collection of boot artifacts.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "kernel": {
                                                            "type": "string",
                                                            "description": "An md5sum hash of the kernel ID"
                                                        },
                                                        "kernel_parameters": {
                                                            "type": "string",
                                                            "description": "Kernel parameters"
                                                        },
                                                        "initrd": {
                                                            "type": "string",
                                                            "description": "Initrd ID"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "configuration": {
                                                    "type": "string",
                                                    "description": "A CFS configuration ID."
                                                },
                                                "session": {
                                                    "type": "string",
                                                    "description": "A session which can be triggered at a later time against this component."
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "last_action": {
                                            "description": "Information on the most recent action taken against the node.\n",
                                            "type": "object",
                                            "properties": {
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                },
                                                "action": {
                                                    "type": "string",
                                                    "description": "A description of the most recent operator/action to impact the component."
                                                },
                                                "num_attempts": {
                                                    "type": "integer",
                                                    "description": "How many attempts have been made for this action."
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "status": {
                                            "description": "Status information for the component",
                                            "type": "object",
                                            "properties": {
                                                "phase": {
                                                    "type": "string",
                                                    "description": "The current phase of the component in the boot process."
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "description": "The current status of the component.  More detailed than phase.",
                                                    "readOnly": true
                                                },
                                                "status_override": {
                                                    "type": "string",
                                                    "description": "If set, this will override the status value."
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "A flag indicating if actions should be taken for this component."
                                        },
                                        "error": {
                                            "type": "string",
                                            "description": "A description of the most recent error to impact the component."
                                        },
                                        "session": {
                                            "type": "string",
                                            "description": "The session responsible for the component's current state"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Add or Replace a single component",
                "tags": [
                    "v2",
                    "components"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.components",
                "description": "Update the state for a given component in the BOS database",
                "operationId": "put_v2_component",
                "requestBody": {
                    "description": "The state for a single component",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The current and desired artifacts state for a component.\n",
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "The component's id. e.g. xname for hardware components"
                                    },
                                    "actual_state": {
                                        "description": "The desired boot artifacts and configuration for a component\n",
                                        "type": "object",
                                        "properties": {
                                            "boot_artifacts": {
                                                "description": "A collection of boot artifacts.\n",
                                                "type": "object",
                                                "properties": {
                                                    "kernel": {
                                                        "type": "string",
                                                        "description": "An md5sum hash of the kernel ID"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "Kernel parameters"
                                                    },
                                                    "initrd": {
                                                        "type": "string",
                                                        "description": "Initrd ID"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "bss_token": {
                                                "type": "string",
                                                "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                            },
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            }
                                        }
                                    },
                                    "desired_state": {
                                        "description": "The desired boot artifacts and configuration for a component\n",
                                        "type": "object",
                                        "properties": {
                                            "boot_artifacts": {
                                                "description": "A collection of boot artifacts.\n",
                                                "type": "object",
                                                "properties": {
                                                    "kernel": {
                                                        "type": "string",
                                                        "description": "An md5sum hash of the kernel ID"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "Kernel parameters"
                                                    },
                                                    "initrd": {
                                                        "type": "string",
                                                        "description": "Initrd ID"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "configuration": {
                                                "type": "string",
                                                "description": "A CFS configuration ID."
                                            },
                                            "bss_token": {
                                                "type": "string",
                                                "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                            },
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "staged_state": {
                                        "description": "The desired boot artifacts and configuration for a component\n",
                                        "type": "object",
                                        "properties": {
                                            "boot_artifacts": {
                                                "description": "A collection of boot artifacts.\n",
                                                "type": "object",
                                                "properties": {
                                                    "kernel": {
                                                        "type": "string",
                                                        "description": "An md5sum hash of the kernel ID"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "Kernel parameters"
                                                    },
                                                    "initrd": {
                                                        "type": "string",
                                                        "description": "Initrd ID"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "configuration": {
                                                "type": "string",
                                                "description": "A CFS configuration ID."
                                            },
                                            "session": {
                                                "type": "string",
                                                "description": "A session which can be triggered at a later time against this component."
                                            },
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "last_action": {
                                        "description": "Information on the most recent action taken against the node.\n",
                                        "type": "object",
                                        "properties": {
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "A description of the most recent operator/action to impact the component."
                                            },
                                            "num_attempts": {
                                                "type": "integer",
                                                "description": "How many attempts have been made for this action."
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "status": {
                                        "description": "Status information for the component",
                                        "type": "object",
                                        "properties": {
                                            "phase": {
                                                "type": "string",
                                                "description": "The current phase of the component in the boot process."
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "The current status of the component.  More detailed than phase.",
                                                "readOnly": true
                                            },
                                            "status_override": {
                                                "type": "string",
                                                "description": "If set, this will override the status value."
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "A flag indicating if actions should be taken for this component."
                                    },
                                    "error": {
                                        "type": "string",
                                        "description": "A description of the most recent error to impact the component."
                                    },
                                    "session": {
                                        "type": "string",
                                        "description": "The session responsible for the component's current state"
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A single component state",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The current and desired artifacts state for a component.\n",
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "The component's id. e.g. xname for hardware components"
                                        },
                                        "actual_state": {
                                            "description": "The desired boot artifacts and configuration for a component\n",
                                            "type": "object",
                                            "properties": {
                                                "boot_artifacts": {
                                                    "description": "A collection of boot artifacts.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "kernel": {
                                                            "type": "string",
                                                            "description": "An md5sum hash of the kernel ID"
                                                        },
                                                        "kernel_parameters": {
                                                            "type": "string",
                                                            "description": "Kernel parameters"
                                                        },
                                                        "initrd": {
                                                            "type": "string",
                                                            "description": "Initrd ID"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "bss_token": {
                                                    "type": "string",
                                                    "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                }
                                            }
                                        },
                                        "desired_state": {
                                            "description": "The desired boot artifacts and configuration for a component\n",
                                            "type": "object",
                                            "properties": {
                                                "boot_artifacts": {
                                                    "description": "A collection of boot artifacts.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "kernel": {
                                                            "type": "string",
                                                            "description": "An md5sum hash of the kernel ID"
                                                        },
                                                        "kernel_parameters": {
                                                            "type": "string",
                                                            "description": "Kernel parameters"
                                                        },
                                                        "initrd": {
                                                            "type": "string",
                                                            "description": "Initrd ID"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "configuration": {
                                                    "type": "string",
                                                    "description": "A CFS configuration ID."
                                                },
                                                "bss_token": {
                                                    "type": "string",
                                                    "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "staged_state": {
                                            "description": "The desired boot artifacts and configuration for a component\n",
                                            "type": "object",
                                            "properties": {
                                                "boot_artifacts": {
                                                    "description": "A collection of boot artifacts.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "kernel": {
                                                            "type": "string",
                                                            "description": "An md5sum hash of the kernel ID"
                                                        },
                                                        "kernel_parameters": {
                                                            "type": "string",
                                                            "description": "Kernel parameters"
                                                        },
                                                        "initrd": {
                                                            "type": "string",
                                                            "description": "Initrd ID"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "configuration": {
                                                    "type": "string",
                                                    "description": "A CFS configuration ID."
                                                },
                                                "session": {
                                                    "type": "string",
                                                    "description": "A session which can be triggered at a later time against this component."
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "last_action": {
                                            "description": "Information on the most recent action taken against the node.\n",
                                            "type": "object",
                                            "properties": {
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                },
                                                "action": {
                                                    "type": "string",
                                                    "description": "A description of the most recent operator/action to impact the component."
                                                },
                                                "num_attempts": {
                                                    "type": "integer",
                                                    "description": "How many attempts have been made for this action."
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "status": {
                                            "description": "Status information for the component",
                                            "type": "object",
                                            "properties": {
                                                "phase": {
                                                    "type": "string",
                                                    "description": "The current phase of the component in the boot process."
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "description": "The current status of the component.  More detailed than phase.",
                                                    "readOnly": true
                                                },
                                                "status_override": {
                                                    "type": "string",
                                                    "description": "If set, this will override the status value."
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "A flag indicating if actions should be taken for this component."
                                        },
                                        "error": {
                                            "type": "string",
                                            "description": "A description of the most recent error to impact the component."
                                        },
                                        "session": {
                                            "type": "string",
                                            "description": "The session responsible for the component's current state"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a single component",
                "tags": [
                    "v2",
                    "components"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.components",
                "description": "Update the state for a given component in the BOS database",
                "operationId": "patch_v2_component",
                "requestBody": {
                    "description": "The state for a single component",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The current and desired artifacts state for a component.\n",
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "The component's id. e.g. xname for hardware components"
                                    },
                                    "actual_state": {
                                        "description": "The desired boot artifacts and configuration for a component\n",
                                        "type": "object",
                                        "properties": {
                                            "boot_artifacts": {
                                                "description": "A collection of boot artifacts.\n",
                                                "type": "object",
                                                "properties": {
                                                    "kernel": {
                                                        "type": "string",
                                                        "description": "An md5sum hash of the kernel ID"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "Kernel parameters"
                                                    },
                                                    "initrd": {
                                                        "type": "string",
                                                        "description": "Initrd ID"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "bss_token": {
                                                "type": "string",
                                                "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                            },
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            }
                                        }
                                    },
                                    "desired_state": {
                                        "description": "The desired boot artifacts and configuration for a component\n",
                                        "type": "object",
                                        "properties": {
                                            "boot_artifacts": {
                                                "description": "A collection of boot artifacts.\n",
                                                "type": "object",
                                                "properties": {
                                                    "kernel": {
                                                        "type": "string",
                                                        "description": "An md5sum hash of the kernel ID"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "Kernel parameters"
                                                    },
                                                    "initrd": {
                                                        "type": "string",
                                                        "description": "Initrd ID"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "configuration": {
                                                "type": "string",
                                                "description": "A CFS configuration ID."
                                            },
                                            "bss_token": {
                                                "type": "string",
                                                "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                            },
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "staged_state": {
                                        "description": "The desired boot artifacts and configuration for a component\n",
                                        "type": "object",
                                        "properties": {
                                            "boot_artifacts": {
                                                "description": "A collection of boot artifacts.\n",
                                                "type": "object",
                                                "properties": {
                                                    "kernel": {
                                                        "type": "string",
                                                        "description": "An md5sum hash of the kernel ID"
                                                    },
                                                    "kernel_parameters": {
                                                        "type": "string",
                                                        "description": "Kernel parameters"
                                                    },
                                                    "initrd": {
                                                        "type": "string",
                                                        "description": "Initrd ID"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "configuration": {
                                                "type": "string",
                                                "description": "A CFS configuration ID."
                                            },
                                            "session": {
                                                "type": "string",
                                                "description": "A session which can be triggered at a later time against this component."
                                            },
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "last_action": {
                                        "description": "Information on the most recent action taken against the node.\n",
                                        "type": "object",
                                        "properties": {
                                            "last_updated": {
                                                "type": "string",
                                                "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                "example": "2019-07-28T03:26:00Z",
                                                "format": "date-time",
                                                "readOnly": true
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "A description of the most recent operator/action to impact the component."
                                            },
                                            "num_attempts": {
                                                "type": "integer",
                                                "description": "How many attempts have been made for this action."
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "status": {
                                        "description": "Status information for the component",
                                        "type": "object",
                                        "properties": {
                                            "phase": {
                                                "type": "string",
                                                "description": "The current phase of the component in the boot process."
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "The current status of the component.  More detailed than phase.",
                                                "readOnly": true
                                            },
                                            "status_override": {
                                                "type": "string",
                                                "description": "If set, this will override the status value."
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "A flag indicating if actions should be taken for this component."
                                    },
                                    "error": {
                                        "type": "string",
                                        "description": "A description of the most recent error to impact the component."
                                    },
                                    "session": {
                                        "type": "string",
                                        "description": "The session responsible for the component's current state"
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A single component state",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The current and desired artifacts state for a component.\n",
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "The component's id. e.g. xname for hardware components"
                                        },
                                        "actual_state": {
                                            "description": "The desired boot artifacts and configuration for a component\n",
                                            "type": "object",
                                            "properties": {
                                                "boot_artifacts": {
                                                    "description": "A collection of boot artifacts.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "kernel": {
                                                            "type": "string",
                                                            "description": "An md5sum hash of the kernel ID"
                                                        },
                                                        "kernel_parameters": {
                                                            "type": "string",
                                                            "description": "Kernel parameters"
                                                        },
                                                        "initrd": {
                                                            "type": "string",
                                                            "description": "Initrd ID"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "bss_token": {
                                                    "type": "string",
                                                    "description": "A token received from the node identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                }
                                            }
                                        },
                                        "desired_state": {
                                            "description": "The desired boot artifacts and configuration for a component\n",
                                            "type": "object",
                                            "properties": {
                                                "boot_artifacts": {
                                                    "description": "A collection of boot artifacts.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "kernel": {
                                                            "type": "string",
                                                            "description": "An md5sum hash of the kernel ID"
                                                        },
                                                        "kernel_parameters": {
                                                            "type": "string",
                                                            "description": "Kernel parameters"
                                                        },
                                                        "initrd": {
                                                            "type": "string",
                                                            "description": "Initrd ID"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "configuration": {
                                                    "type": "string",
                                                    "description": "A CFS configuration ID."
                                                },
                                                "bss_token": {
                                                    "type": "string",
                                                    "description": "A token received from BSS identifying the boot artifacts.  For BOS use-only, users should not set this field. It will be overwritten.\n"
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "staged_state": {
                                            "description": "The desired boot artifacts and configuration for a component\n",
                                            "type": "object",
                                            "properties": {
                                                "boot_artifacts": {
                                                    "description": "A collection of boot artifacts.\n",
                                                    "type": "object",
                                                    "properties": {
                                                        "kernel": {
                                                            "type": "string",
                                                            "description": "An md5sum hash of the kernel ID"
                                                        },
                                                        "kernel_parameters": {
                                                            "type": "string",
                                                            "description": "Kernel parameters"
                                                        },
                                                        "initrd": {
                                                            "type": "string",
                                                            "description": "Initrd ID"
                                                        }
                                                    },
                                                    "additionalProperties": false
                                                },
                                                "configuration": {
                                                    "type": "string",
                                                    "description": "A CFS configuration ID."
                                                },
                                                "session": {
                                                    "type": "string",
                                                    "description": "A session which can be triggered at a later time against this component."
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "last_action": {
                                            "description": "Information on the most recent action taken against the node.\n",
                                            "type": "object",
                                            "properties": {
                                                "last_updated": {
                                                    "type": "string",
                                                    "description": "The date/time when the state was last updated in RFC 3339 format.",
                                                    "example": "2019-07-28T03:26:00Z",
                                                    "format": "date-time",
                                                    "readOnly": true
                                                },
                                                "action": {
                                                    "type": "string",
                                                    "description": "A description of the most recent operator/action to impact the component."
                                                },
                                                "num_attempts": {
                                                    "type": "integer",
                                                    "description": "How many attempts have been made for this action."
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "status": {
                                            "description": "Status information for the component",
                                            "type": "object",
                                            "properties": {
                                                "phase": {
                                                    "type": "string",
                                                    "description": "The current phase of the component in the boot process."
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "description": "The current status of the component.  More detailed than phase.",
                                                    "readOnly": true
                                                },
                                                "status_override": {
                                                    "type": "string",
                                                    "description": "If set, this will override the status value."
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "A flag indicating if actions should be taken for this component."
                                        },
                                        "error": {
                                            "type": "string",
                                            "description": "A description of the most recent error to impact the component."
                                        },
                                        "session": {
                                            "type": "string",
                                            "description": "The session responsible for the component's current state"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "v2",
                    "components",
                    "cli_ignore"
                ],
                "summary": "Delete a single component",
                "x-openapi-router-controller": "bos.server.controllers.v2.components",
                "description": "Delete the given component",
                "operationId": "delete_v2_component",
                "responses": {
                    "204": {
                        "description": "The resource was deleted."
                    },
                    "404": {
                        "description": "The resource was not found.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "component_id",
                    "in": "path",
                    "description": "Component id. e.g. xname for hardware components",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/v2/applystaged": {
            "post": {
                "summary": "Start a staged session for the specified components",
                "description": "Given a list of xnames, this will trigger the start of any sessions\nstaged for those components.  Components without a staged session\nwill be ignored, and a list all components that are acted on will\nbe returned in the response.\n",
                "tags": [
                    "v2",
                    "applystaged"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.components",
                "operationId": "post_v2_apply_staged",
                "requestBody": {
                    "description": "A list of xnames that should have their staged session applied.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A list of components that should have their staged session applied.\n",
                                "type": "object",
                                "properties": {
                                    "xnames": {
                                        "description": "The list of component xnames",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of xnames that should have their staged session applied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A list of components that should have their staged session applied.\n",
                                    "type": "object",
                                    "properties": {
                                        "succeeded": {
                                            "description": "The list of component xnames",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "failed": {
                                            "description": "The list of component xnames",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "ignored": {
                                            "description": "The list of component xnames",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/options": {
            "get": {
                "summary": "Retrieve the BOS service options",
                "tags": [
                    "options"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.options",
                "description": "Retrieve the list of BOS service options.",
                "operationId": "get_v2_options",
                "responses": {
                    "200": {
                        "description": "A collection of service-wide options",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Options for the boot orchestration service.\n",
                                    "type": "object",
                                    "properties": {
                                        "cleanup_completed_session_ttl": {
                                            "type": "string",
                                            "description": "Delete complete sessions that are older than cleanup_completed_session_ttl (in hours). 0h disables cleanup behavior."
                                        },
                                        "component_actual_state_ttl": {
                                            "type": "string",
                                            "description": "The maximum amount of time a component's actual state is considered valid (in hours). 0h disables cleanup behavior for newly booted nodes and instructs bos-state-reporter to report once instead of periodically."
                                        },
                                        "disable_components_on_completion": {
                                            "type": "boolean",
                                            "description": "Allows for BOS components to be marked as disabled after a session has been completed. If false, BOS will continue to maintain the state of the nodes declaratively, even after a session finishes."
                                        },
                                        "discovery_frequency": {
                                            "type": "integer",
                                            "description": "How frequently the BOS discovery agent syncs new components from HSM. (in seconds)"
                                        },
                                        "logging_level": {
                                            "type": "string",
                                            "description": "The logging level for all BOS services"
                                        },
                                        "max_power_on_wait_time": {
                                            "type": "integer",
                                            "description": "How long BOS will wait for a node to power on before rebooting again (in seconds)"
                                        },
                                        "max_power_off_wait_time": {
                                            "type": "integer",
                                            "description": "How long BOS will wait for a node to power off before forcefully powering off (in seconds)"
                                        },
                                        "polling_frequency": {
                                            "type": "integer",
                                            "description": "How frequently the BOS operators check component state for needed actions. (in seconds)"
                                        }
                                    },
                                    "additionalProperties": true
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update BOS service options",
                "tags": [
                    "v2",
                    "options"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.options",
                "operationId": "patch_v2_options",
                "description": "Update one or more of the BOS service options.",
                "requestBody": {
                    "description": "Service-wide options",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Options for the boot orchestration service.\n",
                                "type": "object",
                                "properties": {
                                    "cleanup_completed_session_ttl": {
                                        "type": "string",
                                        "description": "Delete complete sessions that are older than cleanup_completed_session_ttl (in hours). 0h disables cleanup behavior."
                                    },
                                    "component_actual_state_ttl": {
                                        "type": "string",
                                        "description": "The maximum amount of time a component's actual state is considered valid (in hours). 0h disables cleanup behavior for newly booted nodes and instructs bos-state-reporter to report once instead of periodically."
                                    },
                                    "disable_components_on_completion": {
                                        "type": "boolean",
                                        "description": "Allows for BOS components to be marked as disabled after a session has been completed. If false, BOS will continue to maintain the state of the nodes declaratively, even after a session finishes."
                                    },
                                    "discovery_frequency": {
                                        "type": "integer",
                                        "description": "How frequently the BOS discovery agent syncs new components from HSM. (in seconds)"
                                    },
                                    "logging_level": {
                                        "type": "string",
                                        "description": "The logging level for all BOS services"
                                    },
                                    "max_power_on_wait_time": {
                                        "type": "integer",
                                        "description": "How long BOS will wait for a node to power on before rebooting again (in seconds)"
                                    },
                                    "max_power_off_wait_time": {
                                        "type": "integer",
                                        "description": "How long BOS will wait for a node to power off before forcefully powering off (in seconds)"
                                    },
                                    "polling_frequency": {
                                        "type": "integer",
                                        "description": "How frequently the BOS operators check component state for needed actions. (in seconds)"
                                    }
                                },
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A collection of service-wide options",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Options for the boot orchestration service.\n",
                                    "type": "object",
                                    "properties": {
                                        "cleanup_completed_session_ttl": {
                                            "type": "string",
                                            "description": "Delete complete sessions that are older than cleanup_completed_session_ttl (in hours). 0h disables cleanup behavior."
                                        },
                                        "component_actual_state_ttl": {
                                            "type": "string",
                                            "description": "The maximum amount of time a component's actual state is considered valid (in hours). 0h disables cleanup behavior for newly booted nodes and instructs bos-state-reporter to report once instead of periodically."
                                        },
                                        "disable_components_on_completion": {
                                            "type": "boolean",
                                            "description": "Allows for BOS components to be marked as disabled after a session has been completed. If false, BOS will continue to maintain the state of the nodes declaratively, even after a session finishes."
                                        },
                                        "discovery_frequency": {
                                            "type": "integer",
                                            "description": "How frequently the BOS discovery agent syncs new components from HSM. (in seconds)"
                                        },
                                        "logging_level": {
                                            "type": "string",
                                            "description": "The logging level for all BOS services"
                                        },
                                        "max_power_on_wait_time": {
                                            "type": "integer",
                                            "description": "How long BOS will wait for a node to power on before rebooting again (in seconds)"
                                        },
                                        "max_power_off_wait_time": {
                                            "type": "integer",
                                            "description": "How long BOS will wait for a node to power off before forcefully powering off (in seconds)"
                                        },
                                        "polling_frequency": {
                                            "type": "integer",
                                            "description": "How frequently the BOS operators check component state for needed actions. (in seconds)"
                                        }
                                    },
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/version": {
            "get": {
                "summary": "Get API version",
                "tags": [
                    "v2",
                    "version"
                ],
                "x-openapi-router-controller": "bos.server.controllers.v2.base",
                "operationId": "get_version_v2",
                "responses": {
                    "200": {
                        "description": "Get version details\nThe versioning system uses [semver](https://semver.org/).\n## Link Relationships\n* self : Link to itself\n* versions : Link back to the versions resource\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Version data",
                                    "type": "object",
                                    "properties": {
                                        "major": {
                                            "type": "integer"
                                        },
                                        "minor": {
                                            "type": "integer"
                                        },
                                        "patch": {
                                            "type": "integer"
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "description": "Link to other resources",
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string"
                                                    },
                                                    "href": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "description": "An error response for RFC 7807 problem details.",
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "description": "Relative URI reference to the type of problem which includes human readable documentation.",
                                            "type": "string",
                                            "format": "uri",
                                            "default": "about:blank"
                                        },
                                        "title": {
                                            "description": "Short, human-readable summary of the problem, should not change by occurrence.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "instance": {
                                            "description": "A relative URI reference that identifies the specific occurrence of the problem",
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "detail": {
                                            "description": "A human-readable explanation specific to this occurrence of the problem. Focus on helping correct the problem, rather than giving debugging information.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
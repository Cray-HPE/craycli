# Copyright 2019-2020 Cray Inc.
openapi: 3.0.2
info:
  title: Node Memory Dump Service
  version: 2.0.0
  description: >-
    The Node Memory Dump (NMD) service requests and retrieves node memory
    dumps.  The dumps retrieved by the NMD will be gathered by the System Dump
    Framework (SDF) via a registered callback API.


    General workflow:

      * POST /dumps - request a dump
      * GET /dumps/{requestID} - retrieve dump metadata
servers:
  - url: 'https://api-gw-service-nmn.local/apis/v2/nmd'
    description: The production NMD API server
paths:
  /dumps:
    get:
      summary: Retrieve dump metadata
      description: >-
        Get dump metadata for all nodes in system if no parameter is specified,
        or for a single node if specified.
      tags:
        - dumps
      parameters:
        - in: query
          name: xname
          required: false
          schema:
            type: string
          description: Unique identifier of the node that was dumped
      responses:
        '200':
          $ref: '#/components/responses/DumpInfoArray'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      summary: Request node dump
      description: >-
        Request a node memory dump for specified node. A successful response
        payload contains dump metadata, including requestID, which can be used
        for subsequent retrieval of the dump information.
      tags:
        - dumps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DumpRequest'
      responses:
        '202':
          $ref: '#/components/responses/DumpInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '502':
          $ref: '#/components/responses/BadGateway'
  '/dumps/{requestID}':
    parameters:
      - in: path
        name: requestID
        description: request ID
        required: true
        schema:
          type: string
          format: uuid
          pattern: >-
            ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
    get:
      summary: Retrieve dump metadata by requestID
      description: >-
        Get the dump metadata specified by the requestID. On successful return,
        the response contains metadata and the dump information.
      tags:
        - dumps
      responses:
        '200':
          $ref: '#/components/responses/DumpInfo'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Delete dump by requestID
      description: >-
        Remove dump metadata, as well as dump itself and cancel ongoing dump for
        the specified requestID.
      tags:
        - dumps
      parameters:
        - in: query
          name: force
          description: Force removing the requested dump data
          schema:
            type: boolean
            default: false
          required: false
      responses:
        '200':
          $ref: '#/components/responses/DeleteResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /artifacts:
    get:
      summary: Retrieve debug artifact data
      description: Retrieve all artifacts that are saved in the NMD storage.
      tags:
        - artifacts
      responses:
        '200':
          description: List of all artifacts stored in the NMD storage
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      summary: Request saving a debug artifact
      description: Request saving an artifact specified as s3path.  The s3 path string format is s3://<bucket>/<object_key> and it should be an image stored in the S3 storage. The image should be a rootfs that contains kernel module files with debug-info and it will be used for debugging with the node memory dump.
      tags:
        - artifacts
      parameters:
        - in: query
          name: s3path
          description: S3 path for artifact
          required: true
          schema:
            type: string
          example: s3://boot-images/87cabdc2-8919-49a9-b22b-f3d5265cdabf/rootfs
      responses:
        "200":
          description: Success
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Delete a debug artifact
      description: Remove a saved debug artifact from the nmd storage.
      tags:
        - artifacts
      parameters:
        - in: query
          name: s3path
          description: S3 path for artifact
          required: true
          schema:
            type: string
          example: s3://boot-images/87cabdc2-8919-49a9-b22b-f3d5265cdabf/rootfs
      responses:
        "200":
          description: Success
        "401":
          $ref: "#/components/responses/Unauthorized"
  /sdf/dump/discover:
    get:
      summary: Retrieve dump target data
      description: >-
        Returns a resource collection of dump target that should be included in
        a system dump.
      tags:
        - sdf
      parameters:
        - in: query
          name: discovery_version
          description: Version of dump discovery response requested
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - in: query
          name: session_id
          description: Dump Session ID (informs service of associated dump session)
          required: true
          schema:
            type: string
            format: uuid
            pattern: >-
              ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        - in: query
          name: component_ids
          description: >-
            Comma separated list of component IDs, provides service with a
            filter.  The component_ids is a string with component type and value
            pairs for example xname:x0c0s34b0n0
          required: false
          schema:
            type: array
            items:
              type: string
              minItems: 1
              pattern: '^xname:[a-zA-Z0-9-_]+$'
        - in: query
          name: start_time
          description: >-
            If data is time bound, ISO 8601 formatted start time (inclusive),
            provides service with filter
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: end_time
          description: >-
            If data is time bound, ISO 8601 formatted end time (inclusive),
            provides service with filter
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: allow_unsafe
          description: Allow data collections that might disrupt the running system
          required: false
          schema:
            type: boolean
            format: boolean
            default: false
      responses:
        '200':
          $ref: '#/components/responses/DumpTargetResouceResponseArray'
        '400':
          $ref: '#/components/responses/BadRequest'
  '/sdf/dump/targets/{targetID}':
    parameters:
      - in: path
        name: targetID
        description: Unique ID of the Dump Target
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Retrieve dump target data by targetID
      description: >-
        Get the dump attributes and metadata specified by the targetID for
        polling the running dump status. The response contains the dump
        attributes and metadata for data download if the dump status is ready.
      tags:
        - sdf
      parameters:
        - in: query
          name: ftype
          description: File type of this dump target data
          schema:
            type: string
            example: ckdump
          required: true
      responses:
        '200':
          $ref: '#/components/responses/DumpTargetResouceResponse'
        '404':
          $ref: '#/components/responses/NotFound'
  '/status/{xname}':
    parameters:
      - in: path
        name: xname
        description: Unique identifier of the node that crashed
        required: true
        schema:
          type: string
    get:
      summary: Retrieve the status data of a crashed node
      description: Get the status data of a crashed node by xname
      tags:
        - crash status
      responses:
        '200':
          $ref: '#/components/responses/CrashStatusResponse'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update dump status data from the node
      description: Node sends dump status to this API for creating/updating a dump status.
      tags:
        - crash status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrashStatusData'
      responses:
        '200':
          $ref: '#/components/responses/CrashStatusResponse'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Delete crash status data
      description: >-
        Delete a node crash status data for a node that is crashed and running
        in dump-capture mode before reboot or halt kdump boot.
      tags:
        - crash status
      responses:
        '200':
          description: OK
  /healthz/live:
    get:
      summary: Retrieve Node Memory Dump Liveness Probe
      x-private: true
      x-openapi-router-controller: swagger_server.controllers.cli_hidden_controller
      operationId: liveness
      tags:
        - cli_hidden
      description: >-
        Liveness probe for NMD. This is used by Kubernetes to determine if NMD
        is responsive.
      responses:
        '200':
          description: NMD is responsive
          content:
            application/json: {}
        '500':
          description: NMD is not responsive
          content:
            application/json: {}
  /healthz/ready:
    get:
      summary: Retrieve Node Memory Dump Readiness Probe
      x-private: true
      x-openapi-router-controller: swagger_server.controllers.cli_hidden_controller
      operationId: readiness
      tags:
        - cli_hidden
      description: >-
        Readiness probe for NMD. This is used by Kubernetes to determine if NMD
        is ready to accept requests.
      responses:
        '200':
          description: NMD is ready to accept requests
          content:
            application/json: {}
        '500':
          description: NMD is not able to accept requests
          content:
            application/json: {}
tags:
  - name: dumps
    description: Interact with node memory dumps requests
  - name: sdf
    description: Interact with system dump service requests
  - name: crash status
    description: Interact with node crashed report requests
  - name: artifacts
    description: Debug artifacts for node memory dump analysis
components:
  responses:
    DumpInfo:
      description: Metadata for a specific dump request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestInfo'
    DumpInfoArray:
      description: >-
        Array of dump metadata for all requests, optionally filtered by node
        xname
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RequestInfo'
    CrashStatusResponse:
      description: Crash status response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CrashStatusData'
    DumpTargetResouceResponse:
      description: Resource definition for dump targets
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DumpTargetResource'
    DumpTargetResouceResponseArray:
      description: List of resource definition for dump targets
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/DumpTargetResource'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    NotFound:
      description: Specified resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    BadGateway:
      description: BadGateway
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    DeleteResponse:
      description: Delete dump by requestID response data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteResponseDetails'
  schemas:
    DumpInfo:
      type: object
      description: Node dump metadata
      properties:
        xname:
          type: string
          description: Unique identifier of the node that was dumped
          example: x0c0s34b0n0
        created:
          type: string
          description: Time when the dump was created
          example: 2018-07-28T03:26:01.234Z
          format: date-time
        requestid:
          type: string
          description: Request UUID for this dump
          example: 66dee4bf-e3f3-4769-8bd3-d56888e8b140
          format: uuid
          pattern: >-
            ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        sessionid:
          type: string
          description: SDF session UUID
          example: 66dee4bf-e3f3-4769-8bd3-d56888e8b140
          format: uuid
          pattern: >-
            ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        state:
          type: string
          description: >-
            The current state of the dump process on the node. The value can be
            either 'waiting', 'dump', 'done', 'error' or 'cancel'. If 'dump',
            then the dump is not finished yet and not ready for download.
          example: done
          enum:
            - waiting
            - dump
            - done
            - error
            - cancel
        image:
          type: string
          description: Rootfs image used for booting the node
          example: s3://boot-images/7a1f22c8-4aea-4f3c-8954-8aa1690f1e04/rootfs
        etag:
          type: string
          description: Rootfs image etag
          example: bd5860ebb278902f3d03b008032e564c-180
        objectkeys:
          description: An array of S3 key strings for downloading the dump files
          type: array
          items:
            type: string
            example: >-
              2019/08/22/12/66dee4bf-e3f3-4769-8bd3-d56888e8b140/x0c0s16b0n0/x0c0s16b0n0-66dee4bf-e3f3-4769-8bd3-d56888e8b140.ckdump
    RequestInfo:
      type: object
      description: Dump request metadata
      properties:
        requestID:
          type: string
          description: >-
            Request UUID for a dump. The request UUID is a dump request id that
            was set when when the dump was requested.
          example: 66dee4bf-e3f3-4769-8bd3-d56888e8b140
          format: uuid
          pattern: >-
            ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        info:
          $ref: '#/components/schemas/DumpInfo'
    DumpRequest:
      type: object
      description: Dump request data
      required:
        - xname
      properties:
        xname:
          type: string
          description: Unique identifier of the node to be dumped
        dumplevel:
          type: integer
          description: Dump level used to filter dump data.  Valid range is 0-31.
          example: 31
          default: 31
        sysrestart:
          type: string
          description: >-
            This option sets the node state after the dump completes. Halt stops
            execution of the kernel.  Continue in kdump mode - node is still
            down.
          example: halt
          default: halt
          enum:
            - halt
            - continue
        requestid:
          type: string
          description: >-
            Specify requestID when you wish to group multiple node dumps into
            one requestID instead of auto-generating a requestID for individual
            dumps.  To auto-generate a requestID for the dump, do not specify
            requestID.
          format: uuid
          pattern: >-
            ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          example: 66dee4bf-e3f3-4769-8bd3-d56888e8b140
    CrashStatusData:
      type: object
      description: Crashed node dump status data
      required:
        - timestamp
        - state
      properties:
        timestamp:
          type: string
          description: >-
            The crash timestamp that is reported by the node.  This value is
            used for generating the object key prefx to access data file.  The
            dump data object key format is
            /<year>/<month>/<date>/<hour>/<min>/<sec>/<request-uuid>/<xname>/. 
            In the dump storage, all dumps and logs are stored in this prefix.
          example: 2018-07-28T03:26:01.234Z
          format: date-time
        heartbeat:
          type: string
          description: >-
            Heartbeat timestamp. It is the timestamp of the last successful PUT
            status API call.
          example: 2018-07-28T03:26:01.234Z
          format: date-time
        hbrate:
          type: integer
          description: Heartbeat rate in seconds for crashed node calling PUT status API.
          example: 120
          default: 120
        port:
          type: string
          description: NMD ping port number
          example: "55555"
        requestID:
          type: string
          description: Dump request ID
          example: 66dee4bf-e3f3-4769-8bd3-d56888e8b140
          format: uuid
          pattern: >-
            ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        requested:
          type: string
          description: Dump request timestamp
          example: 2018-07-28T03:26:01.234Z
          format: date-time
        state:
          type: string
          description: 'Dump state: waiting, dump, done, error, or cancel'
          enum:
            - waiting
            - dump
            - done
            - error
            - cancel
          example: done
        progress:
          type: integer
          description: Dump progress percentage
          example: 100
          default: 0
        image:
          type: string
          description: Rootfs image used for booting the node
          example: s3://boot-images/7a1f22c8-4aea-4f3c-8954-8aa1690f1e04/rootfs
        etag:
          type: string
          description: Rootfs image etag
          example: bd5860ebb278902f3d03b008032e564c-180
        access_key:
          type: string
          description: S3 access key
          example: 3WVI4X5JMRY6RY72K6GG
        secret_key:
          type: string
          description: S3 secret key
          example: R7g6yEpawBCyPbUOOgNv5FvdPDcd4ebvOd3eywGe
        endpoint_url:
          type: string
          description: S3 endpoint url
          example: 'http://10.100.0.39:8080'
        bucketname:
          type: string
          description: S3 bucket name for the dump storage
          example: nmd-v2
    CallbackRegistrationAttributes:
      type: object
      description: Attributes for the DumpCallback Resource
      required:
        - description
        - url
        - namespace
      additionalProperties: false
      properties:
        description:
          type: string
          description: Description of the callback
          example: Dump callback for NMD service
          default: Dump callback for NMD service
        url:
          type: string
          description: Dump callback URL for NMD service
          example: /nmd/sdf/dump/discover
          default: /nmd/sdf/dump/discover
        namespace:
          type: string
          description: >-
            Hierarchical namespace used to categorized data obtained from the
            NMD by the SDF
          example: management.service.nmd
          default: management.service.nmd
        enabled:
          description: Determines if callback is enabled (performed) during dump operation
          format: boolean
          type: boolean
          default: true
    CallbackRegistrationData:
      type: object
      description: Contains a resource definition for a NMD dump callback
      additionalProperties: false
      required:
        - type
        - attributes
      properties:
        id:
          description: Unique ID of the callback
          example: 1ea6f69f-fa16-41be-9ec4-808b5bf4b2bc
          format: uuid
          pattern: >-
            ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          readOnly: true
          type: string
        type:
          description: Type of the Callback
          type: string
          enum:
            - dump_mapper
          example: dump_mapper
        attributes:
          $ref: '#/components/schemas/CallbackRegistrationAttributes'
        meta:
          type: object
          description: Service provided and consumed metadata that describes the callback
          example:
            tags:
              - an-example-service-tag
            service_id: example
            service_version: 1.0.0
    DumpTargetResourceAttributes:
      description: Attributes for the DumpTarget Resource
      additionalProperties: false
      required:
        - description
        - status
        - created
        - modified
        - url
      properties:
        description:
          description: Description of the dump target
          type: string
          example: Example dump target
        hypermedia_type:
          description: Type of hypermedia format
          example: none
          enum:
            - none
          default: none
        status:
          description: Status that represents a dump target's readiness for collection
          example: ready
          enum:
            - ready
            - spooling
            - dead
        created:
          description: Time the dump target was created
          example: 2018-07-28T03:26:01.234Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Time the dump target was modified
          example: 2018-07-28T03:26:01.234Z
          format: date-time
          readOnly: true
          type: string
        url:
          description: Uniform Resource Locator (URL) to dump collection (content)
          example: >-
            https://cray-s3/nmd-v2/2020/02/04/16/56/44/52da95c2-476f-11ea-9dcf-784f439ceaec/x0c0s16b0n0/x0c0s16b0n0-52da95c2-476f-11ea-9dcf-784f439ceaec.tar
          format: url
          type: string
        suggested_filename:
          description: >-
            Suggested, unqualified (no path) filename if the context is saved to
            a file
          type: string
          example: x0c0s16b0n0-52da95c2-476f-11ea-9dcf-784f439ceaec.tar
    DumpDataMeta:
      description: Metadata that describes the dump target
      required:
        - image
        - xname
        - uuid
        - timestamp
      properties:
        tags:
          type: array
          items:
            type: string
            example: kernel-memory-dump
        image:
          type: string
          description: Boot image used for booting the node
          example: s3://boot-images/7a1f22c8-4aea-4f3c-8954-8aa1690f1e04/rootfs
        xname:
          type: string
          description: Unique identifier of the node to be dumped
          example: x0c0s34b0n0
        uuid:
          type: string
          description: >-
            Dump request ID.  All the related dump files and logs have the same
            reqeuest ID.
          format: uuid
          example: 66dee4bf-e3f3-4769-8bd3-d56888e8b140
        timestamp:
          type: string
          description: Node crash timestamp
          format: date-time
          example: 2018-07-28T03:26:01.234Z
    DumpTargetResource:
      description: Contains a resource definition for a dump target
      additionalProperties: false
      required:
        - id
        - type
        - attributes
        - meta
      properties:
        id:
          description: Unique ID of the Dump Target
          example: aaaa2f49-aaaa-4617-b456-70c9bc8e3edb
          format: uuid
          pattern: >-
            ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          readOnly: true
          type: string
        type:
          description: Type of the Dump Target
          enum:
            - dump_target
          example: dump_target
          readOnly: true
        attributes:
          $ref: '#/components/schemas/DumpTargetResourceAttributes'
        meta:
          $ref: '#/components/schemas/DumpDataMeta'
    ProblemDetails:
      description: Error response for RFC 7807 problem details
      type: object
      properties:
        detail:
          description: >-
            Human-readable explanation specific to this occurrence of the
            problem. Focus on helping correct the problem, rather than giving
            debugging information.
          type: string
        errors:
          description: >-
            Object denoting field-specific errors. Only present on error
            responses when field input is specified for the request.
          type: object
        instance:
          description: >-
            Relative URI reference that identifies the specific occurrence of
            the problem
          format: uri
          type: string
        status:
          description: HTTP status code
          example: 400
          type: integer
        title:
          description: >-
            Short, human-readable summary of the problem, should not change by
            occurrence
          type: string
        type:
          default: 'about:blank'
          description: >-
            Relative URI reference to the type of problem which includes human
            readable documentation
          format: uri
          type: string
    DeleteResponseDetails:
      description: Delete dump objects response data from S3
      type: object

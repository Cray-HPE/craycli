openapi: 3.0.2
info:
  title: Rack Resiliency Service API
  version: 1.0.0
  description: >
    The Rack Resiliency service queries the Kubernetes cluster to provide zone information.
    The /zones endpoint returns an object mapping each zone to aggregated counts of
    master, worker, and storage nodes. The /zones/{zone_name} endpoint
    returns detailed node information for a specific zone.
servers:
  - url: 'https://api-gw-service-nmn.local/apis/rrs'
    description: The production RRS API server. Accessed from outside the mesh.
paths:
  /zones:
    get:
      summary: Get Aggregated Zones Information
      description: >
        Returns an object where each key is a zone name and the corresponding value contains:
        - no_of_masters: Number of master nodes in the zone.
        - no_of_workers: Number of worker nodes in the zone.
        - no_of_storage: Number of storage nodes in the zone.
      operationId: getZones
      responses:
        '200':
          description: Zones aggregated information.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ZoneSummary'
              examples:
                aggregated:
                  value:
                    zone1:
                      no_of_masters: 3
                      no_of_workers: 4
                      no_of_storage: 0
        '404':
          description: Zones not found.
  /zones/{zone_name}:
    get:
      summary: Get Detailed Zone Information
      description: >
        Returns detailed information for a specific zone including:
        - zone_name: The name of the zone.
        - no_of_active_nodes: Number of nodes in Ready state.
        - no_of_not_ready_nodes: Number of nodes not in Ready state.
        - no_of_nodes: Total number of nodes in the zone.
        - nodes: An object mapping node roles ("masters", "workers", "storage") to lists of node details.
      operationId: getZoneDetails
      parameters:
        - name: zone_name
          in: path
          required: true
          description: The name of the zone.
          schema:
            type: string
      responses:
        '200':
          description: Detailed information for the specified zone.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneDetail'
              examples:
                zoneDetail:
                  value:
                    zone_name: "zone1"
                    no_of_active_nodes: 0
                    no_of_not_ready_nodes: 0
                    no_of_nodes: 0
                    nodes:
                      masters: []
                      workers: []
                      storage: []
        '404':
          description: Zone not found.
components:
  schemas:
    ZoneSummary:
      type: object
      properties:
        no_of_masters:
          type: integer
          description: Number of master nodes.
        no_of_workers:
          type: integer
          description: Number of worker nodes.
        no_of_storage:
          type: integer
          description: Number of storage nodes.
    ZoneDetail:
      type: object
      properties:
        zone_name:
          type: string
          description: The name of the zone.
        no_of_active_nodes:
          type: integer
          description: Number of active (Ready) nodes.
        no_of_not_ready_nodes:
          type: integer
          description: Number of nodes not in Ready state.
        no_of_nodes:
          type: integer
          description: Total number of nodes in the zone.
        nodes:
          type: object
          description: Mapping of node roles to lists of node details.
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/Node'
    Node:
      type: object
      properties:
        name:
          type: string
          description: The node's name.
        status:
          type: string
          description: The node's status (e.g., Ready, NotReady).

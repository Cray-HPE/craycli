#
# MIT License
#
# (C) Copyright 2025 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# Rack Resiliency Service API Specification
openapi: 3.1.1
info:
  title: Rack Resiliency Service
  license:
    name: Hewlett Packard Enterprise Development LP
    url: http://www.hpe.com/
  version: 1.0.0
  description: >
    The Rack Resiliency Service (RRS) provides a set of APIs to manage Rack Level resiliency. It queries the Kubernetes cluster to provide aggregated zone
    information and detailed critical service status. It gathers node details across various zones
    and presents both high-level summaries and in-depth information for zones and critical services.

    ## Resources

      ### GET /zones
        Retrieve aggregated zone configuration showing Kubernetes_Topology_Zones and CEPH_Zones including:
          - Management_Master_Nodes
          - Management_Worker_Nodes
          - Management_Storage_Nodes

        Alternatively, if zones are not configured, one of the following informational messages is returned:
          - "No K8s Topology/Ceph Zones configured"
          - "No Ceph zones configured"
          - "No K8s topology zones configured"

      ### GET /zones/{zone_name}
        Retrieve detailed information for a specific zone including:
          - Zone_Name
          - Management_Master_Nodes
          - Management_Worker_Nodes
          - Management_Storage_Nodes
          - Node status and OSD information

      ### GET /criticalservices
        Retrieve a list of critical services grouped by namespace

      ### GET /criticalservices/{critical-service-name}
        Retrieve a summarized view of a specific critical service (without pod details). The response includes:
          - configured_instances
          - name
          - namespace
          - type

      ### PATCH /criticalservices
        Update the critical services configuration based on provided input. This endpoint
        modifies which critical services are monitored.

      ### GET /criticalservices/status
        Retrieve the status of all critical services including service status and distribution details.
        Each service object may include:
          - Service Name
          - status
          - balanced: indicates whether the service is properly distributed

      ### GET /criticalservices/status/{critical-service-name}
        Retrieve detailed status for a specific critical service including pod information.
        The response includes:
          - configured_instances
          - currently_running_instances
          - name
          - namespace
          - pods with name, node, status, and zone
          - type
          - status
          - balanced
servers:
  - url: 'https://api-gw-service-nmn.local/apis/rrs'
    description: The production RRS API server. Accessed from outside the mesh.
tags:
  - name: zones
    description: Retrieve aggregated and detailed information about zones including node types and counts.
  - name: criticalservices
    description: Interact with critical service configurations, summaries, and runtime statuses.
  - name: healthz
    description: Kubernetes health check endpoints for service readiness and liveness probes.
  - name: version
    description: API version information endpoint.
paths:
  /zones:
    get:
      summary: Get Zones Configuration
      tags:
        - zones
      description: >
        Returns an object with a property "Zones" that is an array of zones. Each zone contains:
          - Zone_Name: the name of the zone
          - Kubernetes_Topology_Zone: contains:
              Management_Master_Nodes: list of master node names
              Management_Worker_Nodes: list of worker node names
          - CEPH_Zone: contains:
              Management_Storage_Nodes: list of storage node names
      operationId: getZones
      responses:
        '200':
          description: Zones configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesResponse'
              examples:
                aggregated:
                  value:
                    Zones:
                      - Zone_Name: cscs-rack-x3001
                        Kubernetes_Topology_Zone:
                          Management_Master_Nodes:
                            - ncn-m002
                          Management_Worker_Nodes:
                            - ncn-w002
                            - ncn-w004
                        CEPH_Zone:
                          Management_Storage_Nodes:
                            - ncn-s004
                            - ncn-s003
                      - Zone_Name: cscs-rack-x3002
                        Kubernetes_Topology_Zone:
                          Management_Master_Nodes:
                            - ncn-m003
                          Management_Worker_Nodes:
                            - ncn-w003
                        CEPH_Zone:
                          Management_Storage_Nodes:
                            - ncn-s005
                            - ncn-s002
                      - Zone_Name: cscs-rack-x3000
                        Kubernetes_Topology_Zone:
                          Management_Master_Nodes:
                            - ncn-m001
                          Management_Worker_Nodes:
                            - ncn-w001
                            - ncn-w005
                        CEPH_Zone:
                          Management_Storage_Nodes:
                            - ncn-s001
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /zones/{zone_name}:
    get:
      summary: Get Detailed Zone Information
      tags:
        - zones
      description: >
        Returns detailed information for a specific zone.
        The response includes:
          - Zone_Name: the name of the zone
          - Management_Master: an object with Count, Type, and Nodes (array of node objects with name and status)
          - Management_Worker: an object with Count, Type, and Nodes (array of node objects with name and status)
          - Management_Storage: an object with Count, Type, and Nodes (array of node objects with name, status, and osds)
      operationId: getZoneDetails
      parameters:
        - name: zone_name
          in: path
          required: true
          description: The name of the zone
          schema:
            $ref: '#/components/schemas/ZoneName'
      responses:
        '200':
          description: Detailed zone information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneDetailResponse'
              examples:
                zoneDetail:
                  value:
                    Zone_Name: cscs-rack-x3001
                    Management_Master:
                      Count: 1
                      Type: Kubernetes_Topology_Zone
                      Nodes:
                        - name: ncn-m002
                          status: Ready
                    Management_Worker:
                      Count: 2
                      Type: Kubernetes_Topology_Zone
                      Nodes:
                        - name: ncn-w002
                          status: Ready
                        - name: ncn-w004
                          status: Ready
                    Management_Storage:
                      Count: 2
                      Type: CEPH_Zone
                      Nodes:
                        - name: ncn-s004
                          status: NotReady
                          osds:
                            down:
                              - osd.0
                              - osd.5
                        - name: ncn-s003
                          status: Ready
                          osds:
                            up:
                              - osd.4
                              - osd.9
                              - osd.12
                              - osd.15
                              - osd.18
                              - osd.21
                              - osd.24
                              - osd.27
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /criticalservices:
    get:
      summary: Get Critical Services
      tags:
        - criticalservices
      description: >
        Returns a list of critical services grouped by namespace. The response includes
        a critical_services property containing namespaces with arrays of service objects
        including:
          - name: the name of the service
          - type: the service type (Deployment, StatefulSet)
      operationId: getCriticalServices
      responses:
        '200':
          description: List of critical services grouped by namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriticalServicesListSchema'
              examples:
                criticalServices:
                  value:
                    critical_services:
                      namespace:
                        services:
                          - name: cray-dns-powerdns
                            type: Deployment
                          - name: cray-hbtd
                            type: Deployment
                          - name: cray-hmnfd
                            type: Deployment
                          - name: cray-keycloak
                            type: StatefulSet
                          - name: cray-sls-postgres
                            type: StatefulSet
                        spire:
                          - name: cray-spire-server
                            type: StatefulSet
                        rack-resiliency:
                          - name: k8s-zone-api
                            type: Deployment
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      summary: Update Critical Services ConfigMap
      tags:
        - criticalservices
      operationId: patchCriticalServices
      description: >
        Updates the critical services configuration. The request body should contain
        critical services mapped by service name to their configuration details.
      requestBody:
        description: Critical services configuration update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriticalServiceCmStaticType'
      responses:
        '200':
          description: Critical Services Updated Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriticalServiceUpdateSchema'
              examples:
                patchResponse:
                  value:
                    Update: Successful
                    Successfully_Added_Services:
                      - k8s-zone-api
                      - kube-multus-ds
                    Already_Existing_Services:
                      - coredns
                      - kube-proxy
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /criticalservices/{critical_service_name}:
    get:
      summary: Get Critical Service Details (Summarized)
      tags:
        - criticalservices
      description: >
        Returns a summarized view of a specific critical service.
        The response includes:
          - name: string
          - namespace: string
          - type: string
          - configured_instances: number
      operationId: getCriticalServiceDetails
      parameters:
        - $ref: '#/components/parameters/ServiceNamePathParam'
      responses:
        '200':
          description: Summarized critical service information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriticalServiceDescribeSchema'
              examples:
                criticalServiceDetail:
                  value:
                    critical_service:
                      name: cray-hbtd
                      namespace: services
                      type: Deployment
                      configured_instances: 3
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /criticalservices/status:
    get:
      summary: Get Critical Services Status
      tags:
        - criticalservices
      description: >
        Returns the status of all critical services with distribution details.
        Response provides namespaces containing services with their status information including:
          - name: the name of the critical service
          - type: the service type (Deployment, StatefulSet)
          - status: the current status (e.g., Configured, PartiallyConfigured)
          - balanced: indicates whether the service is properly distributed across zones
      operationId: getAllCriticalServicesStatus
      responses:
        '200':
          description: Critical services status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriticalServicesStatusListSchema'
              examples:
                criticalServicesStatusExample:
                  value:
                    critical_services:
                      namespace:
                        services:
                          - name: cray-dns-powerdns
                            type: Deployment
                            status: Configured
                            balanced: "true"
                          - name: cray-hbtd
                            type: Deployment
                            status: Configured
                            balanced: "true"
                          - name: cray-hmnfd
                            type: Deployment
                            status: Configured
                            balanced: "true"
                          - name: cray-keycloak
                            type: StatefulSet
                            status: Configured
                            balanced: "true"
                          - name: cray-sls-postgres
                            type: StatefulSet
                            status: PartiallyConfigured
                            balanced: "true"
                        spire:
                          - name: cray-spire-server
                            type: StatefulSet
                            status: Configured
                            balanced: "true"
                        kube-system:
                          - name: coredns
                            type: Deployment
                            status: Configured
                            balanced: "true"
                        rack-resiliency:
                          - name: k8s-zone-api
                            type: Deployment
                            status: Configured
                            balanced: "true"
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /criticalservices/status/{critical_service_name}:
    get:
      summary: Get Critical Service Status by Name (Detailed)
      tags:
        - criticalservices
      description: >
        Returns detailed status for a specific critical service, including pod information.
        The response includes:
          - name: string
          - namespace: string
          - type: string
          - status: string
          - balanced: string
          - configured_instances: number
          - currently_running_instances: number
          - pods: array of pod objects with name, node, status, zone
      operationId: getCriticalServiceStatus
      parameters:
        - $ref: '#/components/parameters/ServiceNamePathParam'
      responses:
        '200':
          description: Detailed critical service status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriticalServiceStatusDescribeSchema'
              examples:
                criticalServiceStatusExample:
                  value:
                    critical_service:
                      name: cray-hbtd
                      namespace: services
                      type: Deployment
                      status: Configured
                      balanced: "true"
                      configured_instances: 3
                      currently_running_instances: 3
                      pods:
                        - name: cray-hbtd-6cbdbd6955-5xlfg
                          status: Running
                          node: ncn-w002
                          zone: cscs-rack-x3001
                        - name: cray-hbtd-6cbdbd6955-jwzgq
                          status: Running
                          node: ncn-w003
                          zone: cscs-rack-x3002
                        - name: cray-hbtd-6cbdbd6955-k6pkt
                          status: Running
                          node: ncn-w001
                          zone: cscs-rack-x3000
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /healthz/ready:
    get:
      summary: Retrieve RRS Readiness Probe
      operationId: get_healthz_ready
      tags:
        - healthz
        - cli_ignore
      description: >-
        Readiness probe for RRS. This is used by Kubernetes to determine if RRS
        is ready to accept requests
      responses:
        200:
          description: RRS is ready to accept requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyDict'
        500:
          description: RRS is not able to accept requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyDict'
  /healthz/live:
    get:
      summary: Retrieve RRS Liveness Probe
      operationId: get_healthz_live
      tags:
        - healthz
        - cli_ignore
      description: >-
        Liveness probe for RRS. This is used by Kubernetes to determine if RRS
        is responsive
      responses:
        200:
          description: RRS is responsive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyDict'
        500:
          description: RRS is not responsive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyDict'
  /version:
    get:
      summary: Get RRS version
      tags:
        - version
        - cli_hidden
      description: Retrieve the version of the RRS Service
      operationId: getVersion
      responses:
        '200':
          description: RRS Version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionSchema'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    ZoneName:
      type: string
      description: Unique identifier name for the zone
      minLength: 1
      maxLength: 1000
    ZonesResponse:
      type: object
      required: [Zones]
      description: Response containing all configured zones in the system with their associated node configurations
      properties:
        Zones:
          type: array
          description: Array of zone configurations showing Kubernetes topology and CEPH zone details
          items:
            $ref: '#/components/schemas/ZoneItemSchema'
    ZoneItemSchema:
      type: object
      required:
        - Zone_Name
      description: Configuration details for a single zone including Kubernetes topology and CEPH zone information
      properties:
        Zone_Name:
          $ref: '#/components/schemas/ZoneName'
        Kubernetes_Topology_Zone:
          $ref: '#/components/schemas/KubernetesTopologyZoneSchema'
        CEPH_Zone:
          $ref: '#/components/schemas/CephZoneSchema'
    KubernetesTopologyZoneSchema:
      type: object
      description: Kubernetes topology zone configuration containing master and worker node assignments
      properties:
        Management_Master_Nodes:
          type: array
          description: List of Kubernetes master node names assigned to this zone
          items:
            type: string
        Management_Worker_Nodes:
          type: array
          description: List of Kubernetes worker node names assigned to this zone
          items:
            type: string
    CephZoneSchema:
      type: object
      required: [Management_Storage_Nodes]
      description: CEPH zone configuration containing storage node assignments
      properties:
        Management_Storage_Nodes:
          type: array
          description: List of CEPH storage node names assigned to this zone
          items:
            type: string
    ZoneDetailResponse:
      type: object
      required:
        - Zone_Name
      description: Detailed information about a specific zone including node counts, types, and individual node status
      properties:
        Zone_Name:
          $ref: '#/components/schemas/ZoneName'
        Management_Master:
          $ref: '#/components/schemas/ManagementKubernetesSchema'
        Management_Worker:
          $ref: '#/components/schemas/ManagementKubernetesSchema'
        Management_Storage:
          $ref: '#/components/schemas/ManagementStorageSchema'
    ManagementKubernetesSchema:
      type: object
      required:
        - Count
        - Type
        - Nodes
      description: Management information for Kubernetes nodes (master or worker) including count and individual node details
      properties:
        Count:
          type: integer
          minimum: 1
          description: Total number of nodes of this type in the zone
        Type:
          type: string
          description: Type classification indicating this is a Kubernetes topology zone
          enum:
            - "Kubernetes_Topology_Zone"
        Nodes:
          type: array
          description: Detailed information about each individual node
          items:
            $ref: '#/components/schemas/NodeSchema'
    ManagementStorageSchema:
      type: object
      required:
        - Count
        - Type
        - Nodes
      description: Management information for CEPH storage nodes including count and individual node details with OSD information
      properties:
        Count:
          type: integer
          minimum: 1
          description: Total number of storage nodes in the zone
        Type:
          type: string
          description: Type classification indicating this is a CEPH zone
          enum:
            - "CEPH_Zone"
        Nodes:
          type: array
          description: Detailed information about each storage node including OSD status
          items:
            $ref: '#/components/schemas/StorageNodeSchema'
    NodeSchema:
      type: object
      required: [name, status]
      description: Basic node information including name and operational status
      properties:
        name:
          type: string
          description: Unique name identifier for the node
        status:
          type: string
          description: Current operational status of the node
          enum:
            - Ready
            - NotReady
            - Unknown
    StorageNodeSchema:
      type: object
      required: [name, status, osds]
      description: Storage node information including CEPH OSD (Object Storage Daemon) status details
      properties:
        name:
          type: string
          description: Unique name identifier for the storage node
        status:
          type: string
          description: Current operational status of the storage node
          enum:
            - Ready
            - NotReady
        osds:
          $ref: '#/components/schemas/OSDStatesSchema'
    OSDStatesSchema:
      type: object
      description: Object Storage Daemon status information showing which OSDs are operational and non-operational
      properties:
        up:
          type: array
          description: List of OSD identifiers that are currently operational
          items:
            type: string
        down:
          type: array
          description: List of OSD identifiers that are currently non-operational
          items:
            type: string
    NamespaceName:
      type: string
      description: Kubernetes namespace name where a service is deployed
      examples:
        - "rack-resiliency"
        - "services"
      # Legal Kubernetes namespace names are 1-63 characters
      minLength: 1
      maxLength: 63
    ServiceName:
      type: string
      description: Name of the critical service
      examples:
        - "cray-dns-powerdns"
        - "cray-keycloak"
      # Legal Kubernetes service names are 1-253 characters
      maxLength: 253
      minLength: 1
    ServiceBalanced:
      type: string
      description: Indicates whether a service is properly distributed across zones for high availability
      enum:
        - "true"
        - "false"
        - "NA"
    ServiceStatus:
      type: string
      description: Current operational status of a critical service indicating its configuration and runtime state
      enum:
        - error
        - Configured
        - PartiallyConfigured
        - NotConfigured
        - Running
        - Unconfigured
    ServiceType:
      type: string
      description: Kubernetes resource type of the service
      enum:
        - Deployment
        - StatefulSet
    CriticalServicesListSchema:
      type: object
      required: [critical_services]
      description: Response containing all critical services organized by namespace
      properties:
        critical_services:
          type: object
          required: [namespace]
          description: Critical services grouped by their Kubernetes namespaces
          properties:
            namespace:
              type: object
              description: Mapping of namespace names to their contained critical services
              additionalProperties:
                type: array
                items:
                  $ref: '#/components/schemas/CriticalServiceItemSchema'
              propertyNames:
                $ref: '#/components/schemas/NamespaceName'
    CriticalServiceItemSchema:
      type: object
      required:
        - name
        - type
      description: Basic information about a critical service including its name and Kubernetes resource type
      properties:
        name:
          $ref: '#/components/schemas/ServiceName'
        type:
          $ref: '#/components/schemas/ServiceType'
    CriticalServiceCmStaticType:
      type: object
      description: Configuration payload for updating critical services in the system. Contains service definitions that need to be monitored for resiliency
      properties:
        critical_services:
          type: object
          description: Mapping from service names to their configuration details for monitoring
          additionalProperties:
            $ref: '#/components/schemas/CriticalServiceCmStaticSchema'
          maxProperties: 1000
          propertyNames:
            $ref: '#/components/schemas/NamespaceName'
      additionalProperties: false
      required: [critical_services]
    CriticalServiceCmStaticSchema:
      type: object
      description: Static configuration details for a critical service that needs to be monitored
      properties:
        namespace:
          $ref: '#/components/schemas/NamespaceName'
        type:
          $ref: '#/components/schemas/ServiceType'
      additionalProperties: false
      required: [namespace, type]

    CriticalServiceUpdateSchema:
      type: object
      required: [Update, Successfully_Added_Services, Already_Existing_Services]
      description: Response indicating the result of updating critical services configuration
      properties:
        Update:
          type: string
          description: Overall status of the update operation
          enum: ["Successful", "Services Already Exist"]
          examples: ["Successful", "Services Already Exist"]
        Successfully_Added_Services:
          type: array
          description: List of service names that were successfully added to the configuration
          items:
            $ref: '#/components/schemas/ServiceName'
        Already_Existing_Services:
          type: array
          description: List of service names that were already present in the configuration
          items:
            $ref: '#/components/schemas/ServiceName'
    CriticalServiceDescribeSchema:
      type: object
      required: [critical_service]
      description: Summarized view of a critical service without runtime details
      properties:
        critical_service:
          type: object
          required: [name, namespace, type, configured_instances]
          description: Basic configuration information about the critical service
          properties:
            name:
              $ref: '#/components/schemas/ServiceName'
            namespace:
              $ref: '#/components/schemas/NamespaceName'
            type:
              $ref: '#/components/schemas/ServiceType'
            configured_instances:
              types:
                - "integer"
                - "null"
              minimum: 1
              description: Number of instances configured for this service (replicas for Deployments/StatefulSets)
    CriticalServiceStatusDescribeSchema:
      type: object
      required: [critical_service]
      description: Detailed status information for a critical service including runtime details and pod information
      properties:
        critical_service:
          type: object
          required: [name, namespace, type, status, balanced, configured_instances, currently_running_instances, pods]
          description: Complete status information including configuration and runtime details
          properties:
            name:
              $ref: '#/components/schemas/ServiceName'
            namespace:
              $ref: '#/components/schemas/NamespaceName'
            type:
              $ref: '#/components/schemas/ServiceType'
            status:
              $ref: '#/components/schemas/ServiceStatus'
            balanced:
              $ref: '#/components/schemas/ServiceBalanced'
            configured_instances:
              types:
                - "integer"
                - "null"
              minimum: 1
              description: Number of instances configured for this service
            currently_running_instances:
              types:
                - "integer"
                - "null"
              minimum: 0
              description: Number of instances currently running and healthy
            pods:
              type: array
              description: Detailed information about each pod instance of this service
              items:
                $ref: '#/components/schemas/PodSchema'
    PodSchema:
      type: object
      required: [name, node, status, zone]
      description: Information about an individual pod instance including its location and status
      properties:
        name:
          type: string
          description: Unique name of the pod instance
        node:
          type: string
          description: Kubernetes node where the pod is scheduled to run
        status:
          type: string
          description: Current operational status of the pod
          enum:
            - Running
            - Pending
            - Failed
            - Terminating
        zone:
          type: string
          description: Zone where the pod is located based on its assigned node
    CriticalServicesStatusListSchema:
      type: object
      description: Status overview of all critical services organized by namespace, showing their operational state and distribution
      required: [critical_services]
      properties:
        critical_services:
          type: object
          description: Critical services grouped by namespace with their status information
          required: [namespace]
          properties:
            namespace:
              type: object
              description: Mapping of namespace names to their contained critical services with status
              additionalProperties:
                type: array
                items:
                  $ref: '#/components/schemas/CriticalServiceStatusItemSchema'
              propertyNames:
                $ref: '#/components/schemas/NamespaceName'
    CriticalServiceStatusItemSchema:
      type: object
      description: Status summary for a critical service showing its operational state and distribution across zones
      required: [name, type, status, balanced]
      properties:
        name:
          $ref: '#/components/schemas/ServiceName'
        type:
          $ref: '#/components/schemas/ServiceType'
        status:
          $ref: '#/components/schemas/ServiceStatus'
        balanced:
          $ref: '#/components/schemas/ServiceBalanced'
    VersionSchema:
      type: object
      required: [version]
      description: Version information for the Rack Resiliency Service
      properties:
        version:
          type: string
          description: The current version of the RRS Service
          examples:
            - "1.0.0"    
    ProblemDetails:
      description: An error response for RFC 7807 problem details.
      type: object
      properties:
        detail:
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem. Focus on helping correct the problem, rather than giving
            debugging information.

          type: string
        errors:
          description: An object denoting field-specific errors. Only present on error responses when field input is specified for the request.
          type: object
        instance:
          description: A relative URI reference that identifies the specific occurrence of the problem
          format: uri
          type: string
        status:
          description: HTTP status code
          examples:
            - 400
          type: integer
        title:
          description: Short, human-readable summary of the problem, should not change by occurrence.
          type: string
        type:
          default: 'about:blank'
          description: Relative URI reference to the type of problem which includes human-readable documentation.
          format: uri
          type: string
    EmptyDict:
      type: object
      description: Empty response object typically returned by health check endpoints to indicate successful operation
      additionalProperties: false
  parameters:
    ServiceNamePathParam:
      name: critical_service_name
      in: path
      required: true
      description: The name of the critical service
      schema:
        $ref: '#/components/schemas/ServiceName'
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'

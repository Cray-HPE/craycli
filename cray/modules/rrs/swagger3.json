{
    "openapi": "3.0.3",
    "info": {
        "title": "Rack Resiliency Service",
        "license": {
            "name": "Hewlett Packard Enterprise Development LP",
            "url": "http://www.hpe.com/"
        },
        "version": "1.0.0",
        "description": "The Rack Resiliency Service (RRS) provides a set of APIs to manage Rack Level resiliency. It queries the Kubernetes cluster to provide aggregated zone information and detailed critical service status. It gathers node details across various zones and presents both high-level summaries and in-depth information for zones and critical services.\n## Resources\n\n  ### GET /zones\n    Retrieve aggregated zone configuration showing Kubernetes_Topology_Zones and CEPH_Zones including:\n      - Management_Master_Nodes\n      - Management_Worker_Nodes\n      - Management_Storage_Nodes\n\n    Alternatively, if zones are not configured, one of the following informational messages is returned:\n      - \"No K8s Topology/Ceph Zones configured\"\n      - \"No Ceph zones configured\"\n      - \"No K8s topology zones configured\"\n\n  ### GET /zones/{zone_name}\n    Retrieve detailed information for a specific zone including:\n      - Zone_Name\n      - Management_Master_Nodes\n      - Management_Worker_Nodes\n      - Management_Storage_Nodes\n      - Node status and OSD information\n\n  ### GET /criticalservices\n    Retrieve a list of critical services grouped by namespace\n\n  ### GET /criticalservices/{critical-service-name}\n    Retrieve a summarized view of a specific critical service (without pod details). The response includes:\n      - Configured Instances\n      - Name\n      - Namespace\n      - Type\n\n  ### PATCH /criticalservices\n    Update the critical services configuration based on a provided file input. This endpoint allows\n    you to modify how critical services are configured in the system\n\n  ### GET /criticalservices/status\n    Retrieve the status of all critical services including service status and distribution details.\n    Each service object may include:\n      - Service Name\n      - Status\n      - Balanced: indicates whether the service is properly distributed\n\n  ### GET /criticalservices/status/{critical-service-name}\n    Retrieve detailed status for a specific critical service including pod information.\n    The response includes:\n      - Configured Instances\n      - Currently Running Instances\n      - Name\n      - Namespace\n      - Pods with Name, Node, Status, and Zone\n      - Type\n      - Status\n      - Balanced\n"
    },
    "servers": [
        {
            "url": "https://api-gw-service-nmn.local/apis/rrs",
            "description": "The production RRS API server. Accessed from outside the mesh."
        }
    ],
    "tags": [
        {
            "name": "zones",
            "description": "Retrieve aggregated and detailed information about zones including node types and counts."
        },
        {
            "name": "criticalservices",
            "description": "Interact with critical service configurations, summaries, and runtime statuses."
        },
        {
            "name": "healthz",
            "description": "Kubernetes health check endpoints for service readiness and liveness probes."
        },
        {
            "name": "version",
            "description": "API version information endpoint."
        }
    ],
    "paths": {
        "/zones": {
            "get": {
                "summary": "Get Zones Configuration",
                "tags": [
                    "zones"
                ],
                "description": "Returns an object with a property \"Zones\" that is an array of zones. Each zone contains:\n  - Zone_Name: the name of the zone\n  - Kubernetes_Topology_Zone: contains:\n      Management_Master_Nodes: list of master node names\n      Management_Worker_Nodes: list of worker node names\n  - CEPH_Zone: contains:\n      Management_Storage_Nodes: list of storage node names\n",
                "operationId": "getZones",
                "responses": {
                    "200": {
                        "description": "Zones configuration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZonesResponse"
                                },
                                "examples": {
                                    "aggregated": {
                                        "value": {
                                            "Zones": [
                                                {
                                                    "Zone_Name": "cscs-rack-x3001",
                                                    "Kubernetes_Topology_Zone": {
                                                        "Management_Master_Nodes": [
                                                            "ncn-m002"
                                                        ],
                                                        "Management_Worker_Nodes": [
                                                            "ncn-w002",
                                                            "ncn-w004"
                                                        ]
                                                    },
                                                    "CEPH_Zone": {
                                                        "Management_Storage_Nodes": [
                                                            "ncn-s004",
                                                            "ncn-s003"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "Zone_Name": "cscs-rack-x3002",
                                                    "Kubernetes_Topology_Zone": {
                                                        "Management_Master_Nodes": [
                                                            "ncn-m003"
                                                        ],
                                                        "Management_Worker_Nodes": [
                                                            "ncn-w003"
                                                        ]
                                                    },
                                                    "CEPH_Zone": {
                                                        "Management_Storage_Nodes": [
                                                            "ncn-s005",
                                                            "ncn-s002"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "Zone_Name": "cscs-rack-x3000",
                                                    "Kubernetes_Topology_Zone": {
                                                        "Management_Master_Nodes": [
                                                            "ncn-m001"
                                                        ],
                                                        "Management_Worker_Nodes": [
                                                            "ncn-w001",
                                                            "ncn-w005"
                                                        ]
                                                    },
                                                    "CEPH_Zone": {
                                                        "Management_Storage_Nodes": [
                                                            "ncn-s001"
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Zones not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/NotFound"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/zones/{zone_name}": {
            "get": {
                "summary": "Get Detailed Zone Information",
                "tags": [
                    "zones"
                ],
                "description": "Returns detailed information for a specific zone. The response includes:\n  - Zone_Name: the name of the zone\n  - Management_Master: an object with Count, Type, and Nodes (array of node objects with Name and Status)\n  - Management_Worker: an object with Count, Type, and Nodes (array of node objects with Name and Status)\n  - Management_Storage: an object with Count, Type, and Nodes (array of node objects with Name, Status, and OSDs)\n",
                "operationId": "getZoneDetails",
                "parameters": [
                    {
                        "name": "zone_name",
                        "in": "path",
                        "required": true,
                        "description": "The name of the zone",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detailed zone information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZoneDetailResponse"
                                },
                                "examples": {
                                    "zoneDetail": {
                                        "value": {
                                            "Zone_Name": "cscs-rack-x3001",
                                            "Management_Master": {
                                                "Count": 1,
                                                "Type": "Kubernetes_Topology_Zone",
                                                "Nodes": [
                                                    {
                                                        "name": "ncn-m002",
                                                        "status": "Ready"
                                                    }
                                                ]
                                            },
                                            "Management_Worker": {
                                                "Count": 2,
                                                "Type": "Kubernetes_Topology_Zone",
                                                "Nodes": [
                                                    {
                                                        "name": "ncn-w002",
                                                        "status": "Ready"
                                                    },
                                                    {
                                                        "name": "ncn-w004",
                                                        "status": "Ready"
                                                    }
                                                ]
                                            },
                                            "Management_Storage": {
                                                "Count": 2,
                                                "Type": "CEPH_Zone",
                                                "Nodes": [
                                                    {
                                                        "name": "ncn-s004",
                                                        "status": "NotReady",
                                                        "osds": {
                                                            "down": [
                                                                "osd.0",
                                                                "osd.5"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "name": "ncn-s003",
                                                        "status": "Ready",
                                                        "osds": {
                                                            "up": [
                                                                "osd.4",
                                                                "osd.9",
                                                                "osd.12",
                                                                "osd.15",
                                                                "osd.18",
                                                                "osd.21",
                                                                "osd.24",
                                                                "osd.27"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Zone not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/NotFound"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/criticalservices": {
            "get": {
                "summary": "Get Critical Services",
                "tags": [
                    "criticalservices"
                ],
                "description": "Returns a list of critical services grouped by namespace. The response includes a critical_services property containing namespaces with arrays of service objects including:\n  - name: the name of the service\n  - type: the service type (Deployment, StatefulSet, DaemonSet)\n",
                "operationId": "getCriticalServices",
                "responses": {
                    "200": {
                        "description": "List of critical services grouped by namespace",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalServicesListSchema"
                                },
                                "examples": {
                                    "criticalServices": {
                                        "value": {
                                            "critical_services": {
                                                "namespace": {
                                                    "services": [
                                                        {
                                                            "name": "cray-dns-powerdns",
                                                            "type": "Deployment"
                                                        },
                                                        {
                                                            "name": "cray-hbtd",
                                                            "type": "Deployment"
                                                        },
                                                        {
                                                            "name": "cray-hmnfd",
                                                            "type": "Deployment"
                                                        },
                                                        {
                                                            "name": "cray-keycloak",
                                                            "type": "StatefulSet"
                                                        },
                                                        {
                                                            "name": "cray-sls-postgres",
                                                            "type": "StatefulSet"
                                                        }
                                                    ],
                                                    "spire": [
                                                        {
                                                            "name": "cray-spire-server",
                                                            "type": "StatefulSet"
                                                        }
                                                    ],
                                                    "rack-resiliency": [
                                                        {
                                                            "name": "k8s-zone-api",
                                                            "type": "Deployment"
                                                        }
                                                    ],
                                                    "kube-system": [
                                                        {
                                                            "name": "kube-multus-ds",
                                                            "type": "DaemonSet"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Critical services not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/NotFound"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/InternalServerError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Critical Services ConfigMap",
                "tags": [
                    "criticalservices"
                ],
                "operationId": "patchCriticalServices",
                "description": "Updates the critical services configuration. The request body should contain critical services mapped by service name to their configuration details.\n",
                "requestBody": {
                    "description": "Critical services configuration update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalServicesPatch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Critical Services Updated Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalServiceUpdateSchema"
                                },
                                "examples": {
                                    "patchResponse": {
                                        "value": {
                                            "Update": "Successful",
                                            "Successfully_Added_Services": [
                                                "k8s-zone-api",
                                                "kube-multus-ds"
                                            ],
                                            "Already_Existing_Services": [
                                                "coredns",
                                                "kube-proxy"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid data provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/BadRequest"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Critical services not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/NotFound"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/criticalservices/{critical_service_name}": {
            "get": {
                "summary": "Get Critical Service Details (Summarized)",
                "tags": [
                    "criticalservices"
                ],
                "description": "Returns a summarized view of a specific critical service. The response includes:\n  - Name: string\n  - Namespace: string\n  - Type: string\n  - Configured Instances: number\n",
                "operationId": "getCriticalServiceDetails",
                "parameters": [
                    {
                        "name": "critical_service_name",
                        "in": "path",
                        "required": true,
                        "description": "The name of the critical service",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Summarized critical service information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalServiceDescribeSchema"
                                },
                                "examples": {
                                    "criticalServiceDetail": {
                                        "value": {
                                            "Critical_Service": {
                                                "Name": "cray-hbtd",
                                                "Namespace": "services",
                                                "Type": "Deployment",
                                                "Configured_Instances": 3
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Critical service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/NotFound"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/criticalservices/status": {
            "get": {
                "summary": "Get Critical Services Status",
                "tags": [
                    "criticalservices"
                ],
                "description": "Returns the status of all critical services with distribution details. Response provides namespaces containing services with their status information including:\n  - name: the name of the critical service\n  - type: the service type (Deployment, StatefulSet, DaemonSet)\n  - status: the current status (e.g., Configured, PartiallyConfigured)\n  - balanced: indicates whether the service is properly distributed across zones\n",
                "operationId": "getAllCriticalServicesStatus",
                "responses": {
                    "200": {
                        "description": "Critical services status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalServicesStatusResponse"
                                },
                                "examples": {
                                    "criticalServicesStatusExample": {
                                        "value": {
                                            "critical_services": {
                                                "namespace": {
                                                    "services": [
                                                        {
                                                            "name": "cray-dns-powerdns",
                                                            "type": "Deployment",
                                                            "status": "Configured",
                                                            "balanced": "true"
                                                        },
                                                        {
                                                            "name": "cray-hbtd",
                                                            "type": "Deployment",
                                                            "status": "Configured",
                                                            "balanced": "true"
                                                        },
                                                        {
                                                            "name": "cray-hmnfd",
                                                            "type": "Deployment",
                                                            "status": "Configured",
                                                            "balanced": "true"
                                                        },
                                                        {
                                                            "name": "cray-keycloak",
                                                            "type": "StatefulSet",
                                                            "status": "Configured",
                                                            "balanced": "true"
                                                        },
                                                        {
                                                            "name": "cray-sls-postgres",
                                                            "type": "StatefulSet",
                                                            "status": "PartiallyConfigured",
                                                            "balanced": "true"
                                                        }
                                                    ],
                                                    "spire": [
                                                        {
                                                            "name": "cray-spire-server",
                                                            "type": "StatefulSet",
                                                            "status": "Configured",
                                                            "balanced": "true"
                                                        }
                                                    ],
                                                    "kube-system": [
                                                        {
                                                            "name": "coredns",
                                                            "type": "Deployment",
                                                            "status": "Configured",
                                                            "balanced": "true"
                                                        },
                                                        {
                                                            "name": "kube-multus-ds",
                                                            "type": "DaemonSet",
                                                            "status": "Configured",
                                                            "balanced": "true"
                                                        }
                                                    ],
                                                    "rack-resiliency": [
                                                        {
                                                            "name": "k8s-zone-api",
                                                            "type": "Deployment",
                                                            "status": "Configured",
                                                            "balanced": "true"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Critical services status not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/NotFound"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/criticalservices/status/{critical_service_name}": {
            "get": {
                "summary": "Get Critical Service Status by Name (Detailed)",
                "tags": [
                    "criticalservices"
                ],
                "description": "Returns detailed status for a specific critical service, including pod information. The response includes:\n  - Name: string\n  - Namespace: string\n  - Type: string\n  - Status: string\n  - Balanced: string\n  - Configured Instances: number\n  - Currently Running Instances: number\n  - Pods: array of pod objects with Name, Node, Status, Zone\n",
                "operationId": "getCriticalServiceStatus",
                "parameters": [
                    {
                        "name": "critical_service_name",
                        "in": "path",
                        "required": true,
                        "description": "The name of the critical service",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detailed critical service status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalServiceStatusDescribeSchema"
                                },
                                "examples": {
                                    "criticalServiceStatusExample": {
                                        "value": {
                                            "Critical_Service": {
                                                "Name": "cray-hbtd",
                                                "Namespace": "services",
                                                "Type": "Deployment",
                                                "Status": "Configured",
                                                "Balanced": "true",
                                                "Configured_Instances": 3,
                                                "Currently_Running_Instances": 3,
                                                "Pods": [
                                                    {
                                                        "Name": "cray-hbtd-6cbdbd6955-5xlfg",
                                                        "Status": "Running",
                                                        "Node": "ncn-w002",
                                                        "Zone": "cscs-rack-x3001"
                                                    },
                                                    {
                                                        "Name": "cray-hbtd-6cbdbd6955-jwzgq",
                                                        "Status": "Running",
                                                        "Node": "ncn-w003",
                                                        "Zone": "cscs-rack-x3002"
                                                    },
                                                    {
                                                        "Name": "cray-hbtd-6cbdbd6955-k6pkt",
                                                        "Status": "Running",
                                                        "Node": "ncn-w001",
                                                        "Zone": "cscs-rack-x3000"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Critical service status not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/NotFound"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/healthz/ready": {
            "get": {
                "summary": "Retrieve RRS Readiness Probe",
                "operationId": "get_healthz_ready",
                "tags": [
                    "healthz",
                    "cli_ignore"
                ],
                "description": "Readiness probe for RRS. This is used by Kubernetes to determine if RRS is ready to accept requests",
                "responses": {
                    "200": {
                        "description": "RRS is ready to accept requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmptyDict"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "RRS is not able to accept requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmptyDict"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/healthz/live": {
            "get": {
                "summary": "Retrieve RRS Liveness Probe",
                "operationId": "get_healthz_live",
                "tags": [
                    "healthz",
                    "cli_ignore"
                ],
                "description": "Liveness probe for RRS. This is used by Kubernetes to determine if RRS is responsive",
                "responses": {
                    "200": {
                        "description": "RRS is responsive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmptyDict"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "RRS is not responsive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmptyDict"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "summary": "Get RRS version",
                "tags": [
                    "version",
                    "cli_hidden"
                ],
                "description": "Retrieve the version of the RRS Service",
                "operationId": "getVersion",
                "responses": {
                    "200": {
                        "description": "RRS Version",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ZonesResponse": {
                "type": "object",
                "required": [
                    "Zones"
                ],
                "properties": {
                    "Zones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ZoneItemSchema"
                        }
                    }
                }
            },
            "ZoneItemSchema": {
                "type": "object",
                "required": [
                    "Zone_Name"
                ],
                "properties": {
                    "Zone_Name": {
                        "type": "string"
                    },
                    "Kubernetes_Topology_Zone": {
                        "$ref": "#/components/schemas/KubernetesTopologyZoneSchema"
                    },
                    "CEPH_Zone": {
                        "$ref": "#/components/schemas/CephZoneSchema"
                    }
                }
            },
            "KubernetesTopologyZoneSchema": {
                "type": "object",
                "properties": {
                    "Management_Master_Nodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "Management_Worker_Nodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "CephZoneSchema": {
                "type": "object",
                "properties": {
                    "Management_Storage_Nodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ZoneDetailResponse": {
                "type": "object",
                "required": [
                    "Zone_Name"
                ],
                "properties": {
                    "Zone_Name": {
                        "type": "string"
                    },
                    "Management_Master": {
                        "$ref": "#/components/schemas/ManagementKubernetesSchema"
                    },
                    "Management_Worker": {
                        "$ref": "#/components/schemas/ManagementKubernetesSchema"
                    },
                    "Management_Storage": {
                        "$ref": "#/components/schemas/ManagementStorageSchema"
                    }
                }
            },
            "ManagementKubernetesSchema": {
                "type": "object",
                "required": [
                    "Count",
                    "Type",
                    "Nodes"
                ],
                "properties": {
                    "Count": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "Type": {
                        "type": "string",
                        "enum": [
                            "Kubernetes_Topology_Zone"
                        ]
                    },
                    "Nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeSchema"
                        }
                    }
                }
            },
            "ManagementStorageSchema": {
                "type": "object",
                "required": [
                    "Count",
                    "Type",
                    "Nodes"
                ],
                "properties": {
                    "Count": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "Type": {
                        "type": "string",
                        "enum": [
                            "CEPH_Zone"
                        ]
                    },
                    "Nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StorageNodeSchema"
                        }
                    }
                }
            },
            "NodeSchema": {
                "type": "object",
                "required": [
                    "name",
                    "status"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Ready",
                            "NotReady",
                            "Unknown"
                        ]
                    }
                }
            },
            "StorageNodeSchema": {
                "type": "object",
                "required": [
                    "name",
                    "status",
                    "osds"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Ready",
                            "NotReady"
                        ]
                    },
                    "osds": {
                        "type": "object",
                        "properties": {
                            "up": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "down": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "ServiceStatus": {
                "type": "string",
                "enum": [
                    "Configured",
                    "PartiallyConfigured",
                    "Running"
                ]
            },
            "ServiceBalanced": {
                "type": "string",
                "enum": [
                    "true",
                    "false",
                    "unknown"
                ]
            },
            "CriticalServicesListSchema": {
                "type": "object",
                "required": [
                    "critical_services"
                ],
                "properties": {
                    "critical_services": {
                        "type": "object",
                        "required": [
                            "namespace"
                        ],
                        "properties": {
                            "namespace": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CriticalServiceItemSchema"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "CriticalServiceItemSchema": {
                "type": "object",
                "required": [
                    "name",
                    "type"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "CriticalServicesPatch": {
                "type": "object",
                "description": "A collection of critical services that need to be monitored for resiliency.\nEach service is identified by name and contains namespace and type information.\n",
                "properties": {
                    "critical_services": {
                        "type": "object",
                        "description": "Mapping from service names to service configurations.\n",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/CriticalServiceConfig"
                        }
                    }
                },
                "additionalProperties": false,
                "required": [
                    "critical_services"
                ]
            },
            "CriticalServiceConfig": {
                "type": "object",
                "description": "Configuration details for a critical service",
                "properties": {
                    "namespace": {
                        "type": "string",
                        "description": "The Kubernetes namespace where the service is deployed",
                        "example": "rack-resiliency"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of Kubernetes resource",
                        "example": "Deployment",
                        "enum": [
                            "Deployment",
                            "DaemonSet",
                            "StatefulSet",
                            "Service",
                            "Pod"
                        ]
                    }
                },
                "additionalProperties": false,
                "required": [
                    "namespace",
                    "type"
                ]
            },
            "CriticalServiceUpdateSchema": {
                "type": "object",
                "required": [
                    "Update",
                    "Successfully_Added_Service",
                    "Already_Existing_Service"
                ],
                "properties": {
                    "Update": {
                        "type": "string"
                    },
                    "Successfully_Added_Services": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "Already_Existing_Services": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "CriticalServiceDescribeSchema": {
                "type": "object",
                "required": [
                    "Critical_Service"
                ],
                "properties": {
                    "Critical_Service": {
                        "type": "object",
                        "required": [
                            "Name",
                            "Namespace",
                            "Type",
                            "Configured_Instances"
                        ],
                        "properties": {
                            "Name": {
                                "type": "string"
                            },
                            "Namespace": {
                                "type": "string"
                            },
                            "Type": {
                                "type": "string"
                            },
                            "Configured_Instances": {
                                "type": "integer",
                                "minimum": 1,
                                "nullable": true
                            }
                        }
                    }
                }
            },
            "CriticalServiceStatusDescribeSchema": {
                "type": "object",
                "required": [
                    "Critical_Service"
                ],
                "properties": {
                    "Critical_Service": {
                        "type": "object",
                        "required": [
                            "Name",
                            "Namespace",
                            "Type",
                            "Status",
                            "Balanced",
                            "Configured_Instances",
                            "Currently_Running_Instances",
                            "Pods"
                        ],
                        "properties": {
                            "Name": {
                                "type": "string"
                            },
                            "Namespace": {
                                "type": "string"
                            },
                            "Type": {
                                "type": "string"
                            },
                            "Status": {
                                "$ref": "#/components/schemas/ServiceStatus"
                            },
                            "Balanced": {
                                "$ref": "#/components/schemas/ServiceStatus"
                            },
                            "Configured_Instances": {
                                "type": "integer",
                                "minimum": 1,
                                "nullable": true
                            },
                            "Currently_Running_Instances": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "Pods": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PodSchema"
                                }
                            }
                        }
                    }
                }
            },
            "PodSchema": {
                "type": "object",
                "required": [
                    "Name",
                    "Node",
                    "Status",
                    "Zone"
                ],
                "properties": {
                    "Name": {
                        "type": "string"
                    },
                    "Node": {
                        "type": "string"
                    },
                    "Status": {
                        "type": "string"
                    },
                    "Zone": {
                        "type": "string"
                    }
                }
            },
            "CriticalServicesStatusResponse": {
                "type": "object",
                "properties": {
                    "critical_services": {
                        "type": "object",
                        "properties": {
                            "namespace": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CriticalServiceStatusItemSchema"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "CriticalServiceStatusItemSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ServiceStatus"
                    },
                    "balanced": {
                        "$ref": "#/components/schemas/ServiceBalanced"
                    }
                }
            },
            "ErrorDict": {
                "type": "object",
                "required": [
                    "error"
                ],
                "properties": {
                    "error": {
                        "type": "string"
                    }
                }
            },
            "InformationDict": {
                "type": "object",
                "required": [
                    "Information"
                ],
                "properties": {
                    "Information": {
                        "type": "string"
                    }
                }
            },
            "EmptyDict": {
                "type": "object",
                "description": "Empty object returned by health check endpoints",
                "additionalProperties": false
            }
        },
        "responses": {
            "BadRequest": {
                "description": "Bad request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorDict"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ErrorDict"
                                },
                                {
                                    "$ref": "#/components/schemas/InformationDict"
                                }
                            ]
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "Internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorDict"
                        }
                    }
                }
            }
        }
    }
}
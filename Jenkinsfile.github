@Library('csm-shared-library') _

pipeline {
    agent {
        docker {
            label "metal-gcp-builder"
            image "arti.dev.cray.com/dstbuildenv-docker-master-local/cray-sle15sp2_build_environment:latest"
            // Run as root
            args "-u root"
        }
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "10"))
        timestamps()
    }

    environment {
        NAME = "craycli"
        DESCRIPTION = "Cray CLI Tool"
        IS_STABLE = getBuildIsStable()
        SPEC_FILE = "craycli.spec"
        BUILD_METADATA = getRpmRevision(isStable: env.IS_STABLE)
    }

    stages {
        stage("Prepare") {
            steps {
                sh "make prepare"
            }
        }

        stage("Build Prep") {
            steps {
                sh "make build_prep"
            }
        }

        stage("Build") {
            steps {
                sh "make build"
            }
        }

        stage('Publish ') {
            steps {
                script {
                    publishCsmRpms(component: env.NAME, pattern: "dist/rpmbuild/RPMS/x86_64/*.rpm", arch: "x86_64", isStable: env.IS_STABLE)
                    publishCsmRpms(component: env.NAME, pattern: "dist/rpmbuild/RPMS/*.rpm", arch: "src", isStable: env.IS_STABLE)
                }
            }
        }
    }

    post {
        always {
            // Own files so jenkins can clean them up later
            sh "sudo chown -R jenkins:jenkins ${env.WORKSPACE}"
        }
    }
}
